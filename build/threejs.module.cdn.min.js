import{Vector2 as Ht,WebGLRenderer as Tf,PerspectiveCamera as bc,Scene as Ef,PointLight as Af,DirectionalLight as Lf,AmbientLight as Cf,SplineCurve as Pf,Vector3 as gn,Color as Ar,OrthographicCamera as Rf,PlaneGeometry as Da,ShaderMaterial as Mc,Mesh as Sc,CanvasTexture as Df,HalfFloatType as vs,InstancedBufferAttribute as Ti,DoubleSide as ms,TextureLoader as Tc,MeshBasicMaterial as Ec,MeshPhongMaterial as Ac,MeshStandardMaterial as gs,InstancedMesh as ys,MathUtils as xs,SphereGeometry as Of,OctahedronGeometry as If,ConeGeometry as Nf,CapsuleGeometry as zf,BoxGeometry as Ff,BufferGeometry as Bf,Float32BufferAttribute as Lc,FogExp2 as Uf}from"https://unpkg.com/three@0.140.0/build/three.module.js";Number.EPSILON===void 0&&(Number.EPSILON=Math.pow(2,-52)),Number.isInteger===void 0&&(Number.isInteger=function(e){return typeof e=="number"&&isFinite(e)&&Math.floor(e)===e}),Math.sign===void 0&&(Math.sign=function(e){return e<0?-1:e>0?1:+e}),"name"in Function.prototype||Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),Object.assign===void 0&&(Object.assign=function(e){if(e==null)throw new TypeError("Cannot convert undefined or null to object");for(var t=Object(e),n=1;n<arguments.length;n++){var r=arguments[n];if(r!=null)for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(t[i]=r[i])}return t});var Gf="115",Rn={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Dn={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Hf=0,Cc=1,Vf=2,Pc=1,kf=2,Ei=3,Ai=0,dt=1,Oa=2,Rc=1,On=0,Li=1,Ia=2,Dc=3,Oc=4,Wf=5,Lr=100,jf=101,qf=102,Ic=103,Nc=104,Xf=200,Yf=201,Zf=202,Jf=203,zc=204,Fc=205,$f=206,Qf=207,Kf=208,ed=209,td=210,nd=0,rd=1,id=2,_s=3,ad=4,od=5,sd=6,ld=7,Na=0,cd=1,ud=2,za=0,ws=1,hd=2,fd=3,dd=4,pd=5,bs=300,Ms=301,Ss=302,Bc=303,Ts=304,Uc=305,Ci=306,Es=307,Fa=1e3,yt=1001,Ba=1002,tt=1003,As=1004,Ls=1005,nt=1006,Gc=1007,Ua=1008,Ga=1009,vd=1010,md=1011,Ha=1012,gd=1013,Va=1014,tn=1015,Pi=1016,yd=1017,xd=1018,_d=1019,Ri=1020,wd=1021,In=1022,Tt=1023,bd=1024,Md=1025,Sd=Tt,Cr=1026,Di=1027,Td=1028,Ed=1029,Ad=1030,Ld=1031,Cd=1032,Pd=1033,Hc=33776,Vc=33777,kc=33778,Wc=33779,jc=35840,qc=35841,Xc=35842,Yc=35843,Rd=36196,Zc=37492,Jc=37496,Dd=37808,Od=37809,Id=37810,Nd=37811,zd=37812,Fd=37813,Bd=37814,Ud=37815,Gd=37816,Hd=37817,Vd=37818,kd=37819,Wd=37820,jd=37821,qd=36492,Xd=37840,Yd=37841,Zd=37842,Jd=37843,$d=37844,Qd=37845,Kd=37846,ep=37847,tp=37848,np=37849,rp=37850,ip=37851,ap=37852,op=37853,sp=2200,lp=2201,cp=2202,ka=2300,Wa=2301,Cs=2302,Pr=2400,Rr=2401,ja=2402,up=0,Ot=3e3,Ps=3001,$c=3007,Rs=3002,hp=3003,Qc=3004,Kc=3005,eu=3006,fp=3200,dp=3201,Dr=0,pp=1,Ds=7680,vp=519,qa=35044,Oi=35048;function Yt(){}Object.assign(Yt.prototype,{addEventListener:function(e,t){this._listeners===void 0&&(this._listeners={});var n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)},hasEventListener:function(e,t){if(this._listeners===void 0)return!1;var n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1},removeEventListener:function(e,t){if(this._listeners!==void 0){var n=this._listeners,r=n[e];if(r!==void 0){var i=r.indexOf(t);i!==-1&&r.splice(i,1)}}},dispatchEvent:function(e){if(this._listeners!==void 0){var t=this._listeners,n=t[e.type];if(n!==void 0){e.target=this;for(var r=n.slice(0),i=0,a=r.length;i<a;i++)r[i].call(this,e)}}}});for(var pt=[],Ii=0;Ii<256;Ii++)pt[Ii]=(Ii<16?"0":"")+Ii.toString(16);var Le={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0,r=Math.random()*4294967295|0,i=pt[e&255]+pt[e>>8&255]+pt[e>>16&255]+pt[e>>24&255]+"-"+pt[t&255]+pt[t>>8&255]+"-"+pt[t>>16&15|64]+pt[t>>24&255]+"-"+pt[n&63|128]+pt[n>>8&255]+"-"+pt[n>>16&255]+pt[n>>24&255]+pt[r&255]+pt[r>>8&255]+pt[r>>16&255]+pt[r>>24&255];return i.toUpperCase()},clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,n,r,i){return r+(e-t)*(i-r)/(n-t)},lerp:function(e,t,n){return(1-n)*e+n*t},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*(3-2*e))},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*e*(e*(e*6-15)+10))},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(e){return e*Le.DEG2RAD},radToDeg:function(e){return e*Le.RAD2DEG},isPowerOfTwo:function(e){return(e&e-1)===0&&e!==0},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,n,r,i){var a=Math.cos,o=Math.sin,s=a(n/2),l=o(n/2),c=a((t+r)/2),u=o((t+r)/2),h=a((t-r)/2),f=o((t-r)/2),d=a((r-t)/2),p=o((r-t)/2);i==="XYX"?e.set(s*u,l*h,l*f,s*c):i==="YZY"?e.set(l*f,s*u,l*h,s*c):i==="ZXZ"?e.set(l*h,l*f,s*u,s*c):i==="XZX"?e.set(s*u,l*p,l*d,s*c):i==="YXY"?e.set(l*d,s*u,l*p,s*c):i==="ZYZ"?e.set(l*p,l*d,s*u,s*c):console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order.")}};function j(e,t){this.x=e||0,this.y=t||0}Object.defineProperties(j.prototype,{width:{get:function(){return this.x},set:function(e){this.x=e}},height:{get:function(){return this.y},set:function(e){this.y=e}}}),Object.assign(j.prototype,{isVector2:!0,set:function(e,t){return this.x=e,this.y=t,this},setScalar:function(e){return this.x=e,this.y=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},applyMatrix3:function(e){var t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this},clampLength:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},cross:function(e){return this.x*e.y-this.y*e.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var e=Math.atan2(-this.y,-this.x)+Math.PI;return e},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y;return t*t+n*n},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromBufferAttribute:function(e,t,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this},rotateAround:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=this.x-e.x,a=this.y-e.y;return this.x=i*n-a*r+e.x,this.y=i*r+a*n+e.y,this}});function Et(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}Object.assign(Et.prototype,{isMatrix3:!0,set:function(e,t,n,r,i,a,o,s,l){var c=this.elements;return c[0]=e,c[1]=r,c[2]=o,c[3]=t,c[4]=i,c[5]=s,c[6]=n,c[7]=a,c[8]=l,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return new this.constructor().fromArray(this.elements)},copy:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this},extractBasis:function(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this},setFromMatrix4:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var n=e.elements,r=t.elements,i=this.elements,a=n[0],o=n[3],s=n[6],l=n[1],c=n[4],u=n[7],h=n[2],f=n[5],d=n[8],p=r[0],v=r[3],m=r[6],g=r[1],x=r[4],b=r[7],S=r[2],w=r[5],T=r[8];return i[0]=a*p+o*g+s*S,i[3]=a*v+o*x+s*w,i[6]=a*m+o*b+s*T,i[1]=l*p+c*g+u*S,i[4]=l*v+c*x+u*w,i[7]=l*m+c*b+u*T,i[2]=h*p+f*g+d*S,i[5]=h*v+f*x+d*w,i[8]=h*m+f*b+d*T,this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],o=e[5],s=e[6],l=e[7],c=e[8];return t*a*c-t*o*l-n*i*c+n*o*s+r*i*l-r*a*s},getInverse:function(e,t){t!==void 0&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");var n=e.elements,r=this.elements,i=n[0],a=n[1],o=n[2],s=n[3],l=n[4],c=n[5],u=n[6],h=n[7],f=n[8],d=f*l-c*h,p=c*u-f*s,v=h*s-l*u,m=i*d+a*p+o*v;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);var g=1/m;return r[0]=d*g,r[1]=(o*h-f*a)*g,r[2]=(c*a-o*l)*g,r[3]=p*g,r[4]=(f*i-o*u)*g,r[5]=(o*s-c*i)*g,r[6]=v*g,r[7]=(a*u-h*i)*g,r[8]=(l*i-a*s)*g,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},setUvTransform:function(e,t,n,r,i,a,o){var s=Math.cos(i),l=Math.sin(i);this.set(n*s,n*l,-n*(s*a+l*o)+a+e,-r*l,r*s,-r*(-l*a+s*o)+o+t,0,0,1)},scale:function(e,t){var n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this},rotate:function(e){var t=Math.cos(e),n=Math.sin(e),r=this.elements,i=r[0],a=r[3],o=r[6],s=r[1],l=r[4],c=r[7];return r[0]=t*i+n*s,r[3]=t*a+n*l,r[6]=t*o+n*c,r[1]=-n*i+t*s,r[4]=-n*a+t*l,r[7]=-n*o+t*c,this},translate:function(e,t){var n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this},equals:function(e){for(var t=this.elements,n=e.elements,r=0;r<9;r++)if(t[r]!==n[r])return!1;return!0},fromArray:function(e,t){t===void 0&&(t=0);for(var n=0;n<9;n++)this.elements[n]=e[n+t];return this},toArray:function(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}});var Or,er={getDataURL:function(e){var t;if(typeof HTMLCanvasElement=="undefined")return e.src;if(e instanceof HTMLCanvasElement)t=e;else{Or===void 0&&(Or=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Or.width=e.width,Or.height=e.height;var n=Or.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Or}return t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}},mp=0;function Xe(e,t,n,r,i,a,o,s,l,c){Object.defineProperty(this,"id",{value:mp++}),this.uuid=Le.generateUUID(),this.name="",this.image=e!==void 0?e:Xe.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=t!==void 0?t:Xe.DEFAULT_MAPPING,this.wrapS=n!==void 0?n:yt,this.wrapT=r!==void 0?r:yt,this.magFilter=i!==void 0?i:nt,this.minFilter=a!==void 0?a:Ua,this.anisotropy=l!==void 0?l:1,this.format=o!==void 0?o:Tt,this.internalFormat=null,this.type=s!==void 0?s:Ga,this.offset=new j(0,0),this.repeat=new j(1,1),this.center=new j(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Et,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c!==void 0?c:Ot,this.version=0,this.onUpdate=null}Xe.DEFAULT_IMAGE=void 0,Xe.DEFAULT_MAPPING=bs,Xe.prototype=Object.assign(Object.create(Yt.prototype),{constructor:Xe,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){var t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];var n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){var r=this.image;if(r.uuid===void 0&&(r.uuid=Le.generateUUID()),!t&&e.images[r.uuid]===void 0){var i;if(Array.isArray(r)){i=[];for(var a=0,o=r.length;a<o;a++)i.push(er.getDataURL(r[a]))}else i=er.getDataURL(r);e.images[r.uuid]={uuid:r.uuid,url:i}}n.image=r.uuid}return t||(e.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping!==bs)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Fa:e.x=e.x-Math.floor(e.x);break;case yt:e.x=e.x<0?0:1;break;case Ba:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Fa:e.y=e.y-Math.floor(e.y);break;case yt:e.y=e.y<0?0:1;break;case Ba:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}}),Object.defineProperty(Xe.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});function Ye(e,t,n,r){this.x=e||0,this.y=t||0,this.z=n||0,this.w=r!==void 0?r:1}Object.defineProperties(Ye.prototype,{width:{get:function(){return this.z},set:function(e){this.z=e}},height:{get:function(){return this.w},set:function(e){this.w=e}}}),Object.assign(Ye.prototype,{isVector4:!0,set:function(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this},add:function(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,i=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*r+a[12]*i,this.y=a[1]*t+a[5]*n+a[9]*r+a[13]*i,this.z=a[2]*t+a[6]*n+a[10]*r+a[14]*i,this.w=a[3]*t+a[7]*n+a[11]*r+a[15]*i,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,n,r,i,a=.01,o=.1,s=e.elements,l=s[0],c=s[4],u=s[8],h=s[1],f=s[5],d=s[9],p=s[2],v=s[6],m=s[10];if(Math.abs(c-h)<a&&Math.abs(u-p)<a&&Math.abs(d-v)<a){if(Math.abs(c+h)<o&&Math.abs(u+p)<o&&Math.abs(d+v)<o&&Math.abs(l+f+m-3)<o)return this.set(1,0,0,0),this;t=Math.PI;var g=(l+1)/2,x=(f+1)/2,b=(m+1)/2,S=(c+h)/4,w=(u+p)/4,T=(d+v)/4;return g>x&&g>b?g<a?(n=0,r=.707106781,i=.707106781):(n=Math.sqrt(g),r=S/n,i=w/n):x>b?x<a?(n=.707106781,r=0,i=.707106781):(r=Math.sqrt(x),n=S/r,i=T/r):b<a?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(b),n=w/i,r=T/i),this.set(n,r,i,t),this}var L=Math.sqrt((v-d)*(v-d)+(u-p)*(u-p)+(h-c)*(h-c));return Math.abs(L)<.001&&(L=1),this.x=(v-d)/L,this.y=(u-p)/L,this.z=(h-c)/L,this.w=Math.acos((l+f+m-1)/2),this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this},clampLength:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromBufferAttribute:function(e,t,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}});function vt(e,t,n){this.width=e,this.height=t,this.scissor=new Ye(0,0,e,t),this.scissorTest=!1,this.viewport=new Ye(0,0,e,t),n=n||{},this.texture=new Xe(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:nt,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!0,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null}vt.prototype=Object.assign(Object.create(Yt.prototype),{constructor:vt,isWebGLRenderTarget:!0,setSize:function(e,t){(this.width!==e||this.height!==t)&&(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function tu(e,t,n){vt.call(this,e,t,n),this.samples=4}tu.prototype=Object.assign(Object.create(vt.prototype),{constructor:tu,isWebGLMultisampleRenderTarget:!0,copy:function(e){return vt.prototype.copy.call(this,e),this.samples=e.samples,this}});function xt(e,t,n,r){this._x=e||0,this._y=t||0,this._z=n||0,this._w=r!==void 0?r:1}Object.assign(xt,{slerp:function(e,t,n,r){return n.copy(e).slerp(t,r)},slerpFlat:function(e,t,n,r,i,a,o){var s=n[r+0],l=n[r+1],c=n[r+2],u=n[r+3],h=i[a+0],f=i[a+1],d=i[a+2],p=i[a+3];if(u!==p||s!==h||l!==f||c!==d){var v=1-o,m=s*h+l*f+c*d+u*p,g=m>=0?1:-1,x=1-m*m;if(x>Number.EPSILON){var b=Math.sqrt(x),S=Math.atan2(b,m*g);v=Math.sin(v*S)/b,o=Math.sin(o*S)/b}var w=o*g;if(s=s*v+h*w,l=l*v+f*w,c=c*v+d*w,u=u*v+p*w,v===1-o){var T=1/Math.sqrt(s*s+l*l+c*c+u*u);s*=T,l*=T,c*=T,u*=T}}e[t]=s,e[t+1]=l,e[t+2]=c,e[t+3]=u}}),Object.defineProperties(xt.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},w:{get:function(){return this._w},set:function(e){this._w=e,this._onChangeCallback()}}}),Object.assign(xt.prototype,{isQuaternion:!0,set:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this},setFromEuler:function(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var n=e._x,r=e._y,i=e._z,a=e.order,o=Math.cos,s=Math.sin,l=o(n/2),c=o(r/2),u=o(i/2),h=s(n/2),f=s(r/2),d=s(i/2);return a==="XYZ"?(this._x=h*c*u+l*f*d,this._y=l*f*u-h*c*d,this._z=l*c*d+h*f*u,this._w=l*c*u-h*f*d):a==="YXZ"?(this._x=h*c*u+l*f*d,this._y=l*f*u-h*c*d,this._z=l*c*d-h*f*u,this._w=l*c*u+h*f*d):a==="ZXY"?(this._x=h*c*u-l*f*d,this._y=l*f*u+h*c*d,this._z=l*c*d+h*f*u,this._w=l*c*u-h*f*d):a==="ZYX"?(this._x=h*c*u-l*f*d,this._y=l*f*u+h*c*d,this._z=l*c*d-h*f*u,this._w=l*c*u+h*f*d):a==="YZX"?(this._x=h*c*u+l*f*d,this._y=l*f*u+h*c*d,this._z=l*c*d-h*f*u,this._w=l*c*u-h*f*d):a==="XZY"&&(this._x=h*c*u-l*f*d,this._y=l*f*u-h*c*d,this._z=l*c*d+h*f*u,this._w=l*c*u+h*f*d),t!==!1&&this._onChangeCallback(),this},setFromAxisAngle:function(e,t){var n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this},setFromRotationMatrix:function(e){var t=e.elements,n=t[0],r=t[4],i=t[8],a=t[1],o=t[5],s=t[9],l=t[2],c=t[6],u=t[10],h=n+o+u,f;return h>0?(f=.5/Math.sqrt(h+1),this._w=.25/f,this._x=(c-s)*f,this._y=(i-l)*f,this._z=(a-r)*f):n>o&&n>u?(f=2*Math.sqrt(1+n-o-u),this._w=(c-s)/f,this._x=.25*f,this._y=(r+a)/f,this._z=(i+l)/f):o>u?(f=2*Math.sqrt(1+o-n-u),this._w=(i-l)/f,this._x=(r+a)/f,this._y=.25*f,this._z=(s+c)/f):(f=2*Math.sqrt(1+u-n-o),this._w=(a-r)/f,this._x=(i+l)/f,this._y=(s+c)/f,this._z=.25*f),this._onChangeCallback(),this},setFromUnitVectors:function(e,t){var n=1e-6,r=e.dot(t)+1;return r<n?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=r):(this._x=0,this._y=-e.z,this._z=e.y,this._w=r)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=r),this.normalize()},angleTo:function(e){return 2*Math.acos(Math.abs(Le.clamp(this.dot(e),-1,1)))},rotateTowards:function(e,t){var n=this.angleTo(e);if(n===0)return this;var r=Math.min(1,t/n);return this.slerp(e,r),this},inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this},multiply:function(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){var n=e._x,r=e._y,i=e._z,a=e._w,o=t._x,s=t._y,l=t._z,c=t._w;return this._x=n*c+a*o+r*l-i*s,this._y=r*c+a*s+i*o-n*l,this._z=i*c+a*l+n*s-r*o,this._w=a*c-n*o-r*s-i*l,this._onChangeCallback(),this},slerp:function(e,t){if(t===0)return this;if(t===1)return this.copy(e);var n=this._x,r=this._y,i=this._z,a=this._w,o=a*e._w+n*e._x+r*e._y+i*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=r,this._z=i,this;var s=1-o*o;if(s<=Number.EPSILON){var l=1-t;return this._w=l*a+t*this._w,this._x=l*n+t*this._x,this._y=l*r+t*this._y,this._z=l*i+t*this._z,this.normalize(),this._onChangeCallback(),this}var c=Math.sqrt(s),u=Math.atan2(c,o),h=Math.sin((1-t)*u)/c,f=Math.sin(t*u)/c;return this._w=a*h+this._w*f,this._x=n*h+this._x*f,this._y=r*h+this._y*f,this._z=i*h+this._z*f,this._onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return t===void 0&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},fromBufferAttribute:function(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this},_onChange:function(e){return this._onChangeCallback=e,this},_onChangeCallback:function(){}});var Os=new M,nu=new xt;function M(e,t,n){this.x=e||0,this.y=t||0,this.z=n||0}Object.assign(M.prototype,{isVector3:!0,set:function(e,t,n){return this.x=e,this.y=t,this.z=n,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(nu.setFromEuler(e))},applyAxisAngle:function(e,t){return this.applyQuaternion(nu.setFromAxisAngle(e,t))},applyMatrix3:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6]*r,this.y=i[1]*t+i[4]*n+i[7]*r,this.z=i[2]*t+i[5]*n+i[8]*r,this},applyNormalMatrix:function(e){return this.applyMatrix3(e).normalize()},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements,a=1/(i[3]*t+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*t+i[4]*n+i[8]*r+i[12])*a,this.y=(i[1]*t+i[5]*n+i[9]*r+i[13])*a,this.z=(i[2]*t+i[6]*n+i[10]*r+i[14])*a,this},applyQuaternion:function(e){var t=this.x,n=this.y,r=this.z,i=e.x,a=e.y,o=e.z,s=e.w,l=s*t+a*r-o*n,c=s*n+o*t-i*r,u=s*r+i*n-a*t,h=-i*t-a*n-o*r;return this.x=l*s+h*-i+c*-o-u*-a,this.y=c*s+h*-a+u*-i-l*-o,this.z=u*s+h*-o+l*-a-c*-i,this},project:function(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)},unproject:function(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)},transformDirection:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*r,this.y=i[1]*t+i[5]*n+i[9]*r,this.z=i[2]*t+i[6]*n+i[10]*r,this.normalize()},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this},clampLength:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},cross:function(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)},crossVectors:function(e,t){var n=e.x,r=e.y,i=e.z,a=t.x,o=t.y,s=t.z;return this.x=r*s-i*o,this.y=i*a-n*s,this.z=n*o-r*a,this},projectOnVector:function(e){var t=e.lengthSq();if(t===0)return this.set(0,0,0);var n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)},projectOnPlane:function(e){return Os.copy(this).projectOnVector(e),this.sub(Os)},reflect:function(e){return this.sub(Os.copy(e).multiplyScalar(2*this.dot(e)))},angleTo:function(e){var t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;var n=this.dot(e)/t;return Math.acos(Le.clamp(n,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)},setFromSpherical:function(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)},setFromSphericalCoords:function(e,t,n){var r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this},setFromCylindrical:function(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)},setFromCylindricalCoords:function(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this},setFromMatrixPosition:function(e){var t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this},setFromMatrixScale:function(e){var t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this},setFromMatrixColumn:function(e,t){return this.fromArray(e.elements,t*4)},setFromMatrix3Column:function(e,t){return this.fromArray(e.elements,t*3)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromBufferAttribute:function(e,t,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}});var Ir=new M,Zt=new De,gp=new M(0,0,0),yp=new M(1,1,1),Nn=new M,Xa=new M,It=new M;function De(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}Object.assign(De.prototype,{isMatrix4:!0,set:function(e,t,n,r,i,a,o,s,l,c,u,h,f,d,p,v){var m=this.elements;return m[0]=e,m[4]=t,m[8]=n,m[12]=r,m[1]=i,m[5]=a,m[9]=o,m[13]=s,m[2]=l,m[6]=c,m[10]=u,m[14]=h,m[3]=f,m[7]=d,m[11]=p,m[15]=v,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return new De().fromArray(this.elements)},copy:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this},copyPosition:function(e){var t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this},extractBasis:function(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this},makeBasis:function(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this},extractRotation:function(e){var t=this.elements,n=e.elements,r=1/Ir.setFromMatrixColumn(e,0).length(),i=1/Ir.setFromMatrixColumn(e,1).length(),a=1/Ir.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*i,t[5]=n[5]*i,t[6]=n[6]*i,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromEuler:function(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,n=e.x,r=e.y,i=e.z,a=Math.cos(n),o=Math.sin(n),s=Math.cos(r),l=Math.sin(r),c=Math.cos(i),u=Math.sin(i);if(e.order==="XYZ"){var h=a*c,f=a*u,d=o*c,p=o*u;t[0]=s*c,t[4]=-s*u,t[8]=l,t[1]=f+d*l,t[5]=h-p*l,t[9]=-o*s,t[2]=p-h*l,t[6]=d+f*l,t[10]=a*s}else if(e.order==="YXZ"){var v=s*c,m=s*u,g=l*c,x=l*u;t[0]=v+x*o,t[4]=g*o-m,t[8]=a*l,t[1]=a*u,t[5]=a*c,t[9]=-o,t[2]=m*o-g,t[6]=x+v*o,t[10]=a*s}else if(e.order==="ZXY"){var v=s*c,m=s*u,g=l*c,x=l*u;t[0]=v-x*o,t[4]=-a*u,t[8]=g+m*o,t[1]=m+g*o,t[5]=a*c,t[9]=x-v*o,t[2]=-a*l,t[6]=o,t[10]=a*s}else if(e.order==="ZYX"){var h=a*c,f=a*u,d=o*c,p=o*u;t[0]=s*c,t[4]=d*l-f,t[8]=h*l+p,t[1]=s*u,t[5]=p*l+h,t[9]=f*l-d,t[2]=-l,t[6]=o*s,t[10]=a*s}else if(e.order==="YZX"){var b=a*s,S=a*l,w=o*s,T=o*l;t[0]=s*c,t[4]=T-b*u,t[8]=w*u+S,t[1]=u,t[5]=a*c,t[9]=-o*c,t[2]=-l*c,t[6]=S*u+w,t[10]=b-T*u}else if(e.order==="XZY"){var b=a*s,S=a*l,w=o*s,T=o*l;t[0]=s*c,t[4]=-u,t[8]=l*c,t[1]=b*u+T,t[5]=a*c,t[9]=S*u-w,t[2]=w*u-S,t[6]=o*c,t[10]=T*u+b}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromQuaternion:function(e){return this.compose(gp,e,yp)},lookAt:function(e,t,n){var r=this.elements;return It.subVectors(e,t),It.lengthSq()===0&&(It.z=1),It.normalize(),Nn.crossVectors(n,It),Nn.lengthSq()===0&&(Math.abs(n.z)===1?It.x+=1e-4:It.z+=1e-4,It.normalize(),Nn.crossVectors(n,It)),Nn.normalize(),Xa.crossVectors(It,Nn),r[0]=Nn.x,r[4]=Xa.x,r[8]=It.x,r[1]=Nn.y,r[5]=Xa.y,r[9]=It.y,r[2]=Nn.z,r[6]=Xa.z,r[10]=It.z,this},multiply:function(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var n=e.elements,r=t.elements,i=this.elements,a=n[0],o=n[4],s=n[8],l=n[12],c=n[1],u=n[5],h=n[9],f=n[13],d=n[2],p=n[6],v=n[10],m=n[14],g=n[3],x=n[7],b=n[11],S=n[15],w=r[0],T=r[4],L=r[8],I=r[12],C=r[1],z=r[5],N=r[9],B=r[13],U=r[2],F=r[6],R=r[10],G=r[14],k=r[3],q=r[7],H=r[11],V=r[15];return i[0]=a*w+o*C+s*U+l*k,i[4]=a*T+o*z+s*F+l*q,i[8]=a*L+o*N+s*R+l*H,i[12]=a*I+o*B+s*G+l*V,i[1]=c*w+u*C+h*U+f*k,i[5]=c*T+u*z+h*F+f*q,i[9]=c*L+u*N+h*R+f*H,i[13]=c*I+u*B+h*G+f*V,i[2]=d*w+p*C+v*U+m*k,i[6]=d*T+p*z+v*F+m*q,i[10]=d*L+p*N+v*R+m*H,i[14]=d*I+p*B+v*G+m*V,i[3]=g*w+x*C+b*U+S*k,i[7]=g*T+x*z+b*F+S*q,i[11]=g*L+x*N+b*R+S*H,i[15]=g*I+x*B+b*G+S*V,this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},determinant:function(){var e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],a=e[1],o=e[5],s=e[9],l=e[13],c=e[2],u=e[6],h=e[10],f=e[14],d=e[3],p=e[7],v=e[11],m=e[15];return d*(+i*s*u-r*l*u-i*o*h+n*l*h+r*o*f-n*s*f)+p*(+t*s*f-t*l*h+i*a*h-r*a*f+r*l*c-i*s*c)+v*(+t*l*u-t*o*f-i*a*u+n*a*f+i*o*c-n*l*c)+m*(-r*o*c-t*s*u+t*o*h+r*a*u-n*a*h+n*s*c)},transpose:function(){var e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(e,t,n){var r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this},getInverse:function(e,t){t!==void 0&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");var n=this.elements,r=e.elements,i=r[0],a=r[1],o=r[2],s=r[3],l=r[4],c=r[5],u=r[6],h=r[7],f=r[8],d=r[9],p=r[10],v=r[11],m=r[12],g=r[13],x=r[14],b=r[15],S=d*x*h-g*p*h+g*u*v-c*x*v-d*u*b+c*p*b,w=m*p*h-f*x*h-m*u*v+l*x*v+f*u*b-l*p*b,T=f*g*h-m*d*h+m*c*v-l*g*v-f*c*b+l*d*b,L=m*d*u-f*g*u-m*c*p+l*g*p+f*c*x-l*d*x,I=i*S+a*w+o*T+s*L;if(I===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);var C=1/I;return n[0]=S*C,n[1]=(g*p*s-d*x*s-g*o*v+a*x*v+d*o*b-a*p*b)*C,n[2]=(c*x*s-g*u*s+g*o*h-a*x*h-c*o*b+a*u*b)*C,n[3]=(d*u*s-c*p*s-d*o*h+a*p*h+c*o*v-a*u*v)*C,n[4]=w*C,n[5]=(f*x*s-m*p*s+m*o*v-i*x*v-f*o*b+i*p*b)*C,n[6]=(m*u*s-l*x*s-m*o*h+i*x*h+l*o*b-i*u*b)*C,n[7]=(l*p*s-f*u*s+f*o*h-i*p*h-l*o*v+i*u*v)*C,n[8]=T*C,n[9]=(m*d*s-f*g*s-m*a*v+i*g*v+f*a*b-i*d*b)*C,n[10]=(l*g*s-m*c*s+m*a*h-i*g*h-l*a*b+i*c*b)*C,n[11]=(f*c*s-l*d*s-f*a*h+i*d*h+l*a*v-i*c*v)*C,n[12]=L*C,n[13]=(f*g*o-m*d*o+m*a*p-i*g*p-f*a*x+i*d*x)*C,n[14]=(m*c*o-l*g*o-m*a*u+i*g*u+l*a*x-i*c*x)*C,n[15]=(l*d*o-f*c*o+f*a*u-i*d*u-l*a*p+i*c*p)*C,this},scale:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z;return t[0]*=n,t[4]*=r,t[8]*=i,t[1]*=n,t[5]*=r,t[9]*=i,t[2]*=n,t[6]*=r,t[10]*=i,t[3]*=n,t[7]*=r,t[11]*=i,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))},makeTranslation:function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=1-n,a=e.x,o=e.y,s=e.z,l=i*a,c=i*o;return this.set(l*a+n,l*o-r*s,l*s+r*o,0,l*o+r*s,c*o+n,c*s-r*a,0,l*s-r*o,c*s+r*a,i*s*s+n,0,0,0,0,1),this},makeScale:function(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this},makeShear:function(e,t,n){return this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1),this},compose:function(e,t,n){var r=this.elements,i=t._x,a=t._y,o=t._z,s=t._w,l=i+i,c=a+a,u=o+o,h=i*l,f=i*c,d=i*u,p=a*c,v=a*u,m=o*u,g=s*l,x=s*c,b=s*u,S=n.x,w=n.y,T=n.z;return r[0]=(1-(p+m))*S,r[1]=(f+b)*S,r[2]=(d-x)*S,r[3]=0,r[4]=(f-b)*w,r[5]=(1-(h+m))*w,r[6]=(v+g)*w,r[7]=0,r[8]=(d+x)*T,r[9]=(v-g)*T,r[10]=(1-(h+p))*T,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this},decompose:function(e,t,n){var r=this.elements,i=Ir.set(r[0],r[1],r[2]).length(),a=Ir.set(r[4],r[5],r[6]).length(),o=Ir.set(r[8],r[9],r[10]).length(),s=this.determinant();s<0&&(i=-i),e.x=r[12],e.y=r[13],e.z=r[14],Zt.copy(this);var l=1/i,c=1/a,u=1/o;return Zt.elements[0]*=l,Zt.elements[1]*=l,Zt.elements[2]*=l,Zt.elements[4]*=c,Zt.elements[5]*=c,Zt.elements[6]*=c,Zt.elements[8]*=u,Zt.elements[9]*=u,Zt.elements[10]*=u,t.setFromRotationMatrix(Zt),n.x=i,n.y=a,n.z=o,this},makePerspective:function(e,t,n,r,i,a){a===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var o=this.elements,s=2*i/(t-e),l=2*i/(n-r),c=(t+e)/(t-e),u=(n+r)/(n-r),h=-(a+i)/(a-i),f=-2*a*i/(a-i);return o[0]=s,o[4]=0,o[8]=c,o[12]=0,o[1]=0,o[5]=l,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=h,o[14]=f,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function(e,t,n,r,i,a){var o=this.elements,s=1/(t-e),l=1/(n-r),c=1/(a-i),u=(t+e)*s,h=(n+r)*l,f=(a+i)*c;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2*l,o[9]=0,o[13]=-h,o[2]=0,o[6]=0,o[10]=-2*c,o[14]=-f,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(e){for(var t=this.elements,n=e.elements,r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0},fromArray:function(e,t){t===void 0&&(t=0);for(var n=0;n<16;n++)this.elements[n]=e[n+t];return this},toArray:function(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}});var ru=new De,iu=new xt;function Nr(e,t,n,r){this._x=e||0,this._y=t||0,this._z=n||0,this._order=r||Nr.DefaultOrder}Nr.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],Nr.DefaultOrder="XYZ",Object.defineProperties(Nr.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},order:{get:function(){return this._order},set:function(e){this._order=e,this._onChangeCallback()}}}),Object.assign(Nr.prototype,{isEuler:!0,set:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._order=r||this._order,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this},setFromRotationMatrix:function(e,t,n){var r=Le.clamp,i=e.elements,a=i[0],o=i[4],s=i[8],l=i[1],c=i[5],u=i[9],h=i[2],f=i[6],d=i[10];return t=t||this._order,t==="XYZ"?(this._y=Math.asin(r(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(f,c),this._z=0)):t==="YXZ"?(this._x=Math.asin(-r(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(s,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,a),this._z=0)):t==="ZXY"?(this._x=Math.asin(r(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,a))):t==="ZYX"?(this._y=Math.asin(-r(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,a)):(this._x=0,this._z=Math.atan2(-o,c))):t==="YZX"?(this._z=Math.asin(r(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,a)):(this._x=0,this._y=Math.atan2(s,d))):t==="XZY"?(this._z=Math.asin(-r(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(s,a)):(this._x=Math.atan2(-u,d),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t),this._order=t,n!==!1&&this._onChangeCallback(),this},setFromQuaternion:function(e,t,n){return ru.makeRotationFromQuaternion(e),this.setFromRotationMatrix(ru,t,n)},setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(e){return iu.setFromEuler(this),this.setFromQuaternion(iu,e)},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new M(this._x,this._y,this._z)},_onChange:function(e){return this._onChangeCallback=e,this},_onChangeCallback:function(){}});function Is(){this.mask=1}Object.assign(Is.prototype,{set:function(e){this.mask=1<<e|0},enable:function(e){this.mask|=1<<e|0},enableAll:function(){this.mask=-1},toggle:function(e){this.mask^=1<<e|0},disable:function(e){this.mask&=~(1<<e|0)},disableAll:function(){this.mask=0},test:function(e){return(this.mask&e.mask)!==0}});var xp=0,au=new M,zr=new xt,yn=new De,Ya=new M,Ni=new M,_p=new M,wp=new xt,ou=new M(1,0,0),su=new M(0,1,0),lu=new M(0,0,1),bp={type:"added"},Mp={type:"removed"};function ne(){Object.defineProperty(this,"id",{value:xp++}),this.uuid=Le.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ne.DefaultUp.clone();var e=new M,t=new Nr,n=new xt,r=new M(1,1,1);function i(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(i),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new De},normalMatrix:{value:new Et}}),this.matrix=new De,this.matrixWorld=new De,this.matrixAutoUpdate=ne.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Is,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}ne.DefaultUp=new M(0,1,0),ne.DefaultMatrixAutoUpdate=!0,ne.prototype=Object.assign(Object.create(Yt.prototype),{constructor:ne,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(e,t){return zr.setFromAxisAngle(e,t),this.quaternion.multiply(zr),this},rotateOnWorldAxis:function(e,t){return zr.setFromAxisAngle(e,t),this.quaternion.premultiply(zr),this},rotateX:function(e){return this.rotateOnAxis(ou,e)},rotateY:function(e){return this.rotateOnAxis(su,e)},rotateZ:function(e){return this.rotateOnAxis(lu,e)},translateOnAxis:function(e,t){return au.copy(e).applyQuaternion(this.quaternion),this.position.add(au.multiplyScalar(t)),this},translateX:function(e){return this.translateOnAxis(ou,e)},translateY:function(e){return this.translateOnAxis(su,e)},translateZ:function(e){return this.translateOnAxis(lu,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(yn.getInverse(this.matrixWorld))},lookAt:function(e,t,n){e.isVector3?Ya.copy(e):Ya.set(e,t,n);var r=this.parent;this.updateWorldMatrix(!0,!1),Ni.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?yn.lookAt(Ni,Ya,this.up):yn.lookAt(Ya,Ni,this.up),this.quaternion.setFromRotationMatrix(yn),r&&(yn.extractRotation(r.matrixWorld),zr.setFromRotationMatrix(yn),this.quaternion.premultiply(zr.inverse()))},add:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(bp)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}var n=this.children.indexOf(e);return n!==-1&&(e.parent=null,this.children.splice(n,1),e.dispatchEvent(Mp)),this},attach:function(e){return this.updateWorldMatrix(!0,!1),yn.getInverse(this.matrixWorld),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),yn.multiply(e.parent.matrixWorld)),e.applyMatrix4(yn),e.updateWorldMatrix(!1,!1),this.add(e),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var n=0,r=this.children.length;n<r;n++){var i=this.children[n],a=i.getObjectByProperty(e,t);if(a!==void 0)return a}},getWorldPosition:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new M),this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new xt),this.updateMatrixWorld(!0),this.matrixWorld.decompose(Ni,e,_p),e},getWorldScale:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new M),this.updateMatrixWorld(!0),this.matrixWorld.decompose(Ni,wp,e),e},getWorldDirection:function(e){e===void 0&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new M),this.updateMatrixWorld(!0);var t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()},raycast:function(){},traverse:function(e){e(this);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].traverse(e)},traverseVisible:function(e){if(this.visible!==!1){e(this);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}},traverseAncestors:function(e){var t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].updateMatrixWorld(e)},updateWorldMatrix:function(e,t){var n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0)for(var r=this.children,i=0,a=r.length;i<a;i++)r[i].updateWorldMatrix(!1,!0)},toJSON:function(e){var t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON());function i(m,g){return m[g.uuid]===void 0&&(m[g.uuid]=g.toJSON(e)),g.uuid}if(this.isMesh||this.isLine||this.isPoints){r.geometry=i(e.geometries,this.geometry);var a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){var o=a.shapes;if(Array.isArray(o))for(var s=0,l=o.length;s<l;s++){var c=o[s];i(e.shapes,c)}else i(e.shapes,o)}}if(this.material!==void 0)if(Array.isArray(this.material)){for(var u=[],s=0,l=this.material.length;s<l;s++)u.push(i(e.materials,this.material[s]));r.material=u}else r.material=i(e.materials,this.material);if(this.children.length>0){r.children=[];for(var s=0;s<this.children.length;s++)r.children.push(this.children[s].toJSON(e).object)}if(t){var h=v(e.geometries),f=v(e.materials),d=v(e.textures),p=v(e.images),o=v(e.shapes);h.length>0&&(n.geometries=h),f.length>0&&(n.materials=f),d.length>0&&(n.textures=d),p.length>0&&(n.images=p),o.length>0&&(n.shapes=o)}return n.object=r,n;function v(m){var g=[];for(var x in m){var b=m[x];delete b.metadata,g.push(b)}return g}},clone:function(e){return new this.constructor().copy(this,e)},copy:function(e,t){if(t===void 0&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(var n=0;n<e.children.length;n++){var r=e.children[n];this.add(r.clone())}return this}});function xn(){ne.call(this),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}xn.prototype=Object.assign(Object.create(ne.prototype),{constructor:xn,isScene:!0,copy:function(e,t){return ne.prototype.copy.call(this,e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this},toJSON:function(e){var t=ne.prototype.toJSON.call(this,e);return this.background!==null&&(t.object.background=this.background.toJSON(e)),this.environment!==null&&(t.object.environment=this.environment.toJSON(e)),this.fog!==null&&(t.object.fog=this.fog.toJSON()),t},dispose:function(){this.dispatchEvent({type:"dispose"})}});var _n=[new M,new M,new M,new M,new M,new M,new M,new M],zi=new M,Ns=new nn,Fr=new M,Br=new M,Ur=new M,zn=new M,Fn=new M,tr=new M,Fi=new M,Za=new M,Ja=new M,nr=new M;function nn(e,t){this.min=e!==void 0?e:new M(1/0,1/0,1/0),this.max=t!==void 0?t:new M(-1/0,-1/0,-1/0)}Object.assign(nn.prototype,{isBox3:!0,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromArray:function(e){for(var t=1/0,n=1/0,r=1/0,i=-1/0,a=-1/0,o=-1/0,s=0,l=e.length;s<l;s+=3){var c=e[s],u=e[s+1],h=e[s+2];c<t&&(t=c),u<n&&(n=u),h<r&&(r=h),c>i&&(i=c),u>a&&(a=u),h>o&&(o=h)}return this.min.set(t,n,r),this.max.set(i,a,o),this},setFromBufferAttribute:function(e){for(var t=1/0,n=1/0,r=1/0,i=-1/0,a=-1/0,o=-1/0,s=0,l=e.count;s<l;s++){var c=e.getX(s),u=e.getY(s),h=e.getZ(s);c<t&&(t=c),u<n&&(n=u),h<r&&(r=h),c>i&&(i=c),u>a&&(a=u),h>o&&(o=h)}return this.min.set(t,n,r),this.max.set(i,a,o),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(e,t){var n=zi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this},setFromObject:function(e){return this.makeEmpty(),this.expandByObject(e)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(e){return e===void 0&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new M),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return e===void 0&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new M),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},expandByObject:function(e){e.updateWorldMatrix(!1,!1);var t=e.geometry;t!==void 0&&(t.boundingBox===null&&t.computeBoundingBox(),Ns.copy(t.boundingBox),Ns.applyMatrix4(e.matrixWorld),this.union(Ns));for(var n=e.children,r=0,i=n.length;r<i;r++)this.expandByObject(n[r]);return this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e,t){return t===void 0&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new M),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},intersectsSphere:function(e){return this.clampPoint(e.center,zi),zi.distanceToSquared(e.center)<=e.radius*e.radius},intersectsPlane:function(e){var t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant},intersectsTriangle:function(e){if(this.isEmpty())return!1;this.getCenter(Fi),Za.subVectors(this.max,Fi),Fr.subVectors(e.a,Fi),Br.subVectors(e.b,Fi),Ur.subVectors(e.c,Fi),zn.subVectors(Br,Fr),Fn.subVectors(Ur,Br),tr.subVectors(Fr,Ur);var t=[0,-zn.z,zn.y,0,-Fn.z,Fn.y,0,-tr.z,tr.y,zn.z,0,-zn.x,Fn.z,0,-Fn.x,tr.z,0,-tr.x,-zn.y,zn.x,0,-Fn.y,Fn.x,0,-tr.y,tr.x,0];return!zs(t,Fr,Br,Ur,Za)||(t=[1,0,0,0,1,0,0,0,1],!zs(t,Fr,Br,Ur,Za))?!1:(Ja.crossVectors(zn,Fn),t=[Ja.x,Ja.y,Ja.z],zs(t,Fr,Br,Ur,Za))},clampPoint:function(e,t){return t===void 0&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new M),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){var t=zi.copy(e).clamp(this.min,this.max);return t.sub(e).length()},getBoundingSphere:function(e){return e===void 0&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=this.getSize(zi).length()*.5,e},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(e){return this.isEmpty()?this:(_n[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),_n[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),_n[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),_n[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),_n[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),_n[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),_n[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),_n[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(_n),this)},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}});function zs(e,t,n,r,i){var a,o;for(a=0,o=e.length-3;a<=o;a+=3){nr.fromArray(e,a);var s=i.x*Math.abs(nr.x)+i.y*Math.abs(nr.y)+i.z*Math.abs(nr.z),l=t.dot(nr),c=n.dot(nr),u=r.dot(nr);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>s)return!1}return!0}var Sp=new nn;function Bn(e,t){this.center=e!==void 0?e:new M,this.radius=t!==void 0?t:0}Object.assign(Bn.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(e,t){var n=this.center;t!==void 0?n.copy(t):Sp.setFromPoints(e).getCenter(n);for(var r=0,i=0,a=e.length;i<a;i++)r=Math.max(r,n.distanceToSquared(e[i]));return this.radius=Math.sqrt(r),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(e){return e.intersectsSphere(this)},intersectsPlane:function(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius},clampPoint:function(e,t){var n=this.center.distanceToSquared(e);return t===void 0&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new M),t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t},getBoundingBox:function(e){return e===void 0&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new nn),e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}});var wn=new M,Fs=new M,$a=new M,Un=new M,Bs=new M,Qa=new M,Us=new M;function Gr(e,t){this.origin=e!==void 0?e:new M,this.direction=t!==void 0?t:new M(0,0,-1)}Object.assign(Gr.prototype,{set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return t===void 0&&(console.warn("THREE.Ray: .at() target is now required"),t=new M),t.copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this},recast:function(e){return this.origin.copy(this.at(e,wn)),this},closestPointToPoint:function(e,t){t===void 0&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new M),t.subVectors(e,this.origin);var n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(e){var t=wn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(wn.copy(this.direction).multiplyScalar(t).add(this.origin),wn.distanceToSquared(e))},distanceSqToSegment:function(e,t,n,r){Fs.copy(e).add(t).multiplyScalar(.5),$a.copy(t).sub(e).normalize(),Un.copy(this.origin).sub(Fs);var i=e.distanceTo(t)*.5,a=-this.direction.dot($a),o=Un.dot(this.direction),s=-Un.dot($a),l=Un.lengthSq(),c=Math.abs(1-a*a),u,h,f,d;if(c>0)if(u=a*s-o,h=a*o-s,d=i*c,u>=0)if(h>=-d)if(h<=d){var p=1/c;u*=p,h*=p,f=u*(u+a*h+2*o)+h*(a*u+h+2*s)+l}else h=i,u=Math.max(0,-(a*h+o)),f=-u*u+h*(h+2*s)+l;else h=-i,u=Math.max(0,-(a*h+o)),f=-u*u+h*(h+2*s)+l;else h<=-d?(u=Math.max(0,-(-a*i+o)),h=u>0?-i:Math.min(Math.max(-i,-s),i),f=-u*u+h*(h+2*s)+l):h<=d?(u=0,h=Math.min(Math.max(-i,-s),i),f=h*(h+2*s)+l):(u=Math.max(0,-(a*i+o)),h=u>0?i:Math.min(Math.max(-i,-s),i),f=-u*u+h*(h+2*s)+l);else h=a>0?-i:i,u=Math.max(0,-(a*h+o)),f=-u*u+h*(h+2*s)+l;return n&&n.copy(this.direction).multiplyScalar(u).add(this.origin),r&&r.copy($a).multiplyScalar(h).add(Fs),f},intersectSphere:function(e,t){wn.subVectors(e.center,this.origin);var n=wn.dot(this.direction),r=wn.dot(wn)-n*n,i=e.radius*e.radius;if(r>i)return null;var a=Math.sqrt(i-r),o=n-a,s=n+a;return o<0&&s<0?null:o<0?this.at(s,t):this.at(o,t)},intersectsSphere:function(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;var n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null},intersectPlane:function(e,t){var n=this.distanceToPlane(e);return n===null?null:this.at(n,t)},intersectsPlane:function(e){var t=e.distanceToPoint(this.origin);if(t===0)return!0;var n=e.normal.dot(this.direction);return n*t<0},intersectBox:function(e,t){var n,r,i,a,o,s,l=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,h=this.origin;return l>=0?(n=(e.min.x-h.x)*l,r=(e.max.x-h.x)*l):(n=(e.max.x-h.x)*l,r=(e.min.x-h.x)*l),c>=0?(i=(e.min.y-h.y)*c,a=(e.max.y-h.y)*c):(i=(e.max.y-h.y)*c,a=(e.min.y-h.y)*c),n>a||i>r||((i>n||n!==n)&&(n=i),(a<r||r!==r)&&(r=a),u>=0?(o=(e.min.z-h.z)*u,s=(e.max.z-h.z)*u):(o=(e.max.z-h.z)*u,s=(e.min.z-h.z)*u),n>s||o>r)||((o>n||n!==n)&&(n=o),(s<r||r!==r)&&(r=s),r<0)?null:this.at(n>=0?n:r,t)},intersectsBox:function(e){return this.intersectBox(e,wn)!==null},intersectTriangle:function(e,t,n,r,i){Bs.subVectors(t,e),Qa.subVectors(n,e),Us.crossVectors(Bs,Qa);var a=this.direction.dot(Us),o;if(a>0){if(r)return null;o=1}else if(a<0)o=-1,a=-a;else return null;Un.subVectors(this.origin,e);var s=o*this.direction.dot(Qa.crossVectors(Un,Qa));if(s<0)return null;var l=o*this.direction.dot(Bs.cross(Un));if(l<0||s+l>a)return null;var c=-o*Un.dot(Us);return c<0?null:this.at(c/a,i)},applyMatrix4:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}});var Gs=new M,Tp=new M,Ep=new Et;function rn(e,t){this.normal=e!==void 0?e:new M(1,0,0),this.constant=t!==void 0?t:0}Object.assign(rn.prototype,{isPlane:!0,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(e,t,n){var r=Gs.subVectors(n,t).cross(Tp.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return t===void 0&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new M),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)},intersectLine:function(e,t){t===void 0&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new M);var n=e.delta(Gs),r=this.normal.dot(n);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):void 0;var i=-(e.start.dot(this.normal)+this.constant)/r;if(!(i<0||i>1))return t.copy(n).multiplyScalar(i).add(e.start)},intersectsLine:function(e){var t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0},intersectsBox:function(e){return e.intersectsPlane(this)},intersectsSphere:function(e){return e.intersectsPlane(this)},coplanarPoint:function(e){return e===void 0&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new M),e.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(e,t){var n=t||Ep.getNormalMatrix(e),r=this.coplanarPoint(Gs).applyMatrix4(e),i=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(i),this},translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}});var Jt=new M,bn=new M,Hs=new M,Mn=new M,Hr=new M,Vr=new M,cu=new M,Vs=new M,ks=new M,Ws=new M;function mt(e,t,n){this.a=e!==void 0?e:new M,this.b=t!==void 0?t:new M,this.c=n!==void 0?n:new M}Object.assign(mt,{getNormal:function(e,t,n,r){r===void 0&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new M),r.subVectors(n,t),Jt.subVectors(e,t),r.cross(Jt);var i=r.lengthSq();return i>0?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0)},getBarycoord:function(e,t,n,r,i){Jt.subVectors(r,t),bn.subVectors(n,t),Hs.subVectors(e,t);var a=Jt.dot(Jt),o=Jt.dot(bn),s=Jt.dot(Hs),l=bn.dot(bn),c=bn.dot(Hs),u=a*l-o*o;if(i===void 0&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),i=new M),u===0)return i.set(-2,-1,-1);var h=1/u,f=(l*s-o*c)*h,d=(a*c-o*s)*h;return i.set(1-f-d,d,f)},containsPoint:function(e,t,n,r){return mt.getBarycoord(e,t,n,r,Mn),Mn.x>=0&&Mn.y>=0&&Mn.x+Mn.y<=1},getUV:function(e,t,n,r,i,a,o,s){return this.getBarycoord(e,t,n,r,Mn),s.set(0,0),s.addScaledVector(i,Mn.x),s.addScaledVector(a,Mn.y),s.addScaledVector(o,Mn.z),s},isFrontFacing:function(e,t,n,r){return Jt.subVectors(n,t),bn.subVectors(e,t),Jt.cross(bn).dot(r)<0}}),Object.assign(mt.prototype,{set:function(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this},setFromPointsAndIndices:function(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},getArea:function(){return Jt.subVectors(this.c,this.b),bn.subVectors(this.a,this.b),Jt.cross(bn).length()*.5},getMidpoint:function(e){return e===void 0&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new M),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(e){return mt.getNormal(this.a,this.b,this.c,e)},getPlane:function(e){return e===void 0&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new rn),e.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(e,t){return mt.getBarycoord(e,this.a,this.b,this.c,t)},getUV:function(e,t,n,r,i){return mt.getUV(e,this.a,this.b,this.c,t,n,r,i)},containsPoint:function(e){return mt.containsPoint(e,this.a,this.b,this.c)},isFrontFacing:function(e){return mt.isFrontFacing(this.a,this.b,this.c,e)},intersectsBox:function(e){return e.intersectsTriangle(this)},closestPointToPoint:function(e,t){t===void 0&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new M);var n=this.a,r=this.b,i=this.c,a,o;Hr.subVectors(r,n),Vr.subVectors(i,n),Vs.subVectors(e,n);var s=Hr.dot(Vs),l=Vr.dot(Vs);if(s<=0&&l<=0)return t.copy(n);ks.subVectors(e,r);var c=Hr.dot(ks),u=Vr.dot(ks);if(c>=0&&u<=c)return t.copy(r);var h=s*u-c*l;if(h<=0&&s>=0&&c<=0)return a=s/(s-c),t.copy(n).addScaledVector(Hr,a);Ws.subVectors(e,i);var f=Hr.dot(Ws),d=Vr.dot(Ws);if(d>=0&&f<=d)return t.copy(i);var p=f*l-s*d;if(p<=0&&l>=0&&d<=0)return o=l/(l-d),t.copy(n).addScaledVector(Vr,o);var v=c*d-f*u;if(v<=0&&u-c>=0&&f-d>=0)return cu.subVectors(i,r),o=(u-c)/(u-c+(f-d)),t.copy(r).addScaledVector(cu,o);var m=1/(v+p+h);return a=p*m,o=h*m,t.copy(n).addScaledVector(Hr,a).addScaledVector(Vr,o)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}});var uu={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},$t={h:0,s:0,l:0},Ka={h:0,s:0,l:0};function ie(e,t,n){return t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}function js(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*6*(2/3-n):e}function qs(e){return e<.04045?e*.0773993808:Math.pow(e*.9478672986+.0521327014,2.4)}function Xs(e){return e<.0031308?e*12.92:1.055*Math.pow(e,.41666)-.055}Object.assign(ie.prototype,{isColor:!0,r:1,g:1,b:1,set:function(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this},setScalar:function(e){return this.r=e,this.g=e,this.b=e,this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this},setRGB:function(e,t,n){return this.r=e,this.g=t,this.b=n,this},setHSL:function(e,t,n){if(e=Le.euclideanModulo(e,1),t=Le.clamp(t,0,1),n=Le.clamp(n,0,1),t===0)this.r=this.g=this.b=n;else{var r=n<=.5?n*(1+t):n+t-n*t,i=2*n-r;this.r=js(i,r,e+1/3),this.g=js(i,r,e),this.b=js(i,r,e-1/3)}return this},setStyle:function(e){function t(h){h!==void 0&&parseFloat(h)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}var n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){var r,i=n[1],a=n[2];switch(i){case"rgb":case"rgba":if(r=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,t(r[5]),this;if(r=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,t(r[5]),this;break;case"hsl":case"hsla":if(r=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)){var o=parseFloat(r[1])/360,s=parseInt(r[2],10)/100,l=parseInt(r[3],10)/100;return t(r[5]),this.setHSL(o,s,l)}break}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(e)){var c=n[1],u=c.length;if(u===3)return this.r=parseInt(c.charAt(0)+c.charAt(0),16)/255,this.g=parseInt(c.charAt(1)+c.charAt(1),16)/255,this.b=parseInt(c.charAt(2)+c.charAt(2),16)/255,this;if(u===6)return this.r=parseInt(c.charAt(0)+c.charAt(1),16)/255,this.g=parseInt(c.charAt(2)+c.charAt(3),16)/255,this.b=parseInt(c.charAt(4)+c.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this},setColorName:function(e){var t=uu[e];return t!==void 0?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return t===void 0&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this},copyLinearToGamma:function(e,t){t===void 0&&(t=2);var n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this},convertGammaToLinear:function(e){return this.copyGammaToLinear(this,e),this},convertLinearToGamma:function(e){return this.copyLinearToGamma(this,e),this},copySRGBToLinear:function(e){return this.r=qs(e.r),this.g=qs(e.g),this.b=qs(e.b),this},copyLinearToSRGB:function(e){return this.r=Xs(e.r),this.g=Xs(e.g),this.b=Xs(e.b),this},convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return this.r*255<<16^this.g*255<<8^this.b*255<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){e===void 0&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});var t=this.r,n=this.g,r=this.b,i=Math.max(t,n,r),a=Math.min(t,n,r),o,s,l=(a+i)/2;if(a===i)o=0,s=0;else{var c=i-a;switch(s=l<=.5?c/(i+a):c/(2-i-a),i){case t:o=(n-r)/c+(n<r?6:0);break;case n:o=(r-t)/c+2;break;case r:o=(t-n)/c+4;break}o/=6}return e.h=o,e.s=s,e.l=l,e},getStyle:function(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"},offsetHSL:function(e,t,n){return this.getHSL($t),$t.h+=e,$t.s+=t,$t.l+=n,this.setHSL($t.h,$t.s,$t.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},sub:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},lerpHSL:function(e,t){this.getHSL($t),e.getHSL(Ka);var n=Le.lerp($t.h,Ka.h,t),r=Le.lerp($t.s,Ka.s,t),i=Le.lerp($t.l,Ka.l,t);return this.setHSL(n,r,i),this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return t===void 0&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e},toJSON:function(){return this.getHex()}}),ie.NAMES=uu;function eo(e,t,n,r,i,a){this.a=e,this.b=t,this.c=n,this.normal=r&&r.isVector3?r:new M,this.vertexNormals=Array.isArray(r)?r:[],this.color=i&&i.isColor?i:new ie,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=a!==void 0?a:0}Object.assign(eo.prototype,{clone:function(){return new this.constructor().copy(this)},copy:function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(var t=0,n=e.vertexNormals.length;t<n;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(var t=0,n=e.vertexColors.length;t<n;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}});var Ap=0;function be(){Object.defineProperty(this,"id",{value:Ap++}),this.uuid=Le.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=Li,this.side=Ai,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=zc,this.blendDst=Fc,this.blendEquation=Lr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=_s,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=vp,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ds,this.stencilZFail=Ds,this.stencilZPass=Ds,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}be.prototype=Object.assign(Object.create(Yt.prototype),{constructor:be,isMaterial:!0,onBeforeCompile:function(){},setValues:function(e){if(e!==void 0)for(var t in e){var n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===Rc;continue}var r=this[t];if(r===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n}},toJSON:function(e){var t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});var n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,this.combine!==void 0&&(n.combine=this.combine),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.size!==void 0&&(n.size=this.size),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Li&&(n.blending=this.blending),this.flatShading===!0&&(n.flatShading=this.flatShading),this.side!==Ai&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.morphTargets===!0&&(n.morphTargets=!0),this.morphNormals===!0&&(n.morphNormals=!0),this.skinning===!0&&(n.skinning=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function r(o){var s=[];for(var l in o){var c=o[l];delete c.metadata,s.push(c)}return s}if(t){var i=r(e.textures),a=r(e.images);i.length>0&&(n.textures=i),a.length>0&&(n.images=a)}return n},clone:function(){return new this.constructor().copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;var t=e.clippingPlanes,n=null;if(t!==null){var r=t.length;n=new Array(r);for(var i=0;i!==r;++i)n[i]=t[i].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(be.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});function Vt(e){be.call(this),this.type="MeshBasicMaterial",this.color=new ie(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Na,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}Vt.prototype=Object.create(be.prototype),Vt.prototype.constructor=Vt,Vt.prototype.isMeshBasicMaterial=!0,Vt.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this};var We=new M;function _e(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=qa,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(_e.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}}),Object.assign(_e.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this},copyAt:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(var r=0,i=this.itemSize;r<i;r++)this.array[e+r]=t.array[n+r];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),a=new ie),t[n++]=a.r,t[n++]=a.g,t[n++]=a.b}return this},copyVector2sArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),a=new j),t[n++]=a.x,t[n++]=a.y}return this},copyVector3sArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),a=new M),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z}return this},copyVector4sArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),a=new Ye),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z,t[n++]=a.w}return this},applyMatrix3:function(e){for(var t=0,n=this.count;t<n;t++)We.x=this.getX(t),We.y=this.getY(t),We.z=this.getZ(t),We.applyMatrix3(e),this.setXYZ(t,We.x,We.y,We.z);return this},applyMatrix4:function(e){for(var t=0,n=this.count;t<n;t++)We.x=this.getX(t),We.y=this.getY(t),We.z=this.getZ(t),We.applyMatrix4(e),this.setXYZ(t,We.x,We.y,We.z);return this},applyNormalMatrix:function(e){for(var t=0,n=this.count;t<n;t++)We.x=this.getX(t),We.y=this.getY(t),We.z=this.getZ(t),We.applyNormalMatrix(e),this.setXYZ(t,We.x,We.y,We.z);return this},transformDirection:function(e){for(var t=0,n=this.count;t<n;t++)We.x=this.getX(t),We.y=this.getY(t),We.z=this.getZ(t),We.transformDirection(e),this.setXYZ(t,We.x,We.y,We.z);return this},set:function(e,t){return t===void 0&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this},setXYZW:function(e,t,n,r,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=i,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}});function Ys(e,t,n){_e.call(this,new Int8Array(e),t,n)}Ys.prototype=Object.create(_e.prototype),Ys.prototype.constructor=Ys;function Zs(e,t,n){_e.call(this,new Uint8Array(e),t,n)}Zs.prototype=Object.create(_e.prototype),Zs.prototype.constructor=Zs;function Js(e,t,n){_e.call(this,new Uint8ClampedArray(e),t,n)}Js.prototype=Object.create(_e.prototype),Js.prototype.constructor=Js;function $s(e,t,n){_e.call(this,new Int16Array(e),t,n)}$s.prototype=Object.create(_e.prototype),$s.prototype.constructor=$s;function Bi(e,t,n){_e.call(this,new Uint16Array(e),t,n)}Bi.prototype=Object.create(_e.prototype),Bi.prototype.constructor=Bi;function Qs(e,t,n){_e.call(this,new Int32Array(e),t,n)}Qs.prototype=Object.create(_e.prototype),Qs.prototype.constructor=Qs;function Ui(e,t,n){_e.call(this,new Uint32Array(e),t,n)}Ui.prototype=Object.create(_e.prototype),Ui.prototype.constructor=Ui;function re(e,t,n){_e.call(this,new Float32Array(e),t,n)}re.prototype=Object.create(_e.prototype),re.prototype.constructor=re;function Ks(e,t,n){_e.call(this,new Float64Array(e),t,n)}Ks.prototype=Object.create(_e.prototype),Ks.prototype.constructor=Ks;function hu(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}Object.assign(hu.prototype,{computeGroups:function(e){for(var t,n=[],r=void 0,i=e.faces,a=0;a<i.length;a++){var o=i[a];o.materialIndex!==r&&(r=o.materialIndex,t!==void 0&&(t.count=a*3-t.start,n.push(t)),t={start:a*3,materialIndex:r})}t!==void 0&&(t.count=a*3-t.start,n.push(t)),this.groups=n},fromGeometry:function(e){var t=e.faces,n=e.vertices,r=e.faceVertexUvs,i=r[0]&&r[0].length>0,a=r[1]&&r[1].length>0,o=e.morphTargets,s=o.length,l;if(s>0){l=[];for(var c=0;c<s;c++)l[c]={name:o[c].name,data:[]};this.morphTargets.position=l}var u=e.morphNormals,h=u.length,f;if(h>0){f=[];for(var c=0;c<h;c++)f[c]={name:u[c].name,data:[]};this.morphTargets.normal=f}var d=e.skinIndices,p=e.skinWeights,v=d.length===n.length,m=p.length===n.length;n.length>0&&t.length===0&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(var c=0;c<t.length;c++){var g=t[c];this.vertices.push(n[g.a],n[g.b],n[g.c]);var x=g.vertexNormals;if(x.length===3)this.normals.push(x[0],x[1],x[2]);else{var b=g.normal;this.normals.push(b,b,b)}var S=g.vertexColors;if(S.length===3)this.colors.push(S[0],S[1],S[2]);else{var w=g.color;this.colors.push(w,w,w)}if(i===!0){var T=r[0][c];T!==void 0?this.uvs.push(T[0],T[1],T[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",c),this.uvs.push(new j,new j,new j))}if(a===!0){var T=r[1][c];T!==void 0?this.uvs2.push(T[0],T[1],T[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",c),this.uvs2.push(new j,new j,new j))}for(var L=0;L<s;L++){var I=o[L].vertices;l[L].data.push(I[g.a],I[g.b],I[g.c])}for(var L=0;L<h;L++){var C=u[L].vertexNormals[c];f[L].data.push(C.a,C.b,C.c)}v&&this.skinIndices.push(d[g.a],d[g.b],d[g.c]),m&&this.skinWeights.push(p[g.a],p[g.b],p[g.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this}});function fu(e){if(e.length===0)return-1/0;for(var t=e[0],n=1,r=e.length;n<r;++n)e[n]>t&&(t=e[n]);return t}var Lp=1,an=new De,el=new ne,kr=new M,Nt=new nn,Gi=new nn,ct=new M;function se(){Object.defineProperty(this,"id",{value:Lp+=2}),this.uuid=Le.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}se.prototype=Object.assign(Object.create(Yt.prototype),{constructor:se,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){Array.isArray(e)?this.index=new(fu(e)>65535?Ui:Bi)(e,1):this.index=e},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){return this.attributes[e]=t,this},deleteAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,n){this.groups.push({start:e,count:t,materialIndex:n!==void 0?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix4:function(e){var t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);var n=this.attributes.normal;if(n!==void 0){var r=new Et().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}var i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this},rotateX:function(e){return an.makeRotationX(e),this.applyMatrix4(an),this},rotateY:function(e){return an.makeRotationY(e),this.applyMatrix4(an),this},rotateZ:function(e){return an.makeRotationZ(e),this.applyMatrix4(an),this},translate:function(e,t,n){return an.makeTranslation(e,t,n),this.applyMatrix4(an),this},scale:function(e,t,n){return an.makeScale(e,t,n),this.applyMatrix4(an),this},lookAt:function(e){return el.lookAt(e),el.updateMatrix(),this.applyMatrix4(el.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(kr).negate(),this.translate(kr.x,kr.y,kr.z),this},setFromObject:function(e){var t=e.geometry;if(e.isPoints||e.isLine){var n=new re(t.vertices.length*3,3),r=new re(t.colors.length*3,3);if(this.setAttribute("position",n.copyVector3sArray(t.vertices)),this.setAttribute("color",r.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){var i=new re(t.lineDistances.length,1);this.setAttribute("lineDistance",i.copyArray(t.lineDistances))}t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},setFromPoints:function(e){for(var t=[],n=0,r=e.length;n<r;n++){var i=e[n];t.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new re(t,3)),this},updateFromObject:function(e){var t=e.geometry;if(e.isMesh){var n=t.__directGeometry;if(t.elementsNeedUpdate===!0&&(n=void 0,t.elementsNeedUpdate=!1),n===void 0)return this.fromGeometry(t);n.verticesNeedUpdate=t.verticesNeedUpdate,n.normalsNeedUpdate=t.normalsNeedUpdate,n.colorsNeedUpdate=t.colorsNeedUpdate,n.uvsNeedUpdate=t.uvsNeedUpdate,n.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=n}var r;return t.verticesNeedUpdate===!0&&(r=this.attributes.position,r!==void 0&&(r.copyVector3sArray(t.vertices),r.needsUpdate=!0),t.verticesNeedUpdate=!1),t.normalsNeedUpdate===!0&&(r=this.attributes.normal,r!==void 0&&(r.copyVector3sArray(t.normals),r.needsUpdate=!0),t.normalsNeedUpdate=!1),t.colorsNeedUpdate===!0&&(r=this.attributes.color,r!==void 0&&(r.copyColorsArray(t.colors),r.needsUpdate=!0),t.colorsNeedUpdate=!1),t.uvsNeedUpdate&&(r=this.attributes.uv,r!==void 0&&(r.copyVector2sArray(t.uvs),r.needsUpdate=!0),t.uvsNeedUpdate=!1),t.lineDistancesNeedUpdate&&(r=this.attributes.lineDistance,r!==void 0&&(r.copyArray(t.lineDistances),r.needsUpdate=!0),t.lineDistancesNeedUpdate=!1),t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=new hu().fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){var t=new Float32Array(e.vertices.length*3);if(this.setAttribute("position",new _e(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){var n=new Float32Array(e.normals.length*3);this.setAttribute("normal",new _e(n,3).copyVector3sArray(e.normals))}if(e.colors.length>0){var r=new Float32Array(e.colors.length*3);this.setAttribute("color",new _e(r,3).copyColorsArray(e.colors))}if(e.uvs.length>0){var i=new Float32Array(e.uvs.length*2);this.setAttribute("uv",new _e(i,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){var a=new Float32Array(e.uvs2.length*2);this.setAttribute("uv2",new _e(a,2).copyVector2sArray(e.uvs2))}this.groups=e.groups;for(var o in e.morphTargets){for(var s=[],l=e.morphTargets[o],c=0,u=l.length;c<u;c++){var h=l[c],f=new re(h.data.length*3,3);f.name=h.name,s.push(f.copyVector3sArray(h.data))}this.morphAttributes[o]=s}if(e.skinIndices.length>0){var d=new re(e.skinIndices.length*4,4);this.setAttribute("skinIndex",d.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){var p=new re(e.skinWeights.length*4,4);this.setAttribute("skinWeight",p.copyVector4sArray(e.skinWeights))}return e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new nn);var e=this.attributes.position,t=this.morphAttributes.position;if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(var n=0,r=t.length;n<r;n++){var i=t[n];Nt.setFromBufferAttribute(i),this.morphTargetsRelative?(ct.addVectors(this.boundingBox.min,Nt.min),this.boundingBox.expandByPoint(ct),ct.addVectors(this.boundingBox.max,Nt.max),this.boundingBox.expandByPoint(ct)):(this.boundingBox.expandByPoint(Nt.min),this.boundingBox.expandByPoint(Nt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new Bn);var e=this.attributes.position,t=this.morphAttributes.position;if(e){var n=this.boundingSphere.center;if(Nt.setFromBufferAttribute(e),t)for(var r=0,i=t.length;r<i;r++){var a=t[r];Gi.setFromBufferAttribute(a),this.morphTargetsRelative?(ct.addVectors(Nt.min,Gi.min),Nt.expandByPoint(ct),ct.addVectors(Nt.max,Gi.max),Nt.expandByPoint(ct)):(Nt.expandByPoint(Gi.min),Nt.expandByPoint(Gi.max))}Nt.getCenter(n);for(var o=0,r=0,i=e.count;r<i;r++)ct.fromBufferAttribute(e,r),o=Math.max(o,n.distanceToSquared(ct));if(t)for(var r=0,i=t.length;r<i;r++)for(var a=t[r],s=this.morphTargetsRelative,l=0,c=a.count;l<c;l++)ct.fromBufferAttribute(a,l),s&&(kr.fromBufferAttribute(e,l),ct.add(kr)),o=Math.max(o,n.distanceToSquared(ct));this.boundingSphere.radius=Math.sqrt(o),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){var e=this.index,t=this.attributes;if(t.position){var n=t.position.array;if(t.normal===void 0)this.setAttribute("normal",new _e(new Float32Array(n.length),3));else for(var r=t.normal.array,i=0,a=r.length;i<a;i++)r[i]=0;var o=t.normal.array,s,l,c,u=new M,h=new M,f=new M,d=new M,p=new M;if(e)for(var v=e.array,i=0,a=e.count;i<a;i+=3)s=v[i+0]*3,l=v[i+1]*3,c=v[i+2]*3,u.fromArray(n,s),h.fromArray(n,l),f.fromArray(n,c),d.subVectors(f,h),p.subVectors(u,h),d.cross(p),o[s]+=d.x,o[s+1]+=d.y,o[s+2]+=d.z,o[l]+=d.x,o[l+1]+=d.y,o[l+2]+=d.z,o[c]+=d.x,o[c+1]+=d.y,o[c+2]+=d.z;else for(var i=0,a=n.length;i<a;i+=9)u.fromArray(n,i),h.fromArray(n,i+3),f.fromArray(n,i+6),d.subVectors(f,h),p.subVectors(u,h),d.cross(p),o[i]=d.x,o[i+1]=d.y,o[i+2]=d.z,o[i+3]=d.x,o[i+4]=d.y,o[i+5]=d.z,o[i+6]=d.x,o[i+7]=d.y,o[i+8]=d.z;this.normalizeNormals(),t.normal.needsUpdate=!0}},merge:function(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var n=this.attributes;for(var r in n)if(e.attributes[r]!==void 0)for(var i=n[r],a=i.array,o=e.attributes[r],s=o.array,l=o.itemSize*t,c=Math.min(s.length,a.length-l),u=0,h=l;u<c;u++,h++)a[h]=s[u];return this},normalizeNormals:function(){for(var e=this.attributes.normal,t=0,n=e.count;t<n;t++)ct.x=e.getX(t),ct.y=e.getY(t),ct.z=e.getZ(t),ct.normalize(),e.setXYZ(t,ct.x,ct.y,ct.z)},toNonIndexed:function(){function e(v,m){for(var g=v.array,x=v.itemSize,b=new g.constructor(m.length*x),S=0,w=0,T=0,L=m.length;T<L;T++){S=m[T]*x;for(var I=0;I<x;I++)b[w++]=g[S++]}return new _e(b,x)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var t=new se,n=this.index.array,r=this.attributes;for(var i in r){var a=r[i],o=e(a,n);t.setAttribute(i,o)}var s=this.morphAttributes;for(i in s){for(var l=[],c=s[i],u=0,h=c.length;u<h;u++){var a=c[u],o=e(a,n);l.push(o)}t.morphAttributes[i]=l}t.morphTargetsRelative=this.morphTargetsRelative;for(var f=this.groups,u=0,d=f.length;u<d;u++){var p=f[u];t.addGroup(p.start,p.count,p.materialIndex)}return t},toJSON:function(){var e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){var t=this.parameters;for(var n in t)t[n]!==void 0&&(e[n]=t[n]);return e}e.data={attributes:{}};var r=this.index;r!==null&&(e.data.index={type:r.array.constructor.name,array:Array.prototype.slice.call(r.array)});var i=this.attributes;for(var n in i){var a=i[n],o=a.toJSON();a.name!==""&&(o.name=a.name),e.data.attributes[n]=o}var s={},l=!1;for(var n in this.morphAttributes){for(var c=this.morphAttributes[n],u=[],h=0,f=c.length;h<f;h++){var a=c[h],o=a.toJSON();a.name!==""&&(o.name=a.name),u.push(o)}u.length>0&&(s[n]=u,l=!0)}l&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);var d=this.groups;d.length>0&&(e.data.groups=JSON.parse(JSON.stringify(d)));var p=this.boundingSphere;return p!==null&&(e.data.boundingSphere={center:p.center.toArray(),radius:p.radius}),e},clone:function(){return new se().copy(this)},copy:function(e){var t,n,r;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;var i=e.index;i!==null&&this.setIndex(i.clone());var a=e.attributes;for(t in a){var o=a[t];this.setAttribute(t,o.clone())}var s=e.morphAttributes;for(t in s){var l=[],c=s[t];for(n=0,r=c.length;n<r;n++)l.push(c[n].clone());this.morphAttributes[t]=l}this.morphTargetsRelative=e.morphTargetsRelative;var u=e.groups;for(n=0,r=u.length;n<r;n++){var h=u[n];this.addGroup(h.start,h.count,h.materialIndex)}var f=e.boundingBox;f!==null&&(this.boundingBox=f.clone());var d=e.boundingSphere;return d!==null&&(this.boundingSphere=d.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});var du=new De,rr=new Gr,tl=new Bn,ir=new M,ar=new M,or=new M,nl=new M,rl=new M,il=new M,to=new M,no=new M,ro=new M,Wr=new j,jr=new j,qr=new j,Hi=new M,io=new M;function $e(e,t){ne.call(this),this.type="Mesh",this.geometry=e!==void 0?e:new se,this.material=t!==void 0?t:new Vt,this.updateMorphTargets()}$e.prototype=Object.assign(Object.create(ne.prototype),{constructor:$e,isMesh:!0,copy:function(e){return ne.prototype.copy.call(this,e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this},updateMorphTargets:function(){var e=this.geometry,t,n,r;if(e.isBufferGeometry){var i=e.morphAttributes,a=Object.keys(i);if(a.length>0){var o=i[a[0]];if(o!==void 0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,n=o.length;t<n;t++)r=o[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}else{var s=e.morphTargets;s!==void 0&&s.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(e,t){var n=this.geometry,r=this.material,i=this.matrixWorld;if(r!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),tl.copy(n.boundingSphere),tl.applyMatrix4(i),e.ray.intersectsSphere(tl)!==!1&&(du.getInverse(i),rr.copy(e.ray).applyMatrix4(du),!(n.boundingBox!==null&&rr.intersectsBox(n.boundingBox)===!1)))){var a;if(n.isBufferGeometry){var o,s,l,c=n.index,u=n.attributes.position,h=n.morphAttributes.position,f=n.morphTargetsRelative,d=n.attributes.uv,p=n.attributes.uv2,v=n.groups,m=n.drawRange,g,x,b,S,w,T,L,I;if(c!==null)if(Array.isArray(r))for(g=0,b=v.length;g<b;g++)for(w=v[g],T=r[w.materialIndex],L=Math.max(w.start,m.start),I=Math.min(w.start+w.count,m.start+m.count),x=L,S=I;x<S;x+=3)o=c.getX(x),s=c.getX(x+1),l=c.getX(x+2),a=ao(this,T,e,rr,u,h,f,d,p,o,s,l),a&&(a.faceIndex=Math.floor(x/3),a.face.materialIndex=w.materialIndex,t.push(a));else for(L=Math.max(0,m.start),I=Math.min(c.count,m.start+m.count),g=L,b=I;g<b;g+=3)o=c.getX(g),s=c.getX(g+1),l=c.getX(g+2),a=ao(this,r,e,rr,u,h,f,d,p,o,s,l),a&&(a.faceIndex=Math.floor(g/3),t.push(a));else if(u!==void 0)if(Array.isArray(r))for(g=0,b=v.length;g<b;g++)for(w=v[g],T=r[w.materialIndex],L=Math.max(w.start,m.start),I=Math.min(w.start+w.count,m.start+m.count),x=L,S=I;x<S;x+=3)o=x,s=x+1,l=x+2,a=ao(this,T,e,rr,u,h,f,d,p,o,s,l),a&&(a.faceIndex=Math.floor(x/3),a.face.materialIndex=w.materialIndex,t.push(a));else for(L=Math.max(0,m.start),I=Math.min(u.count,m.start+m.count),g=L,b=I;g<b;g+=3)o=g,s=g+1,l=g+2,a=ao(this,r,e,rr,u,h,f,d,p,o,s,l),a&&(a.faceIndex=Math.floor(g/3),t.push(a))}else if(n.isGeometry){var C,z,N,B=Array.isArray(r),U=n.vertices,F=n.faces,R,G=n.faceVertexUvs[0];G.length>0&&(R=G);for(var k=0,q=F.length;k<q;k++){var H=F[k],V=B?r[H.materialIndex]:r;if(V!==void 0&&(C=U[H.a],z=U[H.b],N=U[H.c],a=pu(this,V,e,rr,C,z,N,Hi),a)){if(R&&R[k]){var W=R[k];Wr.copy(W[0]),jr.copy(W[1]),qr.copy(W[2]),a.uv=mt.getUV(Hi,C,z,N,Wr,jr,qr,new j)}a.face=H,a.faceIndex=k,t.push(a)}}}}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});function pu(e,t,n,r,i,a,o,s){var l;if(t.side===dt?l=r.intersectTriangle(o,a,i,!0,s):l=r.intersectTriangle(i,a,o,t.side!==Oa,s),l===null)return null;io.copy(s),io.applyMatrix4(e.matrixWorld);var c=n.ray.origin.distanceTo(io);return c<n.near||c>n.far?null:{distance:c,point:io.clone(),object:e}}function ao(e,t,n,r,i,a,o,s,l,c,u,h){ir.fromBufferAttribute(i,c),ar.fromBufferAttribute(i,u),or.fromBufferAttribute(i,h);var f=e.morphTargetInfluences;if(t.morphTargets&&a&&f){to.set(0,0,0),no.set(0,0,0),ro.set(0,0,0);for(var d=0,p=a.length;d<p;d++){var v=f[d],m=a[d];v!==0&&(nl.fromBufferAttribute(m,c),rl.fromBufferAttribute(m,u),il.fromBufferAttribute(m,h),o?(to.addScaledVector(nl,v),no.addScaledVector(rl,v),ro.addScaledVector(il,v)):(to.addScaledVector(nl.sub(ir),v),no.addScaledVector(rl.sub(ar),v),ro.addScaledVector(il.sub(or),v)))}ir.add(to),ar.add(no),or.add(ro)}var g=pu(e,t,n,r,ir,ar,or,Hi);if(g){s&&(Wr.fromBufferAttribute(s,c),jr.fromBufferAttribute(s,u),qr.fromBufferAttribute(s,h),g.uv=mt.getUV(Hi,ir,ar,or,Wr,jr,qr,new j)),l&&(Wr.fromBufferAttribute(l,c),jr.fromBufferAttribute(l,u),qr.fromBufferAttribute(l,h),g.uv2=mt.getUV(Hi,ir,ar,or,Wr,jr,qr,new j));var x=new eo(c,u,h);mt.getNormal(ir,ar,or,x.normal),g.face=x}return g}var Cp=0,on=new De,al=new ne,oo=new M;function Me(){Object.defineProperty(this,"id",{value:Cp+=2}),this.uuid=Le.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Me.prototype=Object.assign(Object.create(Yt.prototype),{constructor:Me,isGeometry:!0,applyMatrix4:function(e){for(var t=new Et().getNormalMatrix(e),n=0,r=this.vertices.length;n<r;n++){var i=this.vertices[n];i.applyMatrix4(e)}for(var n=0,r=this.faces.length;n<r;n++){var a=this.faces[n];a.normal.applyMatrix3(t).normalize();for(var o=0,s=a.vertexNormals.length;o<s;o++)a.vertexNormals[o].applyMatrix3(t).normalize()}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(e){return on.makeRotationX(e),this.applyMatrix4(on),this},rotateY:function(e){return on.makeRotationY(e),this.applyMatrix4(on),this},rotateZ:function(e){return on.makeRotationZ(e),this.applyMatrix4(on),this},translate:function(e,t,n){return on.makeTranslation(e,t,n),this.applyMatrix4(on),this},scale:function(e,t,n){return on.makeScale(e,t,n),this.applyMatrix4(on),this},lookAt:function(e){return al.lookAt(e),al.updateMatrix(),this.applyMatrix4(al.matrix),this},fromBufferGeometry:function(e){var t=this,n=e.index!==null?e.index.array:void 0,r=e.attributes;if(r.position===void 0)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;var i=r.position.array,a=r.normal!==void 0?r.normal.array:void 0,o=r.color!==void 0?r.color.array:void 0,s=r.uv!==void 0?r.uv.array:void 0,l=r.uv2!==void 0?r.uv2.array:void 0;l!==void 0&&(this.faceVertexUvs[1]=[]);for(var c=0;c<i.length;c+=3)t.vertices.push(new M().fromArray(i,c)),o!==void 0&&t.colors.push(new ie().fromArray(o,c));function u(g,x,b,S){var w=o===void 0?[]:[t.colors[g].clone(),t.colors[x].clone(),t.colors[b].clone()],T=a===void 0?[]:[new M().fromArray(a,g*3),new M().fromArray(a,x*3),new M().fromArray(a,b*3)],L=new eo(g,x,b,T,w,S);t.faces.push(L),s!==void 0&&t.faceVertexUvs[0].push([new j().fromArray(s,g*2),new j().fromArray(s,x*2),new j().fromArray(s,b*2)]),l!==void 0&&t.faceVertexUvs[1].push([new j().fromArray(l,g*2),new j().fromArray(l,x*2),new j().fromArray(l,b*2)])}var h=e.groups;if(h.length>0)for(var c=0;c<h.length;c++)for(var f=h[c],d=f.start,p=f.count,v=d,m=d+p;v<m;v+=3)n!==void 0?u(n[v],n[v+1],n[v+2],f.materialIndex):u(v,v+1,v+2,f.materialIndex);else if(n!==void 0)for(var c=0;c<n.length;c+=3)u(n[c],n[c+1],n[c+2]);else for(var c=0;c<i.length/3;c+=3)u(c,c+1,c+2);return this.computeFaceNormals(),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(oo).negate(),this.translate(oo.x,oo.y,oo.z),this},normalize:function(){this.computeBoundingSphere();var e=this.boundingSphere.center,t=this.boundingSphere.radius,n=t===0?1:1/t,r=new De;return r.set(n,0,0,-n*e.x,0,n,0,-n*e.y,0,0,n,-n*e.z,0,0,0,1),this.applyMatrix4(r),this},computeFaceNormals:function(){for(var e=new M,t=new M,n=0,r=this.faces.length;n<r;n++){var i=this.faces[n],a=this.vertices[i.a],o=this.vertices[i.b],s=this.vertices[i.c];e.subVectors(s,o),t.subVectors(a,o),e.cross(t),e.normalize(),i.normal.copy(e)}},computeVertexNormals:function(e){e===void 0&&(e=!0);var t,n,r,i,a,o;for(o=new Array(this.vertices.length),t=0,n=this.vertices.length;t<n;t++)o[t]=new M;if(e){var s,l,c,u=new M,h=new M;for(r=0,i=this.faces.length;r<i;r++)a=this.faces[r],s=this.vertices[a.a],l=this.vertices[a.b],c=this.vertices[a.c],u.subVectors(c,l),h.subVectors(s,l),u.cross(h),o[a.a].add(u),o[a.b].add(u),o[a.c].add(u)}else for(this.computeFaceNormals(),r=0,i=this.faces.length;r<i;r++)a=this.faces[r],o[a.a].add(a.normal),o[a.b].add(a.normal),o[a.c].add(a.normal);for(t=0,n=this.vertices.length;t<n;t++)o[t].normalize();for(r=0,i=this.faces.length;r<i;r++){a=this.faces[r];var f=a.vertexNormals;f.length===3?(f[0].copy(o[a.a]),f[1].copy(o[a.b]),f[2].copy(o[a.c])):(f[0]=o[a.a].clone(),f[1]=o[a.b].clone(),f[2]=o[a.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var e,t,n;for(this.computeFaceNormals(),e=0,t=this.faces.length;e<t;e++){n=this.faces[e];var r=n.vertexNormals;r.length===3?(r[0].copy(n.normal),r[1].copy(n.normal),r[2].copy(n.normal)):(r[0]=n.normal.clone(),r[1]=n.normal.clone(),r[2]=n.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var e,t,n,r,i;for(n=0,r=this.faces.length;n<r;n++)for(i=this.faces[n],i.__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]),e=0,t=i.vertexNormals.length;e<t;e++)i.__originalVertexNormals[e]?i.__originalVertexNormals[e].copy(i.vertexNormals[e]):i.__originalVertexNormals[e]=i.vertexNormals[e].clone();var a=new Me;for(a.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var o=this.morphNormals[e].faceNormals,s=this.morphNormals[e].vertexNormals,c,u;for(n=0,r=this.faces.length;n<r;n++)c=new M,u={a:new M,b:new M,c:new M},o.push(c),s.push(u)}var l=this.morphNormals[e];a.vertices=this.morphTargets[e].vertices,a.computeFaceNormals(),a.computeVertexNormals();var c,u;for(n=0,r=this.faces.length;n<r;n++)i=this.faces[n],c=l.faceNormals[n],u=l.vertexNormals[n],c.copy(i.normal),u.a.copy(i.vertexNormals[0]),u.b.copy(i.vertexNormals[1]),u.c.copy(i.vertexNormals[2])}for(n=0,r=this.faces.length;n<r;n++)i=this.faces[n],i.normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new nn),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new Bn),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,n){if(!(e&&e.isGeometry)){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);return}var r,i=this.vertices.length,a=this.vertices,o=e.vertices,s=this.faces,l=e.faces,c=this.colors,u=e.colors;n===void 0&&(n=0),t!==void 0&&(r=new Et().getNormalMatrix(t));for(var h=0,f=o.length;h<f;h++){var d=o[h],p=d.clone();t!==void 0&&p.applyMatrix4(t),a.push(p)}for(var h=0,f=u.length;h<f;h++)c.push(u[h].clone());for(h=0,f=l.length;h<f;h++){var v=l[h],m,g,x,b=v.vertexNormals,S=v.vertexColors;m=new eo(v.a+i,v.b+i,v.c+i),m.normal.copy(v.normal),r!==void 0&&m.normal.applyMatrix3(r).normalize();for(var w=0,T=b.length;w<T;w++)g=b[w].clone(),r!==void 0&&g.applyMatrix3(r).normalize(),m.vertexNormals.push(g);m.color.copy(v.color);for(var w=0,T=S.length;w<T;w++)x=S[w],m.vertexColors.push(x.clone());m.materialIndex=v.materialIndex+n,s.push(m)}for(var h=0,f=e.faceVertexUvs.length;h<f;h++){var L=e.faceVertexUvs[h];this.faceVertexUvs[h]===void 0&&(this.faceVertexUvs[h]=[]);for(var w=0,T=L.length;w<T;w++){for(var I=L[w],C=[],z=0,N=I.length;z<N;z++)C.push(I[z].clone());this.faceVertexUvs[h].push(C)}}},mergeMesh:function(e){if(!(e&&e.isMesh)){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e);return}e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)},mergeVertices:function(){var e={},t=[],n=[],r,i,a=4,o=Math.pow(10,a),s,l,c,u,h,f;for(s=0,l=this.vertices.length;s<l;s++)r=this.vertices[s],i=Math.round(r.x*o)+"_"+Math.round(r.y*o)+"_"+Math.round(r.z*o),e[i]===void 0?(e[i]=s,t.push(this.vertices[s]),n[s]=t.length-1):n[s]=n[e[i]];var d=[];for(s=0,l=this.faces.length;s<l;s++){c=this.faces[s],c.a=n[c.a],c.b=n[c.b],c.c=n[c.c],u=[c.a,c.b,c.c];for(var p=0;p<3;p++)if(u[p]===u[(p+1)%3]){d.push(s);break}}for(s=d.length-1;s>=0;s--){var v=d[s];for(this.faces.splice(v,1),h=0,f=this.faceVertexUvs.length;h<f;h++)this.faceVertexUvs[h].splice(v,1)}var m=this.vertices.length-t.length;return this.vertices=t,m},setFromPoints:function(e){this.vertices=[];for(var t=0,n=e.length;t<n;t++){var r=e[t];this.vertices.push(new M(r.x,r.y,r.z||0))}return this},sortFacesByMaterialIndex:function(){for(var e=this.faces,t=e.length,n=0;n<t;n++)e[n]._id=n;function r(c,u){return c.materialIndex-u.materialIndex}e.sort(r);var i=this.faceVertexUvs[0],a=this.faceVertexUvs[1],o,s;i&&i.length===t&&(o=[]),a&&a.length===t&&(s=[]);for(var n=0;n<t;n++){var l=e[n]._id;o&&o.push(i[l]),s&&s.push(a[l])}o&&(this.faceVertexUvs[0]=o),s&&(this.faceVertexUvs[1]=s)},toJSON:function(){var e={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.parameters!==void 0){var t=this.parameters;for(var n in t)t[n]!==void 0&&(e[n]=t[n]);return e}for(var r=[],i=0;i<this.vertices.length;i++){var a=this.vertices[i];r.push(a.x,a.y,a.z)}for(var o=[],s=[],l={},c=[],u={},h=[],f={},i=0;i<this.faces.length;i++){var d=this.faces[i],p=!0,v=!1,m=this.faceVertexUvs[0][i]!==void 0,g=d.normal.length()>0,x=d.vertexNormals.length>0,b=d.color.r!==1||d.color.g!==1||d.color.b!==1,S=d.vertexColors.length>0,w=0;if(w=C(w,0,0),w=C(w,1,p),w=C(w,2,v),w=C(w,3,m),w=C(w,4,g),w=C(w,5,x),w=C(w,6,b),w=C(w,7,S),o.push(w),o.push(d.a,d.b,d.c),o.push(d.materialIndex),m){var T=this.faceVertexUvs[0][i];o.push(B(T[0]),B(T[1]),B(T[2]))}if(g&&o.push(z(d.normal)),x){var L=d.vertexNormals;o.push(z(L[0]),z(L[1]),z(L[2]))}if(b&&o.push(N(d.color)),S){var I=d.vertexColors;o.push(N(I[0]),N(I[1]),N(I[2]))}}function C(U,F,R){return R?U|1<<F:U&~(1<<F)}function z(U){var F=U.x.toString()+U.y.toString()+U.z.toString();return l[F]!==void 0||(l[F]=s.length/3,s.push(U.x,U.y,U.z)),l[F]}function N(U){var F=U.r.toString()+U.g.toString()+U.b.toString();return u[F]!==void 0||(u[F]=c.length,c.push(U.getHex())),u[F]}function B(U){var F=U.x.toString()+U.y.toString();return f[F]!==void 0||(f[F]=h.length/2,h.push(U.x,U.y)),f[F]}return e.data={},e.data.vertices=r,e.data.normals=s,c.length>0&&(e.data.colors=c),h.length>0&&(e.data.uvs=[h]),e.data.faces=o,e},clone:function(){return new Me().copy(this)},copy:function(e){var t,n,r,i,a,o;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;var s=e.vertices;for(t=0,n=s.length;t<n;t++)this.vertices.push(s[t].clone());var l=e.colors;for(t=0,n=l.length;t<n;t++)this.colors.push(l[t].clone());var c=e.faces;for(t=0,n=c.length;t<n;t++)this.faces.push(c[t].clone());for(t=0,n=e.faceVertexUvs.length;t<n;t++){var u=e.faceVertexUvs[t];for(this.faceVertexUvs[t]===void 0&&(this.faceVertexUvs[t]=[]),r=0,i=u.length;r<i;r++){var h=u[r],f=[];for(a=0,o=h.length;a<o;a++){var d=h[a];f.push(d.clone())}this.faceVertexUvs[t].push(f)}}var p=e.morphTargets;for(t=0,n=p.length;t<n;t++){var v={};if(v.name=p[t].name,p[t].vertices!==void 0)for(v.vertices=[],r=0,i=p[t].vertices.length;r<i;r++)v.vertices.push(p[t].vertices[r].clone());if(p[t].normals!==void 0)for(v.normals=[],r=0,i=p[t].normals.length;r<i;r++)v.normals.push(p[t].normals[r].clone());this.morphTargets.push(v)}var m=e.morphNormals;for(t=0,n=m.length;t<n;t++){var g={};if(m[t].vertexNormals!==void 0)for(g.vertexNormals=[],r=0,i=m[t].vertexNormals.length;r<i;r++){var x=m[t].vertexNormals[r],b={};b.a=x.a.clone(),b.b=x.b.clone(),b.c=x.c.clone(),g.vertexNormals.push(b)}if(m[t].faceNormals!==void 0)for(g.faceNormals=[],r=0,i=m[t].faceNormals.length;r<i;r++)g.faceNormals.push(m[t].faceNormals[r].clone());this.morphNormals.push(g)}var S=e.skinWeights;for(t=0,n=S.length;t<n;t++)this.skinWeights.push(S[t].clone());var w=e.skinIndices;for(t=0,n=w.length;t<n;t++)this.skinIndices.push(w[t].clone());var T=e.lineDistances;for(t=0,n=T.length;t<n;t++)this.lineDistances.push(T[t]);var L=e.boundingBox;L!==null&&(this.boundingBox=L.clone());var I=e.boundingSphere;return I!==null&&(this.boundingSphere=I.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class Pp extends Me{constructor(t,n,r,i,a,o){super(),this.type="BoxGeometry",this.parameters={width:t,height:n,depth:r,widthSegments:i,heightSegments:a,depthSegments:o},this.fromBufferGeometry(new so(t,n,r,i,a,o)),this.mergeVertices()}}class so extends se{constructor(t,n,r,i,a,o){super(),this.type="BoxBufferGeometry",this.parameters={width:t,height:n,depth:r,widthSegments:i,heightSegments:a,depthSegments:o};var s=this;t=t||1,n=n||1,r=r||1,i=Math.floor(i)||1,a=Math.floor(a)||1,o=Math.floor(o)||1;var l=[],c=[],u=[],h=[],f=0,d=0;p("z","y","x",-1,-1,r,n,t,o,a,0),p("z","y","x",1,-1,r,n,-t,o,a,1),p("x","z","y",1,1,t,r,n,i,o,2),p("x","z","y",1,-1,t,r,-n,i,o,3),p("x","y","z",1,-1,t,n,r,i,a,4),p("x","y","z",-1,-1,t,n,-r,i,a,5),this.setIndex(l),this.setAttribute("position",new re(c,3)),this.setAttribute("normal",new re(u,3)),this.setAttribute("uv",new re(h,2));function p(v,m,g,x,b,S,w,T,L,I,C){var z=S/L,N=w/I,B=S/2,U=w/2,F=T/2,R=L+1,G=I+1,k=0,q=0,H,V,W=new M;for(V=0;V<G;V++){var le=V*N-U;for(H=0;H<R;H++){var Oe=H*z-B;W[v]=Oe*x,W[m]=le*b,W[g]=F,c.push(W.x,W.y,W.z),W[v]=0,W[m]=0,W[g]=T>0?1:-1,u.push(W.x,W.y,W.z),h.push(H/L),h.push(1-V/I),k+=1}}for(V=0;V<I;V++)for(H=0;H<L;H++){var Re=f+H+R*V,Se=f+H+R*(V+1),Y=f+(H+1)+R*(V+1),Be=f+(H+1)+R*V;l.push(Re,Se,Be),l.push(Se,Y,Be),q+=6}s.addGroup(d,q,C),d+=q,f+=k}}}function Xr(e){var t={};for(var n in e){t[n]={};for(var r in e[n]){var i=e[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)?t[n][r]=i.clone():Array.isArray(i)?t[n][r]=i.slice():t[n][r]=i}}return t}function _t(e){for(var t={},n=0;n<e.length;n++){var r=Xr(e[n]);for(var i in r)t[i]=r[i]}return t}var lo={clone:Xr,merge:_t},Rp=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Dp=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;function rt(e){be.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=Rp,this.fragmentShader=Dp,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}rt.prototype=Object.create(be.prototype),rt.prototype.constructor=rt,rt.prototype.isShaderMaterial=!0,rt.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Xr(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=e.extensions,this},rt.prototype.toJSON=function(e){var t=be.prototype.toJSON.call(this,e);t.uniforms={};for(var n in this.uniforms){var r=this.uniforms[n],i=r.value;i&&i.isTexture?t.uniforms[n]={type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?t.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?t.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?t.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?t.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?t.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?t.uniforms[n]={type:"m4",value:i.toArray()}:t.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;var a={};for(var o in this.extensions)this.extensions[o]===!0&&(a[o]=!0);return Object.keys(a).length>0&&(t.extensions=a),t};function sn(){ne.call(this),this.type="Camera",this.matrixWorldInverse=new De,this.projectionMatrix=new De,this.projectionMatrixInverse=new De}sn.prototype=Object.assign(Object.create(ne.prototype),{constructor:sn,isCamera:!0,copy:function(e,t){return ne.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this},getWorldDirection:function(e){e===void 0&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new M),this.updateMatrixWorld(!0);var t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()},updateMatrixWorld:function(e){ne.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(e,t){ne.prototype.updateWorldMatrix.call(this,e,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return new this.constructor().copy(this)}});function ft(e,t,n,r){sn.call(this),this.type="PerspectiveCamera",this.fov=e!==void 0?e:50,this.zoom=1,this.near=n!==void 0?n:.1,this.far=r!==void 0?r:2e3,this.focus=10,this.aspect=t!==void 0?t:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}ft.prototype=Object.assign(Object.create(sn.prototype),{constructor:ft,isPerspectiveCamera:!0,copy:function(e,t){return sn.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){var t=.5*this.getFilmHeight()/e;this.fov=Le.RAD2DEG*2*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){var e=Math.tan(Le.DEG2RAD*.5*this.fov);return .5*this.getFilmHeight()/e},getEffectiveFOV:function(){return Le.RAD2DEG*2*Math.atan(Math.tan(Le.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,n,r,i,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=this.near,t=e*Math.tan(Le.DEG2RAD*.5*this.fov)/this.zoom,n=2*t,r=this.aspect*n,i=-.5*r,a=this.view;if(this.view!==null&&this.view.enabled){var o=a.fullWidth,s=a.fullHeight;i+=a.offsetX*r/o,t-=a.offsetY*n/s,r*=a.width/o,n*=a.height/s}var l=this.filmOffset;l!==0&&(i+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,t,t-n,e,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){var t=ne.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}});var Yr=90,Zr=1;function Vi(e,t,n,r){ne.call(this),this.type="CubeCamera";var i=new ft(Yr,Zr,e,t);i.up.set(0,-1,0),i.lookAt(new M(1,0,0)),this.add(i);var a=new ft(Yr,Zr,e,t);a.up.set(0,-1,0),a.lookAt(new M(-1,0,0)),this.add(a);var o=new ft(Yr,Zr,e,t);o.up.set(0,0,1),o.lookAt(new M(0,1,0)),this.add(o);var s=new ft(Yr,Zr,e,t);s.up.set(0,0,-1),s.lookAt(new M(0,-1,0)),this.add(s);var l=new ft(Yr,Zr,e,t);l.up.set(0,-1,0),l.lookAt(new M(0,0,1)),this.add(l);var c=new ft(Yr,Zr,e,t);c.up.set(0,-1,0),c.lookAt(new M(0,0,-1)),this.add(c),r=r||{format:In,magFilter:nt,minFilter:nt},this.renderTarget=new Jr(n,r),this.renderTarget.texture.name="CubeCamera",this.update=function(u,h){this.parent===null&&this.updateMatrixWorld();var f=u.getRenderTarget(),d=this.renderTarget,p=d.texture.generateMipmaps;d.texture.generateMipmaps=!1,u.setRenderTarget(d,0),u.render(h,i),u.setRenderTarget(d,1),u.render(h,a),u.setRenderTarget(d,2),u.render(h,o),u.setRenderTarget(d,3),u.render(h,s),u.setRenderTarget(d,4),u.render(h,l),d.texture.generateMipmaps=p,u.setRenderTarget(d,5),u.render(h,c),u.setRenderTarget(f)},this.clear=function(u,h,f,d){for(var p=u.getRenderTarget(),v=this.renderTarget,m=0;m<6;m++)u.setRenderTarget(v,m),u.clear(h,f,d);u.setRenderTarget(p)}}Vi.prototype=Object.create(ne.prototype),Vi.prototype.constructor=Vi;function Jr(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),vt.call(this,e,e,t)}Jr.prototype=Object.create(vt.prototype),Jr.prototype.constructor=Jr,Jr.prototype.isWebGLCubeRenderTarget=!0,Jr.prototype.fromEquirectangularTexture=function(e,t){this.texture.type=t.type,this.texture.format=t.format,this.texture.encoding=t.encoding;var n=new xn,r={uniforms:{tEquirect:{value:null}},vertexShader:["varying vec3 vWorldDirection;","vec3 transformDirection( in vec3 dir, in mat4 matrix ) {","	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );","}","void main() {","	vWorldDirection = transformDirection( position, modelMatrix );","	#include <begin_vertex>","	#include <project_vertex>","}"].join(`
`),fragmentShader:["uniform sampler2D tEquirect;","varying vec3 vWorldDirection;","#define RECIPROCAL_PI 0.31830988618","#define RECIPROCAL_PI2 0.15915494","void main() {","	vec3 direction = normalize( vWorldDirection );","	vec2 sampleUV;","	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;","	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;","	gl_FragColor = texture2D( tEquirect, sampleUV );","}"].join(`
`)},i=new rt({type:"CubemapFromEquirect",uniforms:Xr(r.uniforms),vertexShader:r.vertexShader,fragmentShader:r.fragmentShader,side:dt,blending:On});i.uniforms.tEquirect.value=t;var a=new $e(new so(5,5,5),i);n.add(a);var o=new Vi(1,10,1);return o.renderTarget=this,o.renderTarget.texture.name="CubeCameraTexture",o.update(e,n),a.geometry.dispose(),a.material.dispose(),this};function sr(e,t,n,r,i,a,o,s,l,c,u,h){Xe.call(this,null,a,o,s,l,c,r,i,u,h),this.image={data:e||null,width:t||1,height:n||1},this.magFilter=l!==void 0?l:tt,this.minFilter=c!==void 0?c:tt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}sr.prototype=Object.create(Xe.prototype),sr.prototype.constructor=sr,sr.prototype.isDataTexture=!0;var $r=new Bn,co=new M;function ki(e,t,n,r,i,a){this.planes=[e!==void 0?e:new rn,t!==void 0?t:new rn,n!==void 0?n:new rn,r!==void 0?r:new rn,i!==void 0?i:new rn,a!==void 0?a:new rn]}Object.assign(ki.prototype,{set:function(e,t,n,r,i,a){var o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(r),o[4].copy(i),o[5].copy(a),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){for(var t=this.planes,n=0;n<6;n++)t[n].copy(e.planes[n]);return this},setFromProjectionMatrix:function(e){var t=this.planes,n=e.elements,r=n[0],i=n[1],a=n[2],o=n[3],s=n[4],l=n[5],c=n[6],u=n[7],h=n[8],f=n[9],d=n[10],p=n[11],v=n[12],m=n[13],g=n[14],x=n[15];return t[0].setComponents(o-r,u-s,p-h,x-v).normalize(),t[1].setComponents(o+r,u+s,p+h,x+v).normalize(),t[2].setComponents(o+i,u+l,p+f,x+m).normalize(),t[3].setComponents(o-i,u-l,p-f,x-m).normalize(),t[4].setComponents(o-a,u-c,p-d,x-g).normalize(),t[5].setComponents(o+a,u+c,p+d,x+g).normalize(),this},intersectsObject:function(e){var t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),$r.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere($r)},intersectsSprite:function(e){return $r.center.set(0,0,0),$r.radius=.7071067811865476,$r.applyMatrix4(e.matrixWorld),this.intersectsSphere($r)},intersectsSphere:function(e){for(var t=this.planes,n=e.center,r=-e.radius,i=0;i<6;i++){var a=t[i].distanceToPoint(n);if(a<r)return!1}return!0},intersectsBox:function(e){for(var t=this.planes,n=0;n<6;n++){var r=t[n];if(co.x=r.normal.x>0?e.max.x:e.min.x,co.y=r.normal.y>0?e.max.y:e.min.y,co.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(co)<0)return!1}return!0},containsPoint:function(e){for(var t=this.planes,n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}});var te={common:{diffuse:{value:new ie(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Et},uv2Transform:{value:new Et},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new j(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ie(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new ie(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Et}},sprite:{diffuse:{value:new ie(15658734)},opacity:{value:1},center:{value:new j(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Et}}};function vu(){var e=null,t=!1,n=null;function r(i,a){t!==!1&&(n(i,a),e.requestAnimationFrame(r))}return{start:function(){t!==!0&&n!==null&&(e.requestAnimationFrame(r),t=!0)},stop:function(){t=!1},setAnimationLoop:function(i){n=i},setContext:function(i){e=i}}}function Op(e,t){var n=t.isWebGL2,r=new WeakMap;function i(c,u){var h=c.array,f=c.usage,d=e.createBuffer();e.bindBuffer(u,d),e.bufferData(u,h,f),c.onUploadCallback();var p=5126;return h instanceof Float32Array?p=5126:h instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):h instanceof Uint16Array?p=5123:h instanceof Int16Array?p=5122:h instanceof Uint32Array?p=5125:h instanceof Int32Array?p=5124:h instanceof Int8Array?p=5120:h instanceof Uint8Array&&(p=5121),{buffer:d,type:p,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function a(c,u,h){var f=u.array,d=u.updateRange;e.bindBuffer(h,c),d.count===-1?e.bufferSubData(h,0,f):(n?e.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):e.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),r.get(c)}function s(c){c.isInterleavedBufferAttribute&&(c=c.data);var u=r.get(c);u&&(e.deleteBuffer(u.buffer),r.delete(c))}function l(c,u){c.isInterleavedBufferAttribute&&(c=c.data);var h=r.get(c);h===void 0?r.set(c,i(c,u)):h.version<c.version&&(a(h.buffer,c,u),h.version=c.version)}return{get:o,remove:s,update:l}}function uo(e,t,n,r){Me.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r},this.fromBufferGeometry(new Sn(e,t,n,r)),this.mergeVertices()}uo.prototype=Object.create(Me.prototype),uo.prototype.constructor=uo;function Sn(e,t,n,r){se.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r},e=e||1,t=t||1;var i=e/2,a=t/2,o=Math.floor(n)||1,s=Math.floor(r)||1,l=o+1,c=s+1,u=e/o,h=t/s,f,d,p=[],v=[],m=[],g=[];for(d=0;d<c;d++){var x=d*h-a;for(f=0;f<l;f++){var b=f*u-i;v.push(b,-x,0),m.push(0,0,1),g.push(f/o),g.push(1-d/s)}}for(d=0;d<s;d++)for(f=0;f<o;f++){var S=f+l*d,w=f+l*(d+1),T=f+1+l*(d+1),L=f+1+l*d;p.push(S,w,L),p.push(w,T,L)}this.setIndex(p),this.setAttribute("position",new re(v,3)),this.setAttribute("normal",new re(m,3)),this.setAttribute("uv",new re(g,2))}Sn.prototype=Object.create(se.prototype),Sn.prototype.constructor=Sn;var Ip=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Np=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,zp=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif`,Fp=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif`,Bp=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Up="vec3 transformed = vec3( position );",Gp=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Hp=`vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	return vec2( -1.04, 1.04 ) * a004 + r.zw;
}
float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
#else
	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
	}
	return 1.0;
#endif
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
vec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {
	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );
	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;
	return Fr * fresnel + F0;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + viewDir );
	float dotNL = saturate( dot( normal, incidentLight.direction ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE  = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS  = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	return specularColor * brdf.x + brdf.y;
}
void BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	vec3 FssEss = F * brdf.x + brdf.y;
	float Ess = brdf.x + brdf.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
#if defined( USE_SHEEN )
float D_Charlie(float roughness, float NoH) {
	float invAlpha  = 1.0 / roughness;
	float cos2h = NoH * NoH;
	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);
}
float V_Neubelt(float NoV, float NoL) {
	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));
}
vec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {
	vec3 N = geometry.normal;
	vec3 V = geometry.viewDir;
	vec3 H = normalize( V + L );
	float dotNH = saturate( dot( N, H ) );
	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );
}
#endif`,Vp=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,kp=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Wp=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,jp=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,qp=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Xp=`#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`,Yp=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,Zp=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,Jp=`#ifdef USE_COLOR
	vColor.xyz = color.xyz;
#endif`,$p=`#define PI 3.14159265359
#define PI2 6.28318530718
#define PI_HALF 1.5707963267949
#define RECIPROCAL_PI 0.31830988618
#define RECIPROCAL_PI2 0.15915494
#define LOG2 1.442695
#define EPSILON 1e-6
#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
  return m[ 2 ][ 3 ] == - 1.0;
}`,Qp=`#ifdef ENVMAP_TYPE_CUBE_UV
#define cubeUV_maxMipLevel 8.0
#define cubeUV_minMipLevel 4.0
#define cubeUV_maxTileSize 256.0
#define cubeUV_minTileSize 16.0
float getFace(vec3 direction) {
    vec3 absDirection = abs(direction);
    float face = -1.0;
    if (absDirection.x > absDirection.z) {
      if (absDirection.x > absDirection.y)
        face = direction.x > 0.0 ? 0.0 : 3.0;
      else
        face = direction.y > 0.0 ? 1.0 : 4.0;
    } else {
      if (absDirection.z > absDirection.y)
        face = direction.z > 0.0 ? 2.0 : 5.0;
      else
        face = direction.y > 0.0 ? 1.0 : 4.0;
    }
    return face;
}
vec2 getUV(vec3 direction, float face) {
    vec2 uv;
    if (face == 0.0) {
      uv = vec2(-direction.z, direction.y) / abs(direction.x);
    } else if (face == 1.0) {
      uv = vec2(direction.x, -direction.z) / abs(direction.y);
    } else if (face == 2.0) {
      uv = direction.xy / abs(direction.z);
    } else if (face == 3.0) {
      uv = vec2(direction.z, direction.y) / abs(direction.x);
    } else if (face == 4.0) {
      uv = direction.xz / abs(direction.y);
    } else {
      uv = vec2(-direction.x, direction.y) / abs(direction.z);
    }
    return 0.5 * (uv + 1.0);
}
vec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {
  float face = getFace(direction);
  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);
  mipInt = max(mipInt, cubeUV_minMipLevel);
  float faceSize = exp2(mipInt);
  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);
  vec2 uv = getUV(direction, face) * (faceSize - 1.0);
  vec2 f = fract(uv);
  uv += 0.5 - f;
  if (face > 2.0) {
    uv.y += faceSize;
    face -= 3.0;
  }
  uv.x += face * faceSize;
  if(mipInt < cubeUV_maxMipLevel){
    uv.y += 2.0 * cubeUV_maxTileSize;
  }
  uv.y += filterInt * 2.0 * cubeUV_minTileSize;
  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);
  uv *= texelSize;
  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
  uv.x += texelSize;
  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
  uv.y += texelSize;
  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
  uv.x -= texelSize;
  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
  vec3 tm = mix(tl, tr, f.x);
  vec3 bm = mix(bl, br, f.x);
  return mix(tm, bm, f.y);
}
#define r0 1.0
#define v0 0.339
#define m0 -2.0
#define r1 0.8
#define v1 0.276
#define m1 -1.0
#define r4 0.4
#define v4 0.046
#define m4 2.0
#define r5 0.305
#define v5 0.016
#define m5 3.0
#define r6 0.21
#define v6 0.0038
#define m6 4.0
float roughnessToMip(float roughness) {
  float mip = 0.0;
  if (roughness >= r1) {
    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;
  } else if (roughness >= r4) {
    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;
  } else if (roughness >= r5) {
    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;
  } else if (roughness >= r6) {
    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;
  } else {
    mip = -2.0 * log2(1.16 * roughness);  }
  return mip;
}
vec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {
  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);
  float mipF = fract(mip);
  float mipInt = floor(mip);
  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);
  if (mipF == 0.0) {
    return vec4(color0, 1.0);
  } else {
    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);
    return vec4(mix(color0, color1, mipF), 1.0);
  }
}
#endif`,Kp=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,ev=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,tv=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,nv=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,rv=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,iv="gl_FragColor = linearToOutputTexel( gl_FragColor );",av=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value )  {
	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}`,ov=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		}  else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#elif defined( ENVMAP_TYPE_EQUIREC )
		vec2 sampleUV;
		reflectVec = normalize( reflectVec );
		sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
		sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
		vec4 envColor = texture2D( envMap, sampleUV );
	#elif defined( ENVMAP_TYPE_SPHERE )
		reflectVec = normalize( reflectVec );
		vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );
		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifndef ENVMAP_TYPE_CUBE_UV
		envColor = envMapTexelToLinear( envColor );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,sv=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,lv=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,cv=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,uv=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) { 
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,hv=`#ifdef USE_FOG
	fogDepth = -mvPosition.z;
#endif`,fv=`#ifdef USE_FOG
	varying float fogDepth;
#endif`,dv=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,pv=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,vv=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return texture2D( gradientMap, coord ).rgb;
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,mv=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel= texture2D( lightMap, vUv2 );
	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
#endif`,gv=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,yv=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
	#pragma unroll_loop_end
#endif`,xv=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {
	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
		struct PointLightShadow {
			float shadowBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif`,_v=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float sigma = PI * roughness * roughness / ( 1.0 + roughness );
		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
		  vec3 reflectVec = reflect( -viewDir, normal );
		  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
		#else
		  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
		#elif defined( ENVMAP_TYPE_EQUIREC )
			vec2 sampleUV;
			sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
			sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_SPHERE )
			vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif`,wv=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,bv=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct ToonMaterial {
	vec3	diffuseColor;
	vec3	specularColor;
	float	specularShininess;
	float	specularStrength;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,Mv=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Sv=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3	diffuseColor;
	vec3	specularColor;
	float	specularShininess;
	float	specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,Tv=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;
material.specularRoughness = min( material.specularRoughness, 1.0 );
#ifdef REFLECTIVITY
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#endif
#ifdef CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheen;
#endif`,Ev=`struct PhysicalMaterial {
	vec3	diffuseColor;
	float	specularRoughness;
	vec3	specularColor;
#ifdef CLEARCOAT
	float clearcoat;
	float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	vec3 sheenColor;
#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearcoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifdef CLEARCOAT
		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = ccDotNL * directLight.color;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			ccIrradiance *= PI;
		#endif
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
	#else
		float clearcoatDHR = 0.0;
	#endif
	#ifdef USE_SHEEN
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(
			material.specularRoughness,
			directLight.direction,
			geometry,
			material.sheenColor
		);
	#else
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);
	#endif
	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef CLEARCOAT
		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
		float ccDotNL = ccDotNV;
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
	#else
		float clearcoatDHR = 0.0;
	#endif
	float clearcoatInv = 1.0 - clearcoatDHR;
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Av=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Lv=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );
	#ifdef CLEARCOAT
		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );
	#endif
#endif`,Cv=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,Pv=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Rv=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Dv=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Ov=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Iv=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,Nv=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,zv=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Fv=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Bv=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Uv=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Gv=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
#endif`,Hv=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifndef USE_MORPHNORMALS
	uniform float morphTargetInfluences[ 8 ];
	#else
	uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`,Vv=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	transformed += morphTarget0 * morphTargetInfluences[ 0 ];
	transformed += morphTarget1 * morphTargetInfluences[ 1 ];
	transformed += morphTarget2 * morphTargetInfluences[ 2 ];
	transformed += morphTarget3 * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
	transformed += morphTarget4 * morphTargetInfluences[ 4 ];
	transformed += morphTarget5 * morphTargetInfluences[ 5 ];
	transformed += morphTarget6 * morphTargetInfluences[ 6 ];
	transformed += morphTarget7 * morphTargetInfluences[ 7 ];
	#endif
#endif`,kv=`#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			bitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Wv=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal, mapN );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif`,jv=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		float scale = sign( st1.t * st0.s - st0.t * st1.s );
		vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
		vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
		vec3 N = normalize( surf_norm );
		mat3 tsn = mat3( S, T, N );
		mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		return normalize( tsn * mapN );
	}
#endif`,qv=`#ifdef CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Xv=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );
	#endif
#endif`,Yv=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,Zv=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Jv=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,$v=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Qv=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Kv=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,em=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,tm=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,nm=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,rm=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,im=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,am=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,om=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,sm=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,lm=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,cm=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,um=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,hm=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,fm=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,dm=`#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
uniform float toneMappingWhitePoint;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )
vec3 Uncharted2ToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );
}`,pm=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,vm=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,mm=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,gm=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,ym=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,xm=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,_m=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,wm=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,bm=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Mm=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Sm=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Tm=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Em=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Am=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Lm=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Cm=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV;
	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Pm=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Rm=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Dm=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Om=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
	
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Im=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Nm=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,zm=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Fm=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Bm=`#define MATCAP
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#ifndef FLAT_SHADED
		vNormal = normalize( transformedNormal );
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Um=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Gm=`#define TOON
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Hm=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Vm=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,km=`#define STANDARD
#ifdef PHYSICAL
	#define REFLECTIVITY
	#define CLEARCOAT
	#define TRANSPARENCY
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef TRANSPARENCY
	uniform float transparency;
#endif
#ifdef REFLECTIVITY
	uniform float reflectivity;
#endif
#ifdef CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheen;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#ifdef TRANSPARENCY
		diffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );
	#endif
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Wm=`#define STANDARD
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,jm=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,qm=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Xm=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Ym=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Zm=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Jm=`#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,$m=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Qm=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Ne={alphamap_fragment:Ip,alphamap_pars_fragment:Np,alphatest_fragment:zp,aomap_fragment:Fp,aomap_pars_fragment:Bp,begin_vertex:Up,beginnormal_vertex:Gp,bsdfs:Hp,bumpmap_pars_fragment:Vp,clipping_planes_fragment:kp,clipping_planes_pars_fragment:Wp,clipping_planes_pars_vertex:jp,clipping_planes_vertex:qp,color_fragment:Xp,color_pars_fragment:Yp,color_pars_vertex:Zp,color_vertex:Jp,common:$p,cube_uv_reflection_fragment:Qp,defaultnormal_vertex:Kp,displacementmap_pars_vertex:ev,displacementmap_vertex:tv,emissivemap_fragment:nv,emissivemap_pars_fragment:rv,encodings_fragment:iv,encodings_pars_fragment:av,envmap_fragment:ov,envmap_common_pars_fragment:sv,envmap_pars_fragment:lv,envmap_pars_vertex:cv,envmap_physical_pars_fragment:_v,envmap_vertex:uv,fog_vertex:hv,fog_pars_vertex:fv,fog_fragment:dv,fog_pars_fragment:pv,gradientmap_pars_fragment:vv,lightmap_fragment:mv,lightmap_pars_fragment:gv,lights_lambert_vertex:yv,lights_pars_begin:xv,lights_toon_fragment:wv,lights_toon_pars_fragment:bv,lights_phong_fragment:Mv,lights_phong_pars_fragment:Sv,lights_physical_fragment:Tv,lights_physical_pars_fragment:Ev,lights_fragment_begin:Av,lights_fragment_maps:Lv,lights_fragment_end:Cv,logdepthbuf_fragment:Pv,logdepthbuf_pars_fragment:Rv,logdepthbuf_pars_vertex:Dv,logdepthbuf_vertex:Ov,map_fragment:Iv,map_pars_fragment:Nv,map_particle_fragment:zv,map_particle_pars_fragment:Fv,metalnessmap_fragment:Bv,metalnessmap_pars_fragment:Uv,morphnormal_vertex:Gv,morphtarget_pars_vertex:Hv,morphtarget_vertex:Vv,normal_fragment_begin:kv,normal_fragment_maps:Wv,normalmap_pars_fragment:jv,clearcoat_normal_fragment_begin:qv,clearcoat_normal_fragment_maps:Xv,clearcoat_pars_fragment:Yv,packing:Zv,premultiplied_alpha_fragment:Jv,project_vertex:$v,dithering_fragment:Qv,dithering_pars_fragment:Kv,roughnessmap_fragment:em,roughnessmap_pars_fragment:tm,shadowmap_pars_fragment:nm,shadowmap_pars_vertex:rm,shadowmap_vertex:im,shadowmask_pars_fragment:am,skinbase_vertex:om,skinning_pars_vertex:sm,skinning_vertex:lm,skinnormal_vertex:cm,specularmap_fragment:um,specularmap_pars_fragment:hm,tonemapping_fragment:fm,tonemapping_pars_fragment:dm,uv_pars_fragment:pm,uv_pars_vertex:vm,uv_vertex:mm,uv2_pars_fragment:gm,uv2_pars_vertex:ym,uv2_vertex:xm,worldpos_vertex:_m,background_frag:wm,background_vert:bm,cube_frag:Mm,cube_vert:Sm,depth_frag:Tm,depth_vert:Em,distanceRGBA_frag:Am,distanceRGBA_vert:Lm,equirect_frag:Cm,equirect_vert:Pm,linedashed_frag:Rm,linedashed_vert:Dm,meshbasic_frag:Om,meshbasic_vert:Im,meshlambert_frag:Nm,meshlambert_vert:zm,meshmatcap_frag:Fm,meshmatcap_vert:Bm,meshtoon_frag:Um,meshtoon_vert:Gm,meshphong_frag:Hm,meshphong_vert:Vm,meshphysical_frag:km,meshphysical_vert:Wm,normal_frag:jm,normal_vert:qm,points_frag:Xm,points_vert:Ym,shadow_frag:Zm,shadow_vert:Jm,sprite_frag:$m,sprite_vert:Qm},Tn={basic:{uniforms:_t([te.common,te.specularmap,te.envmap,te.aomap,te.lightmap,te.fog]),vertexShader:Ne.meshbasic_vert,fragmentShader:Ne.meshbasic_frag},lambert:{uniforms:_t([te.common,te.specularmap,te.envmap,te.aomap,te.lightmap,te.emissivemap,te.fog,te.lights,{emissive:{value:new ie(0)}}]),vertexShader:Ne.meshlambert_vert,fragmentShader:Ne.meshlambert_frag},phong:{uniforms:_t([te.common,te.specularmap,te.envmap,te.aomap,te.lightmap,te.emissivemap,te.bumpmap,te.normalmap,te.displacementmap,te.fog,te.lights,{emissive:{value:new ie(0)},specular:{value:new ie(1118481)},shininess:{value:30}}]),vertexShader:Ne.meshphong_vert,fragmentShader:Ne.meshphong_frag},standard:{uniforms:_t([te.common,te.envmap,te.aomap,te.lightmap,te.emissivemap,te.bumpmap,te.normalmap,te.displacementmap,te.roughnessmap,te.metalnessmap,te.fog,te.lights,{emissive:{value:new ie(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:Ne.meshphysical_vert,fragmentShader:Ne.meshphysical_frag},toon:{uniforms:_t([te.common,te.specularmap,te.aomap,te.lightmap,te.emissivemap,te.bumpmap,te.normalmap,te.displacementmap,te.gradientmap,te.fog,te.lights,{emissive:{value:new ie(0)},specular:{value:new ie(1118481)},shininess:{value:30}}]),vertexShader:Ne.meshtoon_vert,fragmentShader:Ne.meshtoon_frag},matcap:{uniforms:_t([te.common,te.bumpmap,te.normalmap,te.displacementmap,te.fog,{matcap:{value:null}}]),vertexShader:Ne.meshmatcap_vert,fragmentShader:Ne.meshmatcap_frag},points:{uniforms:_t([te.points,te.fog]),vertexShader:Ne.points_vert,fragmentShader:Ne.points_frag},dashed:{uniforms:_t([te.common,te.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ne.linedashed_vert,fragmentShader:Ne.linedashed_frag},depth:{uniforms:_t([te.common,te.displacementmap]),vertexShader:Ne.depth_vert,fragmentShader:Ne.depth_frag},normal:{uniforms:_t([te.common,te.bumpmap,te.normalmap,te.displacementmap,{opacity:{value:1}}]),vertexShader:Ne.normal_vert,fragmentShader:Ne.normal_frag},sprite:{uniforms:_t([te.sprite,te.fog]),vertexShader:Ne.sprite_vert,fragmentShader:Ne.sprite_frag},background:{uniforms:{uvTransform:{value:new Et},t2D:{value:null}},vertexShader:Ne.background_vert,fragmentShader:Ne.background_frag},cube:{uniforms:_t([te.envmap,{opacity:{value:1}}]),vertexShader:Ne.cube_vert,fragmentShader:Ne.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ne.equirect_vert,fragmentShader:Ne.equirect_frag},distanceRGBA:{uniforms:_t([te.common,te.displacementmap,{referencePosition:{value:new M},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ne.distanceRGBA_vert,fragmentShader:Ne.distanceRGBA_frag},shadow:{uniforms:_t([te.lights,te.fog,{color:{value:new ie(0)},opacity:{value:1}}]),vertexShader:Ne.shadow_vert,fragmentShader:Ne.shadow_frag}};Tn.physical={uniforms:_t([Tn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new j(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new ie(0)},transparency:{value:0}}]),vertexShader:Ne.meshphysical_vert,fragmentShader:Ne.meshphysical_frag};function Km(e,t,n,r){var i=new ie(0),a=0,o,s,l=null,c=0,u=null;function h(d,p,v,m){var g=p.background,x=e.xr,b=x.getSession&&x.getSession();if(b&&b.environmentBlendMode==="additive"&&(g=null),g===null?f(i,a):g&&g.isColor&&(f(g,1),m=!0),(e.autoClear||m)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),g&&(g.isCubeTexture||g.isWebGLCubeRenderTarget||g.mapping===Ci)){s===void 0&&(s=new $e(new so(1,1,1),new rt({type:"BackgroundCubeMaterial",uniforms:Xr(Tn.cube.uniforms),vertexShader:Tn.cube.vertexShader,fragmentShader:Tn.cube.fragmentShader,side:dt,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),s.geometry.deleteAttribute("uv"),s.onBeforeRender=function(w,T,L){this.matrixWorld.copyPosition(L.matrixWorld)},Object.defineProperty(s.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(s));var S=g.isWebGLCubeRenderTarget?g.texture:g;s.material.uniforms.envMap.value=S,s.material.uniforms.flipEnvMap.value=S.isCubeTexture?-1:1,(l!==g||c!==S.version||u!==e.toneMapping)&&(s.material.needsUpdate=!0,l=g,c=S.version,u=e.toneMapping),d.unshift(s,s.geometry,s.material,0,0,null)}else g&&g.isTexture&&(o===void 0&&(o=new $e(new Sn(2,2),new rt({type:"BackgroundMaterial",uniforms:Xr(Tn.background.uniforms),vertexShader:Tn.background.vertexShader,fragmentShader:Tn.background.fragmentShader,side:Ai,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(o)),o.material.uniforms.t2D.value=g,g.matrixAutoUpdate===!0&&g.updateMatrix(),o.material.uniforms.uvTransform.value.copy(g.matrix),(l!==g||c!==g.version||u!==e.toneMapping)&&(o.material.needsUpdate=!0,l=g,c=g.version,u=e.toneMapping),d.unshift(o,o.geometry,o.material,0,0,null))}function f(d,p){t.buffers.color.setClear(d.r,d.g,d.b,p,r)}return{getClearColor:function(){return i},setClearColor:function(d,p){i.set(d),a=p!==void 0?p:1,f(i,a)},getClearAlpha:function(){return a},setClearAlpha:function(d){a=d,f(i,a)},render:h}}function eg(e,t,n,r){var i=r.isWebGL2,a;function o(c){a=c}function s(c,u){e.drawArrays(a,c,u),n.update(u,a)}function l(c,u,h,f){if(f!==0){var d,p;if(i)d=e,p="drawArraysInstanced";else if(d=t.get("ANGLE_instanced_arrays"),p="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[p](a,u,h,f),n.update(h,a,f)}}this.setMode=o,this.render=s,this.renderInstances=l}function tg(e,t,n){var r;function i(){if(r!==void 0)return r;var T=t.get("EXT_texture_filter_anisotropic");return T!==null?r=e.getParameter(T.MAX_TEXTURE_MAX_ANISOTROPY_EXT):r=0,r}function a(T){if(T==="highp"){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";T="mediump"}return T==="mediump"&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}var o=typeof WebGL2RenderingContext!="undefined"&&e instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&e instanceof WebGL2ComputeRenderingContext,s=n.precision!==void 0?n.precision:"highp",l=a(s);l!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",l,"instead."),s=l);var c=n.logarithmicDepthBuffer===!0,u=e.getParameter(34930),h=e.getParameter(35660),f=e.getParameter(3379),d=e.getParameter(34076),p=e.getParameter(34921),v=e.getParameter(36347),m=e.getParameter(36348),g=e.getParameter(36349),x=h>0,b=o||!!t.get("OES_texture_float"),S=x&&b,w=o?e.getParameter(36183):0;return{isWebGL2:o,getMaxAnisotropy:i,getMaxPrecision:a,precision:s,logarithmicDepthBuffer:c,maxTextures:u,maxVertexTextures:h,maxTextureSize:f,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:v,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:x,floatFragmentTextures:b,floatVertexTextures:S,maxSamples:w}}function ng(){var e=this,t=null,n=0,r=!1,i=!1,a=new rn,o=new Et,s={value:null,needsUpdate:!1};this.uniform=s,this.numPlanes=0,this.numIntersection=0,this.init=function(u,h,f){var d=u.length!==0||h||n!==0||r;return r=h,t=c(u,f,0),n=u.length,d},this.beginShadows=function(){i=!0,c(null)},this.endShadows=function(){i=!1,l()},this.setState=function(u,h,f,d,p,v){if(!r||u===null||u.length===0||i&&!f)i?c(null):l();else{var m=i?0:n,g=m*4,x=p.clippingState||null;s.value=x,x=c(u,d,g,v);for(var b=0;b!==g;++b)x[b]=t[b];p.clippingState=x,this.numIntersection=h?this.numPlanes:0,this.numPlanes+=m}};function l(){s.value!==t&&(s.value=t,s.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function c(u,h,f,d){var p=u!==null?u.length:0,v=null;if(p!==0){if(v=s.value,d!==!0||v===null){var m=f+p*4,g=h.matrixWorldInverse;o.getNormalMatrix(g),(v===null||v.length<m)&&(v=new Float32Array(m));for(var x=0,b=f;x!==p;++x,b+=4)a.copy(u[x]).applyMatrix4(g,o),a.normal.toArray(v,b),v[b+3]=a.constant}s.value=v,s.needsUpdate=!0}return e.numPlanes=p,e.numIntersection=0,v}}function rg(e){var t={};return{get:function(n){if(t[n]!==void 0)return t[n];var r;switch(n){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(n)}return r===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),t[n]=r,r}}}function ig(e,t,n){var r=new WeakMap,i=new WeakMap;function a(u){var h=u.target,f=r.get(h);f.index!==null&&t.remove(f.index);for(var d in f.attributes)t.remove(f.attributes[d]);h.removeEventListener("dispose",a),r.delete(h);var p=i.get(f);p&&(t.remove(p),i.delete(f)),n.memory.geometries--}function o(u,h){var f=r.get(h);return f||(h.addEventListener("dispose",a),h.isBufferGeometry?f=h:h.isGeometry&&(h._bufferGeometry===void 0&&(h._bufferGeometry=new se().setFromObject(u)),f=h._bufferGeometry),r.set(h,f),n.memory.geometries++,f)}function s(u){var h=u.index,f=u.attributes;h!==null&&t.update(h,34963);for(var d in f)t.update(f[d],34962);var p=u.morphAttributes;for(var d in p)for(var v=p[d],m=0,g=v.length;m<g;m++)t.update(v[m],34962)}function l(u){var h=[],f=u.index,d=u.attributes.position,p=0;if(f!==null){var v=f.array;p=f.version;for(var m=0,g=v.length;m<g;m+=3){var x=v[m+0],b=v[m+1],S=v[m+2];h.push(x,b,b,S,S,x)}}else{var v=d.array;p=d.version;for(var m=0,g=v.length/3-1;m<g;m+=3){var x=m+0,b=m+1,S=m+2;h.push(x,b,b,S,S,x)}}var w=new(fu(h)>65535?Ui:Bi)(h,1);w.version=p,t.update(w,34963);var T=i.get(u);T&&t.remove(T),i.set(u,w)}function c(u){var h=i.get(u);if(h){var f=u.index;f!==null&&h.version<f.version&&l(u)}else l(u);return i.get(u)}return{get:o,update:s,getWireframeAttribute:c}}function ag(e,t,n,r){var i=r.isWebGL2,a;function o(f){a=f}var s,l;function c(f){s=f.type,l=f.bytesPerElement}function u(f,d){e.drawElements(a,d,s,f*l),n.update(d,a)}function h(f,d,p,v){if(v!==0){var m,g;if(i)m=e,g="drawElementsInstanced";else if(m=t.get("ANGLE_instanced_arrays"),g="drawElementsInstancedANGLE",m===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[g](a,p,s,d*l,v),n.update(p,a,v)}}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=h}function og(e){var t={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function r(a,o,s){switch(s=s||1,n.calls++,o){case 4:n.triangles+=s*(a/3);break;case 1:n.lines+=s*(a/2);break;case 3:n.lines+=s*(a-1);break;case 2:n.lines+=s*a;break;case 0:n.points+=s*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:t,render:n,programs:null,autoReset:!0,reset:i,update:r}}function sg(e,t){return Math.abs(t[1])-Math.abs(e[1])}function lg(e){var t={},n=new Float32Array(8);function r(i,a,o,s){var l=i.morphTargetInfluences,c=l===void 0?0:l.length,u=t[a.id];if(u===void 0){u=[];for(var h=0;h<c;h++)u[h]=[h,0];t[a.id]=u}for(var f=o.morphTargets&&a.morphAttributes.position,d=o.morphNormals&&a.morphAttributes.normal,h=0;h<c;h++){var p=u[h];p[1]!==0&&(f&&a.deleteAttribute("morphTarget"+h),d&&a.deleteAttribute("morphNormal"+h))}for(var h=0;h<c;h++){var p=u[h];p[0]=h,p[1]=l[h]}u.sort(sg);for(var v=0,h=0;h<8;h++){var p=u[h];if(p){var m=p[0],g=p[1];if(g){f&&a.setAttribute("morphTarget"+h,f[m]),d&&a.setAttribute("morphNormal"+h,d[m]),n[h]=g,v+=g;continue}}n[h]=0}var x=a.morphTargetsRelative?1:1-v;s.getUniforms().setValue(e,"morphTargetBaseInfluence",x),s.getUniforms().setValue(e,"morphTargetInfluences",n)}return{update:r}}function cg(e,t,n,r){var i=new WeakMap;function a(s){var l=r.render.frame,c=s.geometry,u=t.get(s,c);return i.get(u)!==l&&(c.isGeometry&&u.updateFromObject(s),t.update(u),i.set(u,l)),s.isInstancedMesh&&n.update(s.instanceMatrix,34962),u}function o(){i=new WeakMap}return{update:a,dispose:o}}function Gn(e,t,n,r,i,a,o,s,l,c){e=e!==void 0?e:[],t=t!==void 0?t:Ms,o=o!==void 0?o:In,Xe.call(this,e,t,n,r,i,a,o,s,l,c),this.flipY=!1}Gn.prototype=Object.create(Xe.prototype),Gn.prototype.constructor=Gn,Gn.prototype.isCubeTexture=!0,Object.defineProperty(Gn.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}});function Wi(e,t,n,r){Xe.call(this,null),this.image={data:e||null,width:t||1,height:n||1,depth:r||1},this.magFilter=tt,this.minFilter=tt,this.wrapR=yt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Wi.prototype=Object.create(Xe.prototype),Wi.prototype.constructor=Wi,Wi.prototype.isDataTexture2DArray=!0;function ji(e,t,n,r){Xe.call(this,null),this.image={data:e||null,width:t||1,height:n||1,depth:r||1},this.magFilter=tt,this.minFilter=tt,this.wrapR=yt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}ji.prototype=Object.create(Xe.prototype),ji.prototype.constructor=ji,ji.prototype.isDataTexture3D=!0;var mu=new Xe,ug=new Wi,hg=new ji,gu=new Gn,yu=[],xu=[],_u=new Float32Array(16),wu=new Float32Array(9),bu=new Float32Array(4);function Qr(e,t,n){var r=e[0];if(r<=0||r>0)return e;var i=t*n,a=yu[i];if(a===void 0&&(a=new Float32Array(i),yu[i]=a),t!==0){r.toArray(a,0);for(var o=1,s=0;o!==t;++o)s+=n,e[o].toArray(a,s)}return a}function kt(e,t){if(e.length!==t.length)return!1;for(var n=0,r=e.length;n<r;n++)if(e[n]!==t[n])return!1;return!0}function zt(e,t){for(var n=0,r=t.length;n<r;n++)e[n]=t[n]}function Mu(e,t){var n=xu[t];n===void 0&&(n=new Int32Array(t),xu[t]=n);for(var r=0;r!==t;++r)n[r]=e.allocateTextureUnit();return n}function fg(e,t){var n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function dg(e,t){var n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(kt(n,t))return;e.uniform2fv(this.addr,t),zt(n,t)}}function pg(e,t){var n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(t.r!==void 0)(n[0]!==t.r||n[1]!==t.g||n[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(kt(n,t))return;e.uniform3fv(this.addr,t),zt(n,t)}}function vg(e,t){var n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(kt(n,t))return;e.uniform4fv(this.addr,t),zt(n,t)}}function mg(e,t){var n=this.cache,r=t.elements;if(r===void 0){if(kt(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),zt(n,t)}else{if(kt(n,r))return;bu.set(r),e.uniformMatrix2fv(this.addr,!1,bu),zt(n,r)}}function gg(e,t){var n=this.cache,r=t.elements;if(r===void 0){if(kt(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),zt(n,t)}else{if(kt(n,r))return;wu.set(r),e.uniformMatrix3fv(this.addr,!1,wu),zt(n,r)}}function yg(e,t){var n=this.cache,r=t.elements;if(r===void 0){if(kt(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),zt(n,t)}else{if(kt(n,r))return;_u.set(r),e.uniformMatrix4fv(this.addr,!1,_u),zt(n,r)}}function xg(e,t,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.safeSetTexture2D(t||mu,i)}function _g(e,t,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(t||ug,i)}function wg(e,t,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(t||hg,i)}function bg(e,t,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.safeSetTextureCube(t||gu,i)}function Mg(e,t){var n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function Sg(e,t){var n=this.cache;kt(n,t)||(e.uniform2iv(this.addr,t),zt(n,t))}function Tg(e,t){var n=this.cache;kt(n,t)||(e.uniform3iv(this.addr,t),zt(n,t))}function Eg(e,t){var n=this.cache;kt(n,t)||(e.uniform4iv(this.addr,t),zt(n,t))}function Ag(e,t){var n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function Lg(e){switch(e){case 5126:return fg;case 35664:return dg;case 35665:return pg;case 35666:return vg;case 35674:return mg;case 35675:return gg;case 35676:return yg;case 5124:case 35670:return Mg;case 35667:case 35671:return Sg;case 35668:case 35672:return Tg;case 35669:case 35673:return Eg;case 5125:return Ag;case 35678:case 36198:case 36298:case 36306:case 35682:return xg;case 35679:case 36299:case 36307:return wg;case 35680:case 36300:case 36308:case 36293:return bg;case 36289:case 36303:case 36311:case 36292:return _g}}function Cg(e,t){e.uniform1fv(this.addr,t)}function Pg(e,t){e.uniform1iv(this.addr,t)}function Rg(e,t){e.uniform2iv(this.addr,t)}function Dg(e,t){e.uniform3iv(this.addr,t)}function Og(e,t){e.uniform4iv(this.addr,t)}function Ig(e,t){var n=Qr(t,this.size,2);e.uniform2fv(this.addr,n)}function Ng(e,t){var n=Qr(t,this.size,3);e.uniform3fv(this.addr,n)}function zg(e,t){var n=Qr(t,this.size,4);e.uniform4fv(this.addr,n)}function Fg(e,t){var n=Qr(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function Bg(e,t){var n=Qr(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function Ug(e,t){var n=Qr(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function Gg(e,t,n){var r=t.length,i=Mu(n,r);e.uniform1iv(this.addr,i);for(var a=0;a!==r;++a)n.safeSetTexture2D(t[a]||mu,i[a])}function Hg(e,t,n){var r=t.length,i=Mu(n,r);e.uniform1iv(this.addr,i);for(var a=0;a!==r;++a)n.safeSetTextureCube(t[a]||gu,i[a])}function Vg(e){switch(e){case 5126:return Cg;case 35664:return Ig;case 35665:return Ng;case 35666:return zg;case 35674:return Fg;case 35675:return Bg;case 35676:return Ug;case 5124:case 35670:return Pg;case 35667:case 35671:return Rg;case 35668:case 35672:return Dg;case 35669:case 35673:return Og;case 35678:case 36198:case 36298:case 36306:case 35682:return Gg;case 35680:case 36300:case 36308:case 36293:return Hg}}function kg(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=Lg(t.type)}function Su(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=Vg(t.type)}Su.prototype.updateCache=function(e){var t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),zt(t,e)};function Tu(e){this.id=e,this.seq=[],this.map={}}Tu.prototype.setValue=function(e,t,n){for(var r=this.seq,i=0,a=r.length;i!==a;++i){var o=r[i];o.setValue(e,t[o.id],n)}};var ol=/([\w\d_]+)(\])?(\[|\.)?/g;function Eu(e,t){e.seq.push(t),e.map[t.id]=t}function Wg(e,t,n){var r=e.name,i=r.length;for(ol.lastIndex=0;;){var a=ol.exec(r),o=ol.lastIndex,s=a[1],l=a[2]==="]",c=a[3];if(l&&(s=s|0),c===void 0||c==="["&&o+2===i){Eu(n,c===void 0?new kg(s,e,t):new Su(s,e,t));break}else{var u=n.map,h=u[s];h===void 0&&(h=new Tu(s),Eu(n,h)),n=h}}}function Hn(e,t){this.seq=[],this.map={};for(var n=e.getProgramParameter(t,35718),r=0;r<n;++r){var i=e.getActiveUniform(t,r),a=e.getUniformLocation(t,i.name);Wg(i,a,this)}}Hn.prototype.setValue=function(e,t,n,r){var i=this.map[t];i!==void 0&&i.setValue(e,n,r)},Hn.prototype.setOptional=function(e,t,n){var r=t[n];r!==void 0&&this.setValue(e,n,r)},Hn.upload=function(e,t,n,r){for(var i=0,a=t.length;i!==a;++i){var o=t[i],s=n[o.id];s.needsUpdate!==!1&&o.setValue(e,s.value,r)}},Hn.seqWithValue=function(e,t){for(var n=[],r=0,i=e.length;r!==i;++r){var a=e[r];a.id in t&&n.push(a)}return n};function Au(e,t,n){var r=e.createShader(t);return e.shaderSource(r,n),e.compileShader(r),r}var jg=0;function qg(e){for(var t=e.split(`
`),n=0;n<t.length;n++)t[n]=n+1+": "+t[n];return t.join(`
`)}function Lu(e){switch(e){case Ot:return["Linear","( value )"];case Ps:return["sRGB","( value )"];case Rs:return["RGBE","( value )"];case Qc:return["RGBM","( value, 7.0 )"];case Kc:return["RGBM","( value, 16.0 )"];case eu:return["RGBD","( value, 256.0 )"];case $c:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case hp:return["LogLuv","( value )"];default:throw new Error("unsupported encoding: "+e)}}function Cu(e,t,n){var r=e.getShaderParameter(t,35713),i=e.getShaderInfoLog(t).trim();if(r&&i==="")return"";var a=e.getShaderSource(t);return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+`
`+i+qg(a)}function qi(e,t){var n=Lu(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Xg(e,t){var n=Lu(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Yg(e,t){var n;switch(t){case ws:n="Linear";break;case hd:n="Reinhard";break;case fd:n="Uncharted2";break;case dd:n="OptimizedCineon";break;case pd:n="ACESFilmic";break;default:throw new Error("unsupported toneMapping: "+t)}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Zg(e){var t=[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||e.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(Xi).join(`
`)}function Jg(e){var t=[];for(var n in e){var r=e[n];r!==!1&&t.push("#define "+n+" "+r)}return t.join(`
`)}function $g(e,t){for(var n={},r=e.getProgramParameter(t,35721),i=0;i<r;i++){var a=e.getActiveAttrib(t,i),o=a.name;n[o]=e.getAttribLocation(t,o)}return n}function Xi(e){return e!==""}function Pu(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Ru(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}var Qg=/^[ \t]*#include +<([\w\d./]+)>/gm;function sl(e){return e.replace(Qg,Kg)}function Kg(e,t){var n=Ne[t];if(n===void 0)throw new Error("Can not resolve #include <"+t+">");return sl(n)}var ey=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,ty=/#pragma unroll_loop_start[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}[\s]+?#pragma unroll_loop_end/g;function Du(e){return e.replace(ty,Ou).replace(ey,ny)}function ny(e,t,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Ou(e,t,n,r)}function Ou(e,t,n,r){for(var i="",a=parseInt(t);a<parseInt(n);a++)i+=r.replace(/\[ i \]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return i}function Iu(e){var t="precision "+e.precision+` float;
precision `+e.precision+" int;";return e.precision==="highp"?t+=`
#define HIGH_PRECISION`:e.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:e.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function ry(e){var t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===Pc?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===kf?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===Ei&&(t="SHADOWMAP_TYPE_VSM"),t}function iy(e){var t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case Ms:case Ss:t="ENVMAP_TYPE_CUBE";break;case Ci:case Es:t="ENVMAP_TYPE_CUBE_UV";break;case Bc:case Ts:t="ENVMAP_TYPE_EQUIREC";break;case Uc:t="ENVMAP_TYPE_SPHERE";break}return t}function ay(e){var t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case Ss:case Ts:t="ENVMAP_MODE_REFRACTION";break}return t}function oy(e){var t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case Na:t="ENVMAP_BLENDING_MULTIPLY";break;case cd:t="ENVMAP_BLENDING_MIX";break;case ud:t="ENVMAP_BLENDING_ADD";break}return t}function sy(e,t,n){var r=e.getContext(),i=n.defines,a=n.vertexShader,o=n.fragmentShader,s=ry(n),l=iy(n),c=ay(n),u=oy(n),h=e.gammaFactor>0?e.gammaFactor:1,f=n.isWebGL2?"":Zg(n),d=Jg(i),p=r.createProgram(),v,m;if(n.isRawShaderMaterial?(v=[d].filter(Xi).join(`
`),v.length>0&&(v+=`
`),m=[f,d].filter(Xi).join(`
`),m.length>0&&(m+=`
`)):(v=[Iu(n),"#define SHADER_NAME "+n.shaderName,d,n.instancing?"#define USE_INSTANCING":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+h,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+s:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING"," attribute mat4 instanceMatrix;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Xi).join(`
`),m=[f,Iu(n),"#define SHADER_NAME "+n.shaderName,d,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+h,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.envMap?"#define "+c:"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+s:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==za?"#define TONE_MAPPING":"",n.toneMapping!==za?Ne.tonemapping_pars_fragment:"",n.toneMapping!==za?Yg("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.outputEncoding||n.mapEncoding||n.matcapEncoding||n.envMapEncoding||n.emissiveMapEncoding||n.lightMapEncoding?Ne.encodings_pars_fragment:"",n.mapEncoding?qi("mapTexelToLinear",n.mapEncoding):"",n.matcapEncoding?qi("matcapTexelToLinear",n.matcapEncoding):"",n.envMapEncoding?qi("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMapEncoding?qi("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMapEncoding?qi("lightMapTexelToLinear",n.lightMapEncoding):"",n.outputEncoding?Xg("linearToOutputTexel",n.outputEncoding):"",n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(Xi).join(`
`)),a=sl(a),a=Pu(a,n),a=Ru(a,n),o=sl(o),o=Pu(o,n),o=Ru(o,n),a=Du(a),o=Du(o),n.isWebGL2&&!n.isRawShaderMaterial){var g=!1,x=/^\s*#version\s+300\s+es\s*\n/;n.isShaderMaterial&&a.match(x)!==null&&o.match(x)!==null&&(g=!0,a=a.replace(x,""),o=o.replace(x,"")),v=[`#version 300 es
`,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+v,m=[`#version 300 es
`,"#define varying in",g?"":"out highp vec4 pc_fragColor;",g?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+m}var b=v+a,S=m+o,w=Au(r,35633,b),T=Au(r,35632,S);if(r.attachShader(p,w),r.attachShader(p,T),n.index0AttributeName!==void 0?r.bindAttribLocation(p,0,n.index0AttributeName):n.morphTargets===!0&&r.bindAttribLocation(p,0,"position"),r.linkProgram(p),e.debug.checkShaderErrors){var L=r.getProgramInfoLog(p).trim(),I=r.getShaderInfoLog(w).trim(),C=r.getShaderInfoLog(T).trim(),z=!0,N=!0;if(r.getProgramParameter(p,35714)===!1){z=!1;var B=Cu(r,w,"vertex"),U=Cu(r,T,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(p,35715),"gl.getProgramInfoLog",L,B,U)}else L!==""?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",L):(I===""||C==="")&&(N=!1);N&&(this.diagnostics={runnable:z,programLog:L,vertexShader:{log:I,prefix:v},fragmentShader:{log:C,prefix:m}})}r.detachShader(p,w),r.detachShader(p,T),r.deleteShader(w),r.deleteShader(T);var F;this.getUniforms=function(){return F===void 0&&(F=new Hn(r,p)),F};var R;return this.getAttributes=function(){return R===void 0&&(R=$g(r,p)),R},this.destroy=function(){r.deleteProgram(p),this.program=void 0},this.name=n.shaderName,this.id=jg++,this.cacheKey=t,this.usedTimes=1,this.program=p,this.vertexShader=w,this.fragmentShader=T,this}function ly(e,t,n){var r=[],i=n.isWebGL2,a=n.logarithmicDepthBuffer,o=n.floatVertexTextures,s=n.precision,l=n.maxVertexUniforms,c=n.vertexTextures,u={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},h=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen"];function f(v,m){var g;if(m){var x=Tn[m];g={name:v.type,uniforms:lo.clone(x.uniforms),vertexShader:x.vertexShader,fragmentShader:x.fragmentShader}}else g={name:v.type,uniforms:v.uniforms,vertexShader:v.vertexShader,fragmentShader:v.fragmentShader};return g}function d(v){var m=v.skeleton,g=m.bones;if(o)return 1024;var x=l,b=Math.floor((x-20)/4),S=Math.min(b,g.length);return S<g.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+g.length+" bones. This GPU supports "+S+"."),0):S}function p(v){var m;return v?v.isTexture?m=v.encoding:v.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),m=v.texture.encoding):m=Ot,m}this.getParameters=function(v,m,g,x,b,S,w){var T=x.fog,L=v.isMeshStandardMaterial?x.environment:null,I=v.envMap||L,C=u[v.type],z=w.isSkinnedMesh?d(w):0;v.precision!==null&&(s=n.getMaxPrecision(v.precision),s!==v.precision&&console.warn("THREE.WebGLProgram.getParameters:",v.precision,"not supported, using",s,"instead."));var N=f(v,C);v.onBeforeCompile(N,e);var B=e.getRenderTarget(),U={isWebGL2:i,shaderID:C,shaderName:N.name,uniforms:N.uniforms,vertexShader:N.vertexShader,fragmentShader:N.fragmentShader,defines:v.defines,isRawShaderMaterial:v.isRawShaderMaterial,isShaderMaterial:v.isShaderMaterial,precision:s,instancing:w.isInstancedMesh===!0,supportsVertexTextures:c,outputEncoding:B!==null?p(B.texture):e.outputEncoding,map:!!v.map,mapEncoding:p(v.map),matcap:!!v.matcap,matcapEncoding:p(v.matcap),envMap:!!I,envMapMode:I&&I.mapping,envMapEncoding:p(I),envMapCubeUV:!!I&&(I.mapping===Ci||I.mapping===Es),lightMap:!!v.lightMap,lightMapEncoding:p(v.lightMap),aoMap:!!v.aoMap,emissiveMap:!!v.emissiveMap,emissiveMapEncoding:p(v.emissiveMap),bumpMap:!!v.bumpMap,normalMap:!!v.normalMap,objectSpaceNormalMap:v.normalMapType===pp,tangentSpaceNormalMap:v.normalMapType===Dr,clearcoatMap:!!v.clearcoatMap,clearcoatRoughnessMap:!!v.clearcoatRoughnessMap,clearcoatNormalMap:!!v.clearcoatNormalMap,displacementMap:!!v.displacementMap,roughnessMap:!!v.roughnessMap,metalnessMap:!!v.metalnessMap,specularMap:!!v.specularMap,alphaMap:!!v.alphaMap,gradientMap:!!v.gradientMap,sheen:!!v.sheen,combine:v.combine,vertexTangents:v.normalMap&&v.vertexTangents,vertexColors:v.vertexColors,vertexUvs:!!v.map||!!v.bumpMap||!!v.normalMap||!!v.specularMap||!!v.alphaMap||!!v.emissiveMap||!!v.roughnessMap||!!v.metalnessMap||!!v.clearcoatMap||!!v.clearcoatRoughnessMap||!!v.clearcoatNormalMap||!!v.displacementMap,uvsVertexOnly:!(v.map||v.bumpMap||v.normalMap||v.specularMap||v.alphaMap||v.emissiveMap||v.roughnessMap||v.metalnessMap||v.clearcoatNormalMap)&&!!v.displacementMap,fog:!!T,useFog:v.fog,fogExp2:T&&T.isFogExp2,flatShading:v.flatShading,sizeAttenuation:v.sizeAttenuation,logarithmicDepthBuffer:a,skinning:v.skinning&&z>0,maxBones:z,useVertexTexture:o,morphTargets:v.morphTargets,morphNormals:v.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:m.directional.length,numPointLights:m.point.length,numSpotLights:m.spot.length,numRectAreaLights:m.rectArea.length,numHemiLights:m.hemi.length,numDirLightShadows:m.directionalShadowMap.length,numPointLightShadows:m.pointShadowMap.length,numSpotLightShadows:m.spotShadowMap.length,numClippingPlanes:b,numClipIntersection:S,dithering:v.dithering,shadowMapEnabled:e.shadowMap.enabled&&g.length>0,shadowMapType:e.shadowMap.type,toneMapping:v.toneMapped?e.toneMapping:za,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:v.premultipliedAlpha,alphaTest:v.alphaTest,doubleSided:v.side===Oa,flipSided:v.side===dt,depthPacking:v.depthPacking!==void 0?v.depthPacking:!1,index0AttributeName:v.index0AttributeName,extensionDerivatives:v.extensions&&v.extensions.derivatives,extensionFragDepth:v.extensions&&v.extensions.fragDepth,extensionDrawBuffers:v.extensions&&v.extensions.drawBuffers,extensionShaderTextureLOD:v.extensions&&v.extensions.shaderTextureLOD,rendererExtensionFragDepth:i||t.get("EXT_frag_depth")!==null,rendererExtensionDrawBuffers:i||t.get("WEBGL_draw_buffers")!==null,rendererExtensionShaderTextureLod:i||t.get("EXT_shader_texture_lod")!==null,onBeforeCompile:v.onBeforeCompile};return U},this.getProgramCacheKey=function(v){var m=[];if(v.shaderID?m.push(v.shaderID):(m.push(v.fragmentShader),m.push(v.vertexShader)),v.defines!==void 0)for(var g in v.defines)m.push(g),m.push(v.defines[g]);if(v.isRawShaderMaterial===void 0){for(var x=0;x<h.length;x++)m.push(v[h[x]]);m.push(e.outputEncoding),m.push(e.gammaFactor)}return m.push(v.onBeforeCompile.toString()),m.join()},this.acquireProgram=function(v,m){for(var g,x=0,b=r.length;x<b;x++){var S=r[x];if(S.cacheKey===m){g=S,++g.usedTimes;break}}return g===void 0&&(g=new sy(e,m,v),r.push(g)),g},this.releaseProgram=function(v){if(--v.usedTimes===0){var m=r.indexOf(v);r[m]=r[r.length-1],r.pop(),v.destroy()}},this.programs=r}function cy(){var e=new WeakMap;function t(a){var o=e.get(a);return o===void 0&&(o={},e.set(a,o)),o}function n(a){e.delete(a)}function r(a,o,s){e.get(a)[o]=s}function i(){e=new WeakMap}return{get:t,remove:n,update:r,dispose:i}}function uy(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function hy(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Nu(){var e=[],t=0,n=[],r=[],i={id:-1};function a(){t=0,n.length=0,r.length=0}function o(h,f,d,p,v,m){var g=e[t];return g===void 0?(g={id:h.id,object:h,geometry:f,material:d,program:d.program||i,groupOrder:p,renderOrder:h.renderOrder,z:v,group:m},e[t]=g):(g.id=h.id,g.object=h,g.geometry=f,g.material=d,g.program=d.program||i,g.groupOrder=p,g.renderOrder=h.renderOrder,g.z=v,g.group=m),t++,g}function s(h,f,d,p,v,m){var g=o(h,f,d,p,v,m);(d.transparent===!0?r:n).push(g)}function l(h,f,d,p,v,m){var g=o(h,f,d,p,v,m);(d.transparent===!0?r:n).unshift(g)}function c(h,f){n.length>1&&n.sort(h||uy),r.length>1&&r.sort(f||hy)}function u(){for(var h=t,f=e.length;h<f;h++){var d=e[h];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.program=null,d.group=null}}return{opaque:n,transparent:r,init:a,push:s,unshift:l,finish:u,sort:c}}function fy(){var e=new WeakMap;function t(i){var a=i.target;a.removeEventListener("dispose",t),e.delete(a)}function n(i,a){var o=e.get(i),s;return o===void 0?(s=new Nu,e.set(i,new WeakMap),e.get(i).set(a,s),i.addEventListener("dispose",t)):(s=o.get(a),s===void 0&&(s=new Nu,o.set(a,s))),s}function r(){e=new WeakMap}return{get:n,dispose:r}}function dy(){var e={};return{get:function(t){if(e[t.id]!==void 0)return e[t.id];var n;switch(t.type){case"DirectionalLight":n={direction:new M,color:new ie};break;case"SpotLight":n={position:new M,direction:new M,color:new ie,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new M,color:new ie,distance:0,decay:0};break;case"HemisphereLight":n={direction:new M,skyColor:new ie,groundColor:new ie};break;case"RectAreaLight":n={color:new ie,position:new M,halfWidth:new M,halfHeight:new M};break}return e[t.id]=n,n}}}function py(){var e={};return{get:function(t){if(e[t.id]!==void 0)return e[t.id];var n;switch(t.type){case"DirectionalLight":n={shadowBias:0,shadowRadius:1,shadowMapSize:new j};break;case"SpotLight":n={shadowBias:0,shadowRadius:1,shadowMapSize:new j};break;case"PointLight":n={shadowBias:0,shadowRadius:1,shadowMapSize:new j,shadowCameraNear:1,shadowCameraFar:1e3};break}return e[t.id]=n,n}}}var vy=0;function my(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function gy(){for(var e=new dy,t=py(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},r=0;r<9;r++)n.probe.push(new M);var i=new M,a=new De,o=new De;function s(l,c,u){for(var h=0,f=0,d=0,p=0;p<9;p++)n.probe[p].set(0,0,0);var v=0,m=0,g=0,x=0,b=0,S=0,w=0,T=0,L=u.matrixWorldInverse;l.sort(my);for(var p=0,I=l.length;p<I;p++){var C=l[p],z=C.color,N=C.intensity,B=C.distance,U=C.shadow&&C.shadow.map?C.shadow.map.texture:null;if(C.isAmbientLight)h+=z.r*N,f+=z.g*N,d+=z.b*N;else if(C.isLightProbe)for(var F=0;F<9;F++)n.probe[F].addScaledVector(C.sh.coefficients[F],N);else if(C.isDirectionalLight){var R=e.get(C);if(R.color.copy(C.color).multiplyScalar(C.intensity),R.direction.setFromMatrixPosition(C.matrixWorld),i.setFromMatrixPosition(C.target.matrixWorld),R.direction.sub(i),R.direction.transformDirection(L),C.castShadow){var G=C.shadow,k=t.get(C);k.shadowBias=G.bias,k.shadowRadius=G.radius,k.shadowMapSize=G.mapSize,n.directionalShadow[v]=k,n.directionalShadowMap[v]=U,n.directionalShadowMatrix[v]=C.shadow.matrix,S++}n.directional[v]=R,v++}else if(C.isSpotLight){var R=e.get(C);if(R.position.setFromMatrixPosition(C.matrixWorld),R.position.applyMatrix4(L),R.color.copy(z).multiplyScalar(N),R.distance=B,R.direction.setFromMatrixPosition(C.matrixWorld),i.setFromMatrixPosition(C.target.matrixWorld),R.direction.sub(i),R.direction.transformDirection(L),R.coneCos=Math.cos(C.angle),R.penumbraCos=Math.cos(C.angle*(1-C.penumbra)),R.decay=C.decay,C.castShadow){var G=C.shadow,k=t.get(C);k.shadowBias=G.bias,k.shadowRadius=G.radius,k.shadowMapSize=G.mapSize,n.spotShadow[g]=k,n.spotShadowMap[g]=U,n.spotShadowMatrix[g]=C.shadow.matrix,T++}n.spot[g]=R,g++}else if(C.isRectAreaLight){var R=e.get(C);R.color.copy(z).multiplyScalar(N),R.position.setFromMatrixPosition(C.matrixWorld),R.position.applyMatrix4(L),o.identity(),a.copy(C.matrixWorld),a.premultiply(L),o.extractRotation(a),R.halfWidth.set(C.width*.5,0,0),R.halfHeight.set(0,C.height*.5,0),R.halfWidth.applyMatrix4(o),R.halfHeight.applyMatrix4(o),n.rectArea[x]=R,x++}else if(C.isPointLight){var R=e.get(C);if(R.position.setFromMatrixPosition(C.matrixWorld),R.position.applyMatrix4(L),R.color.copy(C.color).multiplyScalar(C.intensity),R.distance=C.distance,R.decay=C.decay,C.castShadow){var G=C.shadow,k=t.get(C);k.shadowBias=G.bias,k.shadowRadius=G.radius,k.shadowMapSize=G.mapSize,k.shadowCameraNear=G.camera.near,k.shadowCameraFar=G.camera.far,n.pointShadow[m]=k,n.pointShadowMap[m]=U,n.pointShadowMatrix[m]=C.shadow.matrix,w++}n.point[m]=R,m++}else if(C.isHemisphereLight){var R=e.get(C);R.direction.setFromMatrixPosition(C.matrixWorld),R.direction.transformDirection(L),R.direction.normalize(),R.skyColor.copy(C.color).multiplyScalar(N),R.groundColor.copy(C.groundColor).multiplyScalar(N),n.hemi[b]=R,b++}}n.ambient[0]=h,n.ambient[1]=f,n.ambient[2]=d;var q=n.hash;(q.directionalLength!==v||q.pointLength!==m||q.spotLength!==g||q.rectAreaLength!==x||q.hemiLength!==b||q.numDirectionalShadows!==S||q.numPointShadows!==w||q.numSpotShadows!==T)&&(n.directional.length=v,n.spot.length=g,n.rectArea.length=x,n.point.length=m,n.hemi.length=b,n.directionalShadow.length=S,n.directionalShadowMap.length=S,n.pointShadow.length=w,n.pointShadowMap.length=w,n.spotShadow.length=T,n.spotShadowMap.length=T,n.directionalShadowMatrix.length=S,n.pointShadowMatrix.length=w,n.spotShadowMatrix.length=T,q.directionalLength=v,q.pointLength=m,q.spotLength=g,q.rectAreaLength=x,q.hemiLength=b,q.numDirectionalShadows=S,q.numPointShadows=w,q.numSpotShadows=T,n.version=vy++)}return{setup:s,state:n}}function zu(){var e=new gy,t=[],n=[];function r(){t.length=0,n.length=0}function i(l){t.push(l)}function a(l){n.push(l)}function o(l){e.setup(t,n,l)}var s={lightsArray:t,shadowsArray:n,lights:e};return{init:r,state:s,setupLights:o,pushLight:i,pushShadow:a}}function yy(){var e=new WeakMap;function t(i){var a=i.target;a.removeEventListener("dispose",t),e.delete(a)}function n(i,a){var o;return e.has(i)===!1?(o=new zu,e.set(i,new WeakMap),e.get(i).set(a,o),i.addEventListener("dispose",t)):e.get(i).has(a)===!1?(o=new zu,e.get(i).set(a,o)):o=e.get(i).get(a),o}function r(){e=new WeakMap}return{get:n,dispose:r}}function lr(e){be.call(this),this.type="MeshDepthMaterial",this.depthPacking=fp,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}lr.prototype=Object.create(be.prototype),lr.prototype.constructor=lr,lr.prototype.isMeshDepthMaterial=!0,lr.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this};function cr(e){be.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new M,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}cr.prototype=Object.create(be.prototype),cr.prototype.constructor=cr,cr.prototype.isMeshDistanceMaterial=!0,cr.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this};var xy=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
  float mean = 0.0;
  float squared_mean = 0.0;
	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );
  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {
    #ifdef HORIZONAL_PASS
      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );
      mean += distribution.x;
      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
    #else
      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );
      mean += depth;
      squared_mean += depth * depth;
    #endif
  }
  mean = mean * HALF_SAMPLE_RATE;
  squared_mean = squared_mean * HALF_SAMPLE_RATE;
  float std_dev = sqrt( squared_mean - mean * mean );
  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`,_y=`void main() {
	gl_Position = vec4( position, 1.0 );
}`;function Fu(e,t,n){var r=new ki,i=new j,a=new j,o=new Ye,s=[],l=[],c={},u={0:dt,1:Ai,2:Oa},h=new rt({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new j},radius:{value:4}},vertexShader:_y,fragmentShader:xy}),f=h.clone();f.defines.HORIZONAL_PASS=1;var d=new se;d.setAttribute("position",new _e(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));var p=new $e(d,h),v=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Pc,this.render=function(w,T,L){if(v.enabled!==!1&&!(v.autoUpdate===!1&&v.needsUpdate===!1)&&w.length!==0){var I=e.getRenderTarget(),C=e.getActiveCubeFace(),z=e.getActiveMipmapLevel(),N=e.state;N.setBlending(On),N.buffers.color.setClear(1,1,1,1),N.buffers.depth.setTest(!0),N.setScissorTest(!1);for(var B=0,U=w.length;B<U;B++){var F=w[B],R=F.shadow;if(R===void 0){console.warn("THREE.WebGLShadowMap:",F,"has no shadow.");continue}i.copy(R.mapSize);var G=R.getFrameExtents();if(i.multiply(G),a.copy(R.mapSize),(i.x>n||i.y>n)&&(console.warn("THREE.WebGLShadowMap:",F,"has shadow exceeding max texture size, reducing"),i.x>n&&(a.x=Math.floor(n/G.x),i.x=a.x*G.x,R.mapSize.x=a.x),i.y>n&&(a.y=Math.floor(n/G.y),i.y=a.y*G.y,R.mapSize.y=a.y)),R.map===null&&!R.isPointLightShadow&&this.type===Ei){var k={minFilter:nt,magFilter:nt,format:Tt};R.map=new vt(i.x,i.y,k),R.map.texture.name=F.name+".shadowMap",R.mapPass=new vt(i.x,i.y,k),R.camera.updateProjectionMatrix()}if(R.map===null){var k={minFilter:tt,magFilter:tt,format:Tt};R.map=new vt(i.x,i.y,k),R.map.texture.name=F.name+".shadowMap",R.camera.updateProjectionMatrix()}e.setRenderTarget(R.map),e.clear();for(var q=R.getViewportCount(),H=0;H<q;H++){var V=R.getViewport(H);o.set(a.x*V.x,a.y*V.y,a.x*V.z,a.y*V.w),N.viewport(o),R.updateMatrices(F,H),r=R.getFrustum(),S(T,L,R.camera,F,this.type)}!R.isPointLightShadow&&this.type===Ei&&m(R,L)}v.needsUpdate=!1,e.setRenderTarget(I,C,z)}};function m(w,T){var L=t.update(p);h.uniforms.shadow_pass.value=w.map.texture,h.uniforms.resolution.value=w.mapSize,h.uniforms.radius.value=w.radius,e.setRenderTarget(w.mapPass),e.clear(),e.renderBufferDirect(T,null,L,h,p,null),f.uniforms.shadow_pass.value=w.mapPass.texture,f.uniforms.resolution.value=w.mapSize,f.uniforms.radius.value=w.radius,e.setRenderTarget(w.map),e.clear(),e.renderBufferDirect(T,null,L,f,p,null)}function g(w,T,L){var I=w<<0|T<<1|L<<2,C=s[I];return C===void 0&&(C=new lr({depthPacking:dp,morphTargets:w,skinning:T}),s[I]=C),C}function x(w,T,L){var I=w<<0|T<<1|L<<2,C=l[I];return C===void 0&&(C=new cr({morphTargets:w,skinning:T}),l[I]=C),C}function b(w,T,L,I,C,z){var N=w.geometry,B=null,U=g,F=w.customDepthMaterial;if(L.isPointLight===!0&&(U=x,F=w.customDistanceMaterial),F===void 0){var R=!1;T.morphTargets===!0&&(N.isBufferGeometry===!0?R=N.morphAttributes&&N.morphAttributes.position&&N.morphAttributes.position.length>0:N.isGeometry===!0&&(R=N.morphTargets&&N.morphTargets.length>0));var G=!1;w.isSkinnedMesh===!0&&(T.skinning===!0?G=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",w));var k=w.isInstancedMesh===!0;B=U(R,G,k)}else B=F;if(e.localClippingEnabled&&T.clipShadows===!0&&T.clippingPlanes.length!==0){var q=B.uuid,H=T.uuid,V=c[q];V===void 0&&(V={},c[q]=V);var W=V[H];W===void 0&&(W=B.clone(),V[H]=W),B=W}return B.visible=T.visible,B.wireframe=T.wireframe,z===Ei?B.side=T.shadowSide!==null?T.shadowSide:T.side:B.side=T.shadowSide!==null?T.shadowSide:u[T.side],B.clipShadows=T.clipShadows,B.clippingPlanes=T.clippingPlanes,B.clipIntersection=T.clipIntersection,B.wireframeLinewidth=T.wireframeLinewidth,B.linewidth=T.linewidth,L.isPointLight===!0&&B.isMeshDistanceMaterial===!0&&(B.referencePosition.setFromMatrixPosition(L.matrixWorld),B.nearDistance=I,B.farDistance=C),B}function S(w,T,L,I,C){if(w.visible!==!1){var z=w.layers.test(T.layers);if(z&&(w.isMesh||w.isLine||w.isPoints)&&(w.castShadow||w.receiveShadow&&C===Ei)&&(!w.frustumCulled||r.intersectsObject(w))){w.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse,w.matrixWorld);var N=t.update(w),B=w.material;if(Array.isArray(B))for(var U=N.groups,F=0,R=U.length;F<R;F++){var G=U[F],k=B[G.materialIndex];if(k&&k.visible){var q=b(w,k,I,L.near,L.far,C);e.renderBufferDirect(L,null,N,q,w,G)}}else if(B.visible){var q=b(w,B,I,L.near,L.far,C);e.renderBufferDirect(L,null,N,q,w,null)}}for(var H=w.children,V=0,W=H.length;V<W;V++)S(H[V],T,L,I,C)}}}function wy(e,t,n){var r=n.isWebGL2;function i(){var O=!1,ee=new Ye,fe=null,Ie=new Ye(0,0,0,0);return{setMask:function(pe){fe!==pe&&!O&&(e.colorMask(pe,pe,pe,pe),fe=pe)},setLocked:function(pe){O=pe},setClear:function(pe,He,qe,at,Ct){Ct===!0&&(pe*=at,He*=at,qe*=at),ee.set(pe,He,qe,at),Ie.equals(ee)===!1&&(e.clearColor(pe,He,qe,at),Ie.copy(ee))},reset:function(){O=!1,fe=null,Ie.set(-1,0,0,0)}}}function a(){var O=!1,ee=null,fe=null,Ie=null;return{setTest:function(pe){pe?Te(2929):ze(2929)},setMask:function(pe){ee!==pe&&!O&&(e.depthMask(pe),ee=pe)},setFunc:function(pe){if(fe!==pe){if(pe)switch(pe){case nd:e.depthFunc(512);break;case rd:e.depthFunc(519);break;case id:e.depthFunc(513);break;case _s:e.depthFunc(515);break;case ad:e.depthFunc(514);break;case od:e.depthFunc(518);break;case sd:e.depthFunc(516);break;case ld:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);fe=pe}},setLocked:function(pe){O=pe},setClear:function(pe){Ie!==pe&&(e.clearDepth(pe),Ie=pe)},reset:function(){O=!1,ee=null,fe=null,Ie=null}}}function o(){var O=!1,ee=null,fe=null,Ie=null,pe=null,He=null,qe=null,at=null,Ct=null;return{setTest:function(Ke){O||(Ke?Te(2960):ze(2960))},setMask:function(Ke){ee!==Ke&&!O&&(e.stencilMask(Ke),ee=Ke)},setFunc:function(Ke,Mt,Rt){(fe!==Ke||Ie!==Mt||pe!==Rt)&&(e.stencilFunc(Ke,Mt,Rt),fe=Ke,Ie=Mt,pe=Rt)},setOp:function(Ke,Mt,Rt){(He!==Ke||qe!==Mt||at!==Rt)&&(e.stencilOp(Ke,Mt,Rt),He=Ke,qe=Mt,at=Rt)},setLocked:function(Ke){O=Ke},setClear:function(Ke){Ct!==Ke&&(e.clearStencil(Ke),Ct=Ke)},reset:function(){O=!1,ee=null,fe=null,Ie=null,pe=null,He=null,qe=null,at=null,Ct=null}}}var s=new i,l=new a,c=new o,u=e.getParameter(34921),h=new Uint8Array(u),f=new Uint8Array(u),d=new Uint8Array(u),p={},v=null,m=null,g=null,x=null,b=null,S=null,w=null,T=null,L=null,I=!1,C=null,z=null,N=null,B=null,U=null,F=e.getParameter(35661),R=!1,G=0,k=e.getParameter(7938);k.indexOf("WebGL")!==-1?(G=parseFloat(/^WebGL\ ([0-9])/.exec(k)[1]),R=G>=1):k.indexOf("OpenGL ES")!==-1&&(G=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(k)[1]),R=G>=2);var q=null,H={},V=new Ye,W=new Ye;function le(O,ee,fe){var Ie=new Uint8Array(4),pe=e.createTexture();e.bindTexture(O,pe),e.texParameteri(O,10241,9728),e.texParameteri(O,10240,9728);for(var He=0;He<fe;He++)e.texImage2D(ee+He,0,6408,1,1,0,6408,5121,Ie);return pe}var Oe={};Oe[3553]=le(3553,3553,1),Oe[34067]=le(34067,34069,6),s.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Te(2929),l.setFunc(_s),Qe(!1),E(Cc),Te(2884),je(On);function Re(){for(var O=0,ee=h.length;O<ee;O++)h[O]=0}function Se(O){Y(O,0)}function Y(O,ee){if(h[O]=1,f[O]===0&&(e.enableVertexAttribArray(O),f[O]=1),d[O]!==ee){var fe=r?e:t.get("ANGLE_instanced_arrays");fe[r?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](O,ee),d[O]=ee}}function Be(){for(var O=0,ee=f.length;O!==ee;++O)f[O]!==h[O]&&(e.disableVertexAttribArray(O),f[O]=0)}function Te(O){p[O]!==!0&&(e.enable(O),p[O]=!0)}function ze(O){p[O]!==!1&&(e.disable(O),p[O]=!1)}function me(O){return v!==O?(e.useProgram(O),v=O,!0):!1}var Z={[Lr]:32774,[jf]:32778,[qf]:32779};if(r)Z[Ic]=32775,Z[Nc]=32776;else{var Ae=t.get("EXT_blend_minmax");Ae!==null&&(Z[Ic]=Ae.MIN_EXT,Z[Nc]=Ae.MAX_EXT)}var Ue={[Xf]:0,[Yf]:1,[Zf]:768,[zc]:770,[td]:776,[Kf]:774,[$f]:772,[Jf]:769,[Fc]:771,[ed]:775,[Qf]:773};function je(O,ee,fe,Ie,pe,He,qe,at){if(O===On){m&&(ze(3042),m=!1);return}if(m||(Te(3042),m=!0),O!==Wf){if(O!==g||at!==I){if((x!==Lr||w!==Lr)&&(e.blendEquation(32774),x=Lr,w=Lr),at)switch(O){case Li:e.blendFuncSeparate(1,771,1,771);break;case Ia:e.blendFunc(1,1);break;case Dc:e.blendFuncSeparate(0,0,769,771);break;case Oc:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",O);break}else switch(O){case Li:e.blendFuncSeparate(770,771,1,771);break;case Ia:e.blendFunc(770,1);break;case Dc:e.blendFunc(0,769);break;case Oc:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",O);break}b=null,S=null,T=null,L=null,g=O,I=at}return}pe=pe||ee,He=He||fe,qe=qe||Ie,(ee!==x||pe!==w)&&(e.blendEquationSeparate(Z[ee],Z[pe]),x=ee,w=pe),(fe!==b||Ie!==S||He!==T||qe!==L)&&(e.blendFuncSeparate(Ue[fe],Ue[Ie],Ue[He],Ue[qe]),b=fe,S=Ie,T=He,L=qe),g=O,I=null}function bt(O,ee){O.side===Oa?ze(2884):Te(2884);var fe=O.side===dt;ee&&(fe=!fe),Qe(fe),O.blending===Li&&O.transparent===!1?je(On):je(O.blending,O.blendEquation,O.blendSrc,O.blendDst,O.blendEquationAlpha,O.blendSrcAlpha,O.blendDstAlpha,O.premultipliedAlpha),l.setFunc(O.depthFunc),l.setTest(O.depthTest),l.setMask(O.depthWrite),s.setMask(O.colorWrite);var Ie=O.stencilWrite;c.setTest(Ie),Ie&&(c.setMask(O.stencilWriteMask),c.setFunc(O.stencilFunc,O.stencilRef,O.stencilFuncMask),c.setOp(O.stencilFail,O.stencilZFail,O.stencilZPass)),Q(O.polygonOffset,O.polygonOffsetFactor,O.polygonOffsetUnits)}function Qe(O){C!==O&&(O?e.frontFace(2304):e.frontFace(2305),C=O)}function E(O){O!==Hf?(Te(2884),O!==z&&(O===Cc?e.cullFace(1029):O===Vf?e.cullFace(1028):e.cullFace(1032))):ze(2884),z=O}function A(O){O!==N&&(R&&e.lineWidth(O),N=O)}function Q(O,ee,fe){O?(Te(32823),(B!==ee||U!==fe)&&(e.polygonOffset(ee,fe),B=ee,U=fe)):ze(32823)}function J(O){O?Te(3089):ze(3089)}function Ce(O){O===void 0&&(O=33984+F-1),q!==O&&(e.activeTexture(O),q=O)}function ue(O,ee){q===null&&Ce();var fe=H[q];fe===void 0&&(fe={type:void 0,texture:void 0},H[q]=fe),(fe.type!==O||fe.texture!==ee)&&(e.bindTexture(O,ee||Oe[O]),fe.type=O,fe.texture=ee)}function P(){var O=H[q];O!==void 0&&O.type!==void 0&&(e.bindTexture(O.type,null),O.type=void 0,O.texture=void 0)}function K(){try{e.compressedTexImage2D.apply(e,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function he(){try{e.texImage2D.apply(e,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function ae(){try{e.texImage3D.apply(e,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function oe(O){V.equals(O)===!1&&(e.scissor(O.x,O.y,O.z,O.w),V.copy(O))}function ge(O){W.equals(O)===!1&&(e.viewport(O.x,O.y,O.z,O.w),W.copy(O))}function ce(){for(var O=0;O<f.length;O++)f[O]===1&&(e.disableVertexAttribArray(O),f[O]=0);p={},q=null,H={},v=null,g=null,C=null,z=null,s.reset(),l.reset(),c.reset()}return{buffers:{color:s,depth:l,stencil:c},initAttributes:Re,enableAttribute:Se,enableAttributeAndDivisor:Y,disableUnusedAttributes:Be,enable:Te,disable:ze,useProgram:me,setBlending:je,setMaterial:bt,setFlipSided:Qe,setCullFace:E,setLineWidth:A,setPolygonOffset:Q,setScissorTest:J,activeTexture:Ce,bindTexture:ue,unbindTexture:P,compressedTexImage2D:K,texImage2D:he,texImage3D:ae,scissor:oe,viewport:ge,reset:ce}}function by(e,t,n,r,i,a,o){var s=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,f=new WeakMap,d,p=!1;try{p=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function v(E,A){return p?new OffscreenCanvas(E,A):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function m(E,A,Q,J){var Ce=1;if((E.width>J||E.height>J)&&(Ce=J/Math.max(E.width,E.height)),Ce<1||A===!0)if(typeof HTMLImageElement!="undefined"&&E instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&E instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&E instanceof ImageBitmap){var ue=A?Le.floorPowerOfTwo:Math.floor,P=ue(Ce*E.width),K=ue(Ce*E.height);d===void 0&&(d=v(P,K));var he=Q?v(P,K):d;he.width=P,he.height=K;var ae=he.getContext("2d");return ae.drawImage(E,0,0,P,K),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+E.width+"x"+E.height+") to ("+P+"x"+K+")."),he}else return"data"in E&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+E.width+"x"+E.height+")."),E;return E}function g(E){return Le.isPowerOfTwo(E.width)&&Le.isPowerOfTwo(E.height)}function x(E){return s?!1:E.wrapS!==yt||E.wrapT!==yt||E.minFilter!==tt&&E.minFilter!==nt}function b(E,A){return E.generateMipmaps&&A&&E.minFilter!==tt&&E.minFilter!==nt}function S(E,A,Q,J){e.generateMipmap(E);var Ce=r.get(A);Ce.__maxMipLevel=Math.log(Math.max(Q,J))*Math.LOG2E}function w(E,A,Q){if(s===!1)return A;if(E!==null){if(e[E]!==void 0)return e[E];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+E+"'")}var J=A;return A===6403&&(Q===5126&&(J=33326),Q===5131&&(J=33325),Q===5121&&(J=33321)),A===6407&&(Q===5126&&(J=34837),Q===5131&&(J=34843),Q===5121&&(J=32849)),A===6408&&(Q===5126&&(J=34836),Q===5131&&(J=34842),Q===5121&&(J=32856)),(J===33325||J===33326||J===34842||J===34836)&&t.get("EXT_color_buffer_float"),J}function T(E){return E===tt||E===As||E===Ls?9728:9729}function L(E){var A=E.target;A.removeEventListener("dispose",L),C(A),A.isVideoTexture&&f.delete(A),o.memory.textures--}function I(E){var A=E.target;A.removeEventListener("dispose",I),z(A),o.memory.textures--}function C(E){var A=r.get(E);A.__webglInit!==void 0&&(e.deleteTexture(A.__webglTexture),r.remove(E))}function z(E){var A=r.get(E),Q=r.get(E.texture);if(E){if(Q.__webglTexture!==void 0&&e.deleteTexture(Q.__webglTexture),E.depthTexture&&E.depthTexture.dispose(),E.isWebGLCubeRenderTarget)for(var J=0;J<6;J++)e.deleteFramebuffer(A.__webglFramebuffer[J]),A.__webglDepthbuffer&&e.deleteRenderbuffer(A.__webglDepthbuffer[J]);else e.deleteFramebuffer(A.__webglFramebuffer),A.__webglDepthbuffer&&e.deleteRenderbuffer(A.__webglDepthbuffer),A.__webglMultisampledFramebuffer&&e.deleteFramebuffer(A.__webglMultisampledFramebuffer),A.__webglColorRenderbuffer&&e.deleteRenderbuffer(A.__webglColorRenderbuffer),A.__webglDepthRenderbuffer&&e.deleteRenderbuffer(A.__webglDepthRenderbuffer);r.remove(E.texture),r.remove(E)}}var N=0;function B(){N=0}function U(){var E=N;return E>=l&&console.warn("THREE.WebGLTextures: Trying to use "+E+" texture units while this GPU supports only "+l),N+=1,E}function F(E,A){var Q=r.get(E);if(E.isVideoTexture&&Ae(E),E.version>0&&Q.__version!==E.version){var J=E.image;if(J===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(J.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Oe(Q,E,A);return}}n.activeTexture(33984+A),n.bindTexture(3553,Q.__webglTexture)}function R(E,A){var Q=r.get(E);if(E.version>0&&Q.__version!==E.version){Oe(Q,E,A);return}n.activeTexture(33984+A),n.bindTexture(35866,Q.__webglTexture)}function G(E,A){var Q=r.get(E);if(E.version>0&&Q.__version!==E.version){Oe(Q,E,A);return}n.activeTexture(33984+A),n.bindTexture(32879,Q.__webglTexture)}function k(E,A){if(E.image.length===6){var Q=r.get(E);if(E.version>0&&Q.__version!==E.version){le(Q,E),n.activeTexture(33984+A),n.bindTexture(34067,Q.__webglTexture),e.pixelStorei(37440,E.flipY);for(var J=E&&(E.isCompressedTexture||E.image[0].isCompressedTexture),Ce=E.image[0]&&E.image[0].isDataTexture,ue=[],P=0;P<6;P++)!J&&!Ce?ue[P]=m(E.image[P],!1,!0,c):ue[P]=Ce?E.image[P].image:E.image[P];var K=ue[0],he=g(K)||s,ae=a.convert(E.format),oe=a.convert(E.type),ge=w(E.internalFormat,ae,oe);W(34067,E,he);var ce;if(J){for(var P=0;P<6;P++){ce=ue[P].mipmaps;for(var O=0;O<ce.length;O++){var ee=ce[O];E.format!==Tt&&E.format!==In?ae!==null?n.compressedTexImage2D(34069+P,O,ge,ee.width,ee.height,0,ee.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+P,O,ge,ee.width,ee.height,0,ae,oe,ee.data)}}Q.__maxMipLevel=ce.length-1}else{ce=E.mipmaps;for(var P=0;P<6;P++)if(Ce){n.texImage2D(34069+P,0,ge,ue[P].width,ue[P].height,0,ae,oe,ue[P].data);for(var O=0;O<ce.length;O++){var ee=ce[O],fe=ee.image[P].image;n.texImage2D(34069+P,O+1,ge,fe.width,fe.height,0,ae,oe,fe.data)}}else{n.texImage2D(34069+P,0,ge,ae,oe,ue[P]);for(var O=0;O<ce.length;O++){var ee=ce[O];n.texImage2D(34069+P,O+1,ge,ae,oe,ee.image[P])}}Q.__maxMipLevel=ce.length}b(E,he)&&S(34067,E,K.width,K.height),Q.__version=E.version,E.onUpdate&&E.onUpdate(E)}else n.activeTexture(33984+A),n.bindTexture(34067,Q.__webglTexture)}}function q(E,A){n.activeTexture(33984+A),n.bindTexture(34067,r.get(E).__webglTexture)}var H={[Fa]:10497,[yt]:33071,[Ba]:33648},V={[tt]:9728,[As]:9984,[Ls]:9986,[nt]:9729,[Gc]:9985,[Ua]:9987};function W(E,A,Q){Q?(e.texParameteri(E,10242,H[A.wrapS]),e.texParameteri(E,10243,H[A.wrapT]),(E===32879||E===35866)&&e.texParameteri(E,32882,H[A.wrapR]),e.texParameteri(E,10240,V[A.magFilter]),e.texParameteri(E,10241,V[A.minFilter])):(e.texParameteri(E,10242,33071),e.texParameteri(E,10243,33071),(E===32879||E===35866)&&e.texParameteri(E,32882,33071),(A.wrapS!==yt||A.wrapT!==yt)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(E,10240,T(A.magFilter)),e.texParameteri(E,10241,T(A.minFilter)),A.minFilter!==tt&&A.minFilter!==nt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));var J=t.get("EXT_texture_filter_anisotropic");if(J){if(A.type===tn&&t.get("OES_texture_float_linear")===null||A.type===Pi&&(s||t.get("OES_texture_half_float_linear"))===null)return;(A.anisotropy>1||r.get(A).__currentAnisotropy)&&(e.texParameterf(E,J.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(A.anisotropy,i.getMaxAnisotropy())),r.get(A).__currentAnisotropy=A.anisotropy)}}function le(E,A){E.__webglInit===void 0&&(E.__webglInit=!0,A.addEventListener("dispose",L),E.__webglTexture=e.createTexture(),o.memory.textures++)}function Oe(E,A,Q){var J=3553;A.isDataTexture2DArray&&(J=35866),A.isDataTexture3D&&(J=32879),le(E,A),n.activeTexture(33984+Q),n.bindTexture(J,E.__webglTexture),e.pixelStorei(37440,A.flipY),e.pixelStorei(37441,A.premultiplyAlpha),e.pixelStorei(3317,A.unpackAlignment);var Ce=x(A)&&g(A.image)===!1,ue=m(A.image,Ce,!1,u),P=g(ue)||s,K=a.convert(A.format),he=a.convert(A.type),ae=w(A.internalFormat,K,he);W(J,A,P);var oe,ge=A.mipmaps;if(A.isDepthTexture)ae=6402,s?A.type===tn?ae=36012:A.type===Va?ae=33190:A.type===Ri?ae=35056:ae=33189:A.type===tn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),A.format===Cr&&ae===6402&&A.type!==Ha&&A.type!==Va&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),A.type=Ha,he=a.convert(A.type)),A.format===Di&&ae===6402&&(ae=34041,A.type!==Ri&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),A.type=Ri,he=a.convert(A.type))),n.texImage2D(3553,0,ae,ue.width,ue.height,0,K,he,null);else if(A.isDataTexture)if(ge.length>0&&P){for(var ce=0,O=ge.length;ce<O;ce++)oe=ge[ce],n.texImage2D(3553,ce,ae,oe.width,oe.height,0,K,he,oe.data);A.generateMipmaps=!1,E.__maxMipLevel=ge.length-1}else n.texImage2D(3553,0,ae,ue.width,ue.height,0,K,he,ue.data),E.__maxMipLevel=0;else if(A.isCompressedTexture){for(var ce=0,O=ge.length;ce<O;ce++)oe=ge[ce],A.format!==Tt&&A.format!==In?K!==null?n.compressedTexImage2D(3553,ce,ae,oe.width,oe.height,0,oe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,ce,ae,oe.width,oe.height,0,K,he,oe.data);E.__maxMipLevel=ge.length-1}else if(A.isDataTexture2DArray)n.texImage3D(35866,0,ae,ue.width,ue.height,ue.depth,0,K,he,ue.data),E.__maxMipLevel=0;else if(A.isDataTexture3D)n.texImage3D(32879,0,ae,ue.width,ue.height,ue.depth,0,K,he,ue.data),E.__maxMipLevel=0;else if(ge.length>0&&P){for(var ce=0,O=ge.length;ce<O;ce++)oe=ge[ce],n.texImage2D(3553,ce,ae,K,he,oe);A.generateMipmaps=!1,E.__maxMipLevel=ge.length-1}else n.texImage2D(3553,0,ae,K,he,ue),E.__maxMipLevel=0;b(A,P)&&S(J,A,ue.width,ue.height),E.__version=A.version,A.onUpdate&&A.onUpdate(A)}function Re(E,A,Q,J){var Ce=a.convert(A.texture.format),ue=a.convert(A.texture.type),P=w(A.texture.internalFormat,Ce,ue);n.texImage2D(J,0,P,A.width,A.height,0,Ce,ue,null),e.bindFramebuffer(36160,E),e.framebufferTexture2D(36160,Q,J,r.get(A.texture).__webglTexture,0),e.bindFramebuffer(36160,null)}function Se(E,A,Q){if(e.bindRenderbuffer(36161,E),A.depthBuffer&&!A.stencilBuffer){var J=33189;if(Q){var Ce=A.depthTexture;Ce&&Ce.isDepthTexture&&(Ce.type===tn?J=36012:Ce.type===Va&&(J=33190));var ue=Z(A);e.renderbufferStorageMultisample(36161,ue,J,A.width,A.height)}else e.renderbufferStorage(36161,J,A.width,A.height);e.framebufferRenderbuffer(36160,36096,36161,E)}else if(A.depthBuffer&&A.stencilBuffer){if(Q){var ue=Z(A);e.renderbufferStorageMultisample(36161,ue,35056,A.width,A.height)}else e.renderbufferStorage(36161,34041,A.width,A.height);e.framebufferRenderbuffer(36160,33306,36161,E)}else{var P=a.convert(A.texture.format),K=a.convert(A.texture.type),J=w(A.texture.internalFormat,P,K);if(Q){var ue=Z(A);e.renderbufferStorageMultisample(36161,ue,J,A.width,A.height)}else e.renderbufferStorage(36161,J,A.width,A.height)}e.bindRenderbuffer(36161,null)}function Y(E,A){var Q=A&&A.isWebGLCubeRenderTarget;if(Q)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,E),!(A.depthTexture&&A.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!r.get(A.depthTexture).__webglTexture||A.depthTexture.image.width!==A.width||A.depthTexture.image.height!==A.height)&&(A.depthTexture.image.width=A.width,A.depthTexture.image.height=A.height,A.depthTexture.needsUpdate=!0),F(A.depthTexture,0);var J=r.get(A.depthTexture).__webglTexture;if(A.depthTexture.format===Cr)e.framebufferTexture2D(36160,36096,3553,J,0);else if(A.depthTexture.format===Di)e.framebufferTexture2D(36160,33306,3553,J,0);else throw new Error("Unknown depthTexture format")}function Be(E){var A=r.get(E),Q=E.isWebGLCubeRenderTarget===!0;if(E.depthTexture){if(Q)throw new Error("target.depthTexture not supported in Cube render targets");Y(A.__webglFramebuffer,E)}else if(Q){A.__webglDepthbuffer=[];for(var J=0;J<6;J++)e.bindFramebuffer(36160,A.__webglFramebuffer[J]),A.__webglDepthbuffer[J]=e.createRenderbuffer(),Se(A.__webglDepthbuffer[J],E,!1)}else e.bindFramebuffer(36160,A.__webglFramebuffer),A.__webglDepthbuffer=e.createRenderbuffer(),Se(A.__webglDepthbuffer,E,!1);e.bindFramebuffer(36160,null)}function Te(E){var A=r.get(E),Q=r.get(E.texture);E.addEventListener("dispose",I),Q.__webglTexture=e.createTexture(),o.memory.textures++;var J=E.isWebGLCubeRenderTarget===!0,Ce=E.isWebGLMultisampleRenderTarget===!0,ue=g(E)||s;if(s&&E.texture.format===In&&(E.texture.type===tn||E.texture.type===Pi)&&(E.texture.format=Tt,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),J){A.__webglFramebuffer=[];for(var P=0;P<6;P++)A.__webglFramebuffer[P]=e.createFramebuffer()}else if(A.__webglFramebuffer=e.createFramebuffer(),Ce)if(s){A.__webglMultisampledFramebuffer=e.createFramebuffer(),A.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,A.__webglColorRenderbuffer);var K=a.convert(E.texture.format),he=a.convert(E.texture.type),ae=w(E.texture.internalFormat,K,he),oe=Z(E);e.renderbufferStorageMultisample(36161,oe,ae,E.width,E.height),e.bindFramebuffer(36160,A.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,A.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),E.depthBuffer&&(A.__webglDepthRenderbuffer=e.createRenderbuffer(),Se(A.__webglDepthRenderbuffer,E,!0)),e.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(J){n.bindTexture(34067,Q.__webglTexture),W(34067,E.texture,ue);for(var P=0;P<6;P++)Re(A.__webglFramebuffer[P],E,36064,34069+P);b(E.texture,ue)&&S(34067,E.texture,E.width,E.height),n.bindTexture(34067,null)}else n.bindTexture(3553,Q.__webglTexture),W(3553,E.texture,ue),Re(A.__webglFramebuffer,E,36064,3553),b(E.texture,ue)&&S(3553,E.texture,E.width,E.height),n.bindTexture(3553,null);E.depthBuffer&&Be(E)}function ze(E){var A=E.texture,Q=g(E)||s;if(b(A,Q)){var J=E.isWebGLCubeRenderTarget?34067:3553,Ce=r.get(A).__webglTexture;n.bindTexture(J,Ce),S(J,A,E.width,E.height),n.bindTexture(J,null)}}function me(E){if(E.isWebGLMultisampleRenderTarget)if(s){var A=r.get(E);e.bindFramebuffer(36008,A.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,A.__webglFramebuffer);var Q=E.width,J=E.height,Ce=16384;E.depthBuffer&&(Ce|=256),E.stencilBuffer&&(Ce|=1024),e.blitFramebuffer(0,0,Q,J,0,0,Q,J,Ce,9728),e.bindFramebuffer(36160,A.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function Z(E){return s&&E.isWebGLMultisampleRenderTarget?Math.min(h,E.samples):0}function Ae(E){var A=o.render.frame;f.get(E)!==A&&(f.set(E,A),E.update())}var Ue=!1,je=!1;function bt(E,A){E&&E.isWebGLRenderTarget&&(Ue===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),Ue=!0),E=E.texture),F(E,A)}function Qe(E,A){E&&E.isWebGLCubeRenderTarget&&(je===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),je=!0),E=E.texture),E&&E.isCubeTexture||Array.isArray(E.image)&&E.image.length===6?k(E,A):q(E,A)}this.allocateTextureUnit=U,this.resetTextureUnits=B,this.setTexture2D=F,this.setTexture2DArray=R,this.setTexture3D=G,this.setTextureCube=k,this.setTextureCubeDynamic=q,this.setupRenderTarget=Te,this.updateRenderTargetMipmap=ze,this.updateMultisampleRenderTarget=me,this.safeSetTexture2D=bt,this.safeSetTextureCube=Qe}function My(e,t,n){var r=n.isWebGL2;function i(a){var o;if(a===Ga)return 5121;if(a===yd)return 32819;if(a===xd)return 32820;if(a===_d)return 33635;if(a===vd)return 5120;if(a===md)return 5122;if(a===Ha)return 5123;if(a===gd)return 5124;if(a===Va)return 5125;if(a===tn)return 5126;if(a===Pi)return r?5131:(o=t.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(a===wd)return 6406;if(a===In)return 6407;if(a===Tt)return 6408;if(a===bd)return 6409;if(a===Md)return 6410;if(a===Cr)return 6402;if(a===Di)return 34041;if(a===Td)return 6403;if(a===Ed)return 36244;if(a===Ad)return 33319;if(a===Ld)return 33320;if(a===Cd)return 36248;if(a===Pd)return 36249;if(a===Hc||a===Vc||a===kc||a===Wc)if(o=t.get("WEBGL_compressed_texture_s3tc"),o!==null){if(a===Hc)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===Vc)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===kc)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===Wc)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(a===jc||a===qc||a===Xc||a===Yc)if(o=t.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(a===jc)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===qc)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===Xc)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===Yc)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(a===Rd)return o=t.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if((a===Zc||a===Jc)&&(o=t.get("WEBGL_compressed_texture_etc"),o!==null)){if(a===Zc)return o.COMPRESSED_RGB8_ETC2;if(a===Jc)return o.COMPRESSED_RGBA8_ETC2_EAC}if(a===Dd||a===Od||a===Id||a===Nd||a===zd||a===Fd||a===Bd||a===Ud||a===Gd||a===Hd||a===Vd||a===kd||a===Wd||a===jd||a===Xd||a===Yd||a===Zd||a===Jd||a===$d||a===Qd||a===Kd||a===ep||a===tp||a===np||a===rp||a===ip||a===ap||a===op)return o=t.get("WEBGL_compressed_texture_astc"),o!==null?a:null;if(a===qd)return o=t.get("EXT_texture_compression_bptc"),o!==null?a:null;if(a===Ri)return r?34042:(o=t.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:i}}function ll(e){ft.call(this),this.cameras=e||[]}ll.prototype=Object.assign(Object.create(ft.prototype),{constructor:ll,isArrayCamera:!0});function Yi(){ne.call(this),this.type="Group"}Yi.prototype=Object.assign(Object.create(ne.prototype),{constructor:Yi,isGroup:!0});function Bu(e,t){var n=this,r=null,i=1,a=null,o="local-floor",s=null,l=[],c=new Map,u=new ft;u.layers.enable(1),u.viewport=new Ye;var h=new ft;h.layers.enable(2),h.viewport=new Ye;var f=new ll([u,h]);f.layers.enable(1),f.layers.enable(2);var d=null,p=null;this.enabled=!1,this.isPresenting=!1,this.getController=function(z){var N=l[z];return N===void 0&&(N={},l[z]=N),N.targetRay===void 0&&(N.targetRay=new Yi,N.targetRay.matrixAutoUpdate=!1,N.targetRay.visible=!1),N.targetRay},this.getControllerGrip=function(z){var N=l[z];return N===void 0&&(N={},l[z]=N),N.grip===void 0&&(N.grip=new Yi,N.grip.matrixAutoUpdate=!1,N.grip.visible=!1),N.grip};function v(z){var N=c.get(z.inputSource);N&&(N.targetRay&&N.targetRay.dispatchEvent({type:z.type}),N.grip&&N.grip.dispatchEvent({type:z.type}))}function m(){c.forEach(function(z,N){z.targetRay&&(z.targetRay.dispatchEvent({type:"disconnected",data:N}),z.targetRay.visible=!1),z.grip&&(z.grip.dispatchEvent({type:"disconnected",data:N}),z.grip.visible=!1)}),c.clear(),e.setFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),C.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function g(z){a=z,C.setContext(r),C.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}this.setFramebufferScaleFactor=function(z){i=z,n.isPresenting==!0&&console.warn("WebXRManager: Cannot change framebuffer scale while presenting VR content")},this.setReferenceSpaceType=function(z){o=z},this.getReferenceSpace=function(){return a},this.getSession=function(){return r},this.setSession=function(z){if(r=z,r!==null){r.addEventListener("select",v),r.addEventListener("selectstart",v),r.addEventListener("selectend",v),r.addEventListener("squeeze",v),r.addEventListener("squeezestart",v),r.addEventListener("squeezeend",v),r.addEventListener("end",m);var N=t.getContextAttributes(),B={antialias:N.antialias,alpha:N.alpha,depth:N.depth,stencil:N.stencil,framebufferScaleFactor:i},U=new XRWebGLLayer(r,t,B);r.updateRenderState({baseLayer:U}),r.requestReferenceSpace(o).then(g),r.addEventListener("inputsourceschange",x)}};function x(z){for(var N=r.inputSources,B=0;B<l.length;B++)c.set(N[B],l[B]);for(var B=0;B<z.removed.length;B++){var U=z.removed[B],F=c.get(U);F&&(F.targetRay&&F.targetRay.dispatchEvent({type:"disconnected",data:U}),F.grip&&F.grip.dispatchEvent({type:"disconnected",data:U}),c.delete(U))}for(var B=0;B<z.added.length;B++){var U=z.added[B],F=c.get(U);F&&(F.targetRay&&F.targetRay.dispatchEvent({type:"connected",data:U}),F.grip&&F.grip.dispatchEvent({type:"connected",data:U}))}}var b=new M,S=new M;function w(z,N,B){b.setFromMatrixPosition(N.matrixWorld),S.setFromMatrixPosition(B.matrixWorld);var U=b.distanceTo(S),F=N.projectionMatrix.elements,R=B.projectionMatrix.elements,G=F[14]/(F[10]-1),k=F[14]/(F[10]+1),q=(F[9]+1)/F[5],H=(F[9]-1)/F[5],V=(F[8]-1)/F[0],W=(R[8]+1)/R[0],le=G*V,Oe=G*W,Re=U/(-V+W),Se=Re*-V;N.matrixWorld.decompose(z.position,z.quaternion,z.scale),z.translateX(Se),z.translateZ(Re),z.matrixWorld.compose(z.position,z.quaternion,z.scale),z.matrixWorldInverse.getInverse(z.matrixWorld);var Y=G+Re,Be=k+Re,Te=le-Se,ze=Oe+(U-Se),me=q*k/Be*Y,Z=H*k/Be*Y;z.projectionMatrix.makePerspective(Te,ze,me,Z,Y,Be)}function T(z,N){N===null?z.matrixWorld.copy(z.matrix):z.matrixWorld.multiplyMatrices(N.matrixWorld,z.matrix),z.matrixWorldInverse.getInverse(z.matrixWorld)}this.getCamera=function(z){f.near=h.near=u.near=z.near,f.far=h.far=u.far=z.far,(d!==f.near||p!==f.far)&&(r.updateRenderState({depthNear:f.near,depthFar:f.far}),d=f.near,p=f.far);var N=z.parent,B=f.cameras;T(f,N);for(var U=0;U<B.length;U++)T(B[U],N);z.matrixWorld.copy(f.matrixWorld);for(var F=z.children,U=0,R=F.length;U<R;U++)F[U].updateMatrixWorld(!0);return w(f,u,h),f};var L=null;function I(z,N){if(s=N.getViewerPose(a),s!==null){var B=s.views,U=r.renderState.baseLayer;e.setFramebuffer(U.framebuffer);for(var F=0;F<B.length;F++){var R=B[F],G=U.getViewport(R),k=f.cameras[F];k.matrix.fromArray(R.transform.matrix),k.projectionMatrix.fromArray(R.projectionMatrix),k.viewport.set(G.x,G.y,G.width,G.height),F===0&&f.matrix.copy(k.matrix)}}for(var q=r.inputSources,F=0;F<l.length;F++){var H=l[F],V=q[F],W=null,le=null;V&&(H.targetRay&&(W=N.getPose(V.targetRaySpace,a),W!==null&&(H.targetRay.matrix.fromArray(W.transform.matrix),H.targetRay.matrix.decompose(H.targetRay.position,H.targetRay.rotation,H.targetRay.scale))),H.grip&&V.gripSpace&&(le=N.getPose(V.gripSpace,a),le!==null&&(H.grip.matrix.fromArray(le.transform.matrix),H.grip.matrix.decompose(H.grip.position,H.grip.rotation,H.grip.scale)))),H.targetRay&&(H.targetRay.visible=W!==null),H.grip&&(H.grip.visible=le!==null)}L&&L(z,N)}var C=new vu;C.setAnimationLoop(I),this.setAnimationLoop=function(z){L=z},this.dispose=function(){}}Object.assign(Bu.prototype,Yt.prototype);function Uu(e){e=e||{};var t=e.canvas!==void 0?e.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),n=e.context!==void 0?e.context:null,r=e.alpha!==void 0?e.alpha:!1,i=e.depth!==void 0?e.depth:!0,a=e.stencil!==void 0?e.stencil:!0,o=e.antialias!==void 0?e.antialias:!1,s=e.premultipliedAlpha!==void 0?e.premultipliedAlpha:!0,l=e.preserveDrawingBuffer!==void 0?e.preserveDrawingBuffer:!1,c=e.powerPreference!==void 0?e.powerPreference:"default",u=e.failIfMajorPerformanceCaveat!==void 0?e.failIfMajorPerformanceCaveat:!1,h=null,f=null;this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Ot,this.physicallyCorrectLights=!1,this.toneMapping=ws,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var d=this,p=!1,v=null,m=0,g=0,x=null,b=null,S=-1,w={geometry:null,program:null,wireframe:!1},T=null,L=null,I=new Ye,C=new Ye,z=null,N=t.width,B=t.height,U=1,F=null,R=null,G=new Ye(0,0,N,B),k=new Ye(0,0,N,B),q=!1,H=new ki,V=new ng,W=!1,le=!1,Oe=new De,Re=new M;function Se(){return x===null?U:1}var Y;try{var Be={alpha:r,depth:i,stencil:a,antialias:o,premultipliedAlpha:s,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:u,xrCompatible:!0};if(t.addEventListener("webglcontextlost",ge,!1),t.addEventListener("webglcontextrestored",ce,!1),Y=n||t.getContext("webgl",Be)||t.getContext("experimental-webgl",Be),Y===null)throw t.getContext("webgl")!==null?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.");Y.getShaderPrecisionFormat===void 0&&(Y.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(y){throw console.error("THREE.WebGLRenderer: "+y.message),y}var Te,ze,me,Z,Ae,Ue,je,bt,Qe,E,A,Q,J,Ce,ue,P,K;function he(){Te=new rg(Y),ze=new tg(Y,Te,e),ze.isWebGL2===!1&&(Te.get("WEBGL_depth_texture"),Te.get("OES_texture_float"),Te.get("OES_texture_half_float"),Te.get("OES_texture_half_float_linear"),Te.get("OES_standard_derivatives"),Te.get("OES_element_index_uint"),Te.get("ANGLE_instanced_arrays")),Te.get("OES_texture_float_linear"),K=new My(Y,Te,ze),me=new wy(Y,Te,ze),me.scissor(C.copy(k).multiplyScalar(U).floor()),me.viewport(I.copy(G).multiplyScalar(U).floor()),Z=new og,Ae=new cy,Ue=new by(Y,Te,me,Ae,ze,K,Z),je=new Op(Y,ze),bt=new ig(Y,je,Z),Qe=new cg(Y,bt,je,Z),Ce=new lg(Y),E=new ly(d,Te,ze),A=new fy,Q=new yy,J=new Km(d,me,Qe,s),ue=new eg(Y,Te,Z,ze),P=new ag(Y,Te,Z,ze),Z.programs=E.programs,d.capabilities=ze,d.extensions=Te,d.properties=Ae,d.renderLists=A,d.state=me,d.info=Z}he();var ae=new Bu(d,Y);this.xr=ae;var oe=new Fu(d,Qe,ze.maxTextureSize);this.shadowMap=oe,this.getContext=function(){return Y},this.getContextAttributes=function(){return Y.getContextAttributes()},this.forceContextLoss=function(){var y=Te.get("WEBGL_lose_context");y&&y.loseContext()},this.forceContextRestore=function(){var y=Te.get("WEBGL_lose_context");y&&y.restoreContext()},this.getPixelRatio=function(){return U},this.setPixelRatio=function(y){y!==void 0&&(U=y,this.setSize(N,B,!1))},this.getSize=function(y){return y===void 0&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),y=new j),y.set(N,B)},this.setSize=function(y,_,D){if(ae.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}N=y,B=_,t.width=Math.floor(y*U),t.height=Math.floor(_*U),D!==!1&&(t.style.width=y+"px",t.style.height=_+"px"),this.setViewport(0,0,y,_)},this.getDrawingBufferSize=function(y){return y===void 0&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),y=new j),y.set(N*U,B*U).floor()},this.setDrawingBufferSize=function(y,_,D){N=y,B=_,U=D,t.width=Math.floor(y*D),t.height=Math.floor(_*D),this.setViewport(0,0,y,_)},this.getCurrentViewport=function(y){return y===void 0&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),y=new Ye),y.copy(I)},this.getViewport=function(y){return y.copy(G)},this.setViewport=function(y,_,D,X){y.isVector4?G.set(y.x,y.y,y.z,y.w):G.set(y,_,D,X),me.viewport(I.copy(G).multiplyScalar(U).floor())},this.getScissor=function(y){return y.copy(k)},this.setScissor=function(y,_,D,X){y.isVector4?k.set(y.x,y.y,y.z,y.w):k.set(y,_,D,X),me.scissor(C.copy(k).multiplyScalar(U).floor())},this.getScissorTest=function(){return q},this.setScissorTest=function(y){me.setScissorTest(q=y)},this.setOpaqueSort=function(y){F=y},this.setTransparentSort=function(y){R=y},this.getClearColor=function(){return J.getClearColor()},this.setClearColor=function(){J.setClearColor.apply(J,arguments)},this.getClearAlpha=function(){return J.getClearAlpha()},this.setClearAlpha=function(){J.setClearAlpha.apply(J,arguments)},this.clear=function(y,_,D){var X=0;(y===void 0||y)&&(X|=16384),(_===void 0||_)&&(X|=256),(D===void 0||D)&&(X|=1024),Y.clear(X)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",ge,!1),t.removeEventListener("webglcontextrestored",ce,!1),A.dispose(),Q.dispose(),Ae.dispose(),Qe.dispose(),ae.dispose(),Ct.stop(),this.forceContextLoss()};function ge(y){y.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),p=!0}function ce(){console.log("THREE.WebGLRenderer: Context Restored."),p=!1,he()}function O(y){var _=y.target;_.removeEventListener("dispose",O),ee(_)}function ee(y){fe(y),Ae.remove(y)}function fe(y){var _=Ae.get(y).program;y.program=void 0,_!==void 0&&E.releaseProgram(_)}function Ie(y,_){y.render(function(D){d.renderBufferImmediate(D,_)})}this.renderBufferImmediate=function(y,_){me.initAttributes();var D=Ae.get(y);y.hasPositions&&!D.position&&(D.position=Y.createBuffer()),y.hasNormals&&!D.normal&&(D.normal=Y.createBuffer()),y.hasUvs&&!D.uv&&(D.uv=Y.createBuffer()),y.hasColors&&!D.color&&(D.color=Y.createBuffer());var X=_.getAttributes();y.hasPositions&&(Y.bindBuffer(34962,D.position),Y.bufferData(34962,y.positionArray,35048),me.enableAttribute(X.position),Y.vertexAttribPointer(X.position,3,5126,!1,0,0)),y.hasNormals&&(Y.bindBuffer(34962,D.normal),Y.bufferData(34962,y.normalArray,35048),me.enableAttribute(X.normal),Y.vertexAttribPointer(X.normal,3,5126,!1,0,0)),y.hasUvs&&(Y.bindBuffer(34962,D.uv),Y.bufferData(34962,y.uvArray,35048),me.enableAttribute(X.uv),Y.vertexAttribPointer(X.uv,2,5126,!1,0,0)),y.hasColors&&(Y.bindBuffer(34962,D.color),Y.bufferData(34962,y.colorArray,35048),me.enableAttribute(X.color),Y.vertexAttribPointer(X.color,3,5126,!1,0,0)),me.disableUnusedAttributes(),Y.drawArrays(4,0,y.count),y.count=0};var pe=new xn;this.renderBufferDirect=function(y,_,D,X,$,xe){_===null&&(_=pe);var de=$.isMesh&&$.matrixWorld.determinant()<0,Fe=La(y,_,X,$);me.setMaterial(X,de);var Ee=!1;(w.geometry!==D.id||w.program!==Fe.id||w.wireframe!==(X.wireframe===!0))&&(w.geometry=D.id,w.program=Fe.id,w.wireframe=X.wireframe===!0,Ee=!0),(X.morphTargets||X.morphNormals)&&(Ce.update($,D,X,Fe),Ee=!0);var Pe=D.index,Je=D.attributes.position;if(Pe===null){if(Je===void 0||Je.count===0)return}else if(Pe.count===0)return;var ke=1;X.wireframe===!0&&(Pe=bt.getWireframeAttribute(D),ke=2);var Ge,ve=ue;Pe!==null&&(Ge=je.get(Pe),ve=P,ve.setIndex(Ge)),Ee&&(He($,D,X,Fe),Pe!==null&&Y.bindBuffer(34963,Ge.buffer));var we=Pe!==null?Pe.count:Je.count,en=D.drawRange.start*ke,ht=D.drawRange.count*ke,Er=xe!==null?xe.start*ke:0,Dt=xe!==null?xe.count*ke:1/0,St=Math.max(en,Er),ds=Math.min(we,en+ht,Er+Dt)-1,Ra=Math.max(0,ds-St+1);if(Ra!==0){if($.isMesh)X.wireframe===!0?(me.setLineWidth(X.wireframeLinewidth*Se()),ve.setMode(1)):ve.setMode(4);else if($.isLine){var ps=X.linewidth;ps===void 0&&(ps=1),me.setLineWidth(ps*Se()),$.isLineSegments?ve.setMode(1):$.isLineLoop?ve.setMode(2):ve.setMode(3)}else $.isPoints?ve.setMode(0):$.isSprite&&ve.setMode(4);$.isInstancedMesh?ve.renderInstances(D,St,Ra,$.count):D.isInstancedBufferGeometry?ve.renderInstances(D,St,Ra,D.maxInstancedCount):ve.render(St,Ra)}};function He(y,_,D,X){if(!(ze.isWebGL2===!1&&(y.isInstancedMesh||_.isInstancedBufferGeometry)&&Te.get("ANGLE_instanced_arrays")===null)){me.initAttributes();var $=_.attributes,xe=X.getAttributes(),de=D.defaultAttributeValues;for(var Fe in xe){var Ee=xe[Fe];if(Ee>=0){var Pe=$[Fe];if(Pe!==void 0){var Je=Pe.normalized,ke=Pe.itemSize,Ge=je.get(Pe);if(Ge===void 0)continue;var ve=Ge.buffer,we=Ge.type,en=Ge.bytesPerElement;if(Pe.isInterleavedBufferAttribute){var ht=Pe.data,Er=ht.stride,Dt=Pe.offset;ht&&ht.isInstancedInterleavedBuffer?(me.enableAttributeAndDivisor(Ee,ht.meshPerAttribute),_.maxInstancedCount===void 0&&(_.maxInstancedCount=ht.meshPerAttribute*ht.count)):me.enableAttribute(Ee),Y.bindBuffer(34962,ve),Y.vertexAttribPointer(Ee,ke,we,Je,Er*en,Dt*en)}else Pe.isInstancedBufferAttribute?(me.enableAttributeAndDivisor(Ee,Pe.meshPerAttribute),_.maxInstancedCount===void 0&&(_.maxInstancedCount=Pe.meshPerAttribute*Pe.count)):me.enableAttribute(Ee),Y.bindBuffer(34962,ve),Y.vertexAttribPointer(Ee,ke,we,Je,0,0)}else if(Fe==="instanceMatrix"){var Ge=je.get(y.instanceMatrix);if(Ge===void 0)continue;var ve=Ge.buffer,we=Ge.type;me.enableAttributeAndDivisor(Ee+0,1),me.enableAttributeAndDivisor(Ee+1,1),me.enableAttributeAndDivisor(Ee+2,1),me.enableAttributeAndDivisor(Ee+3,1),Y.bindBuffer(34962,ve),Y.vertexAttribPointer(Ee+0,4,we,!1,64,0),Y.vertexAttribPointer(Ee+1,4,we,!1,64,16),Y.vertexAttribPointer(Ee+2,4,we,!1,64,32),Y.vertexAttribPointer(Ee+3,4,we,!1,64,48)}else if(de!==void 0){var St=de[Fe];if(St!==void 0)switch(St.length){case 2:Y.vertexAttrib2fv(Ee,St);break;case 3:Y.vertexAttrib3fv(Ee,St);break;case 4:Y.vertexAttrib4fv(Ee,St);break;default:Y.vertexAttrib1fv(Ee,St)}}}}me.disableUnusedAttributes()}}this.compile=function(y,_){f=Q.get(y,_),f.init(),y.traverse(function(X){X.isLight&&(f.pushLight(X),X.castShadow&&f.pushShadow(X))}),f.setupLights(_);var D={};y.traverse(function(X){if(X.material)if(Array.isArray(X.material))for(var $=0;$<X.material.length;$++)X.material[$].uuid in D||(Gt(X.material[$],y,X),D[X.material[$].uuid]=!0);else X.material.uuid in D||(Gt(X.material,y,X),D[X.material.uuid]=!0)})};var qe=null;function at(y){ae.isPresenting||qe&&qe(y)}var Ct=new vu;Ct.setAnimationLoop(at),typeof window!="undefined"&&Ct.setContext(window),this.setAnimationLoop=function(y){qe=y,ae.setAnimationLoop(y),Ct.start()},this.render=function(y,_){var D,X;if(arguments[2]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),D=arguments[2]),arguments[3]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),X=arguments[3]),!(_&&_.isCamera)){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!p){w.geometry=null,w.program=null,w.wireframe=!1,S=-1,T=null,y.autoUpdate===!0&&y.updateMatrixWorld(),_.parent===null&&_.updateMatrixWorld(),ae.enabled&&ae.isPresenting&&(_=ae.getCamera(_)),f=Q.get(y,_),f.init(),y.onBeforeRender(d,y,_,D||x),Oe.multiplyMatrices(_.projectionMatrix,_.matrixWorldInverse),H.setFromProjectionMatrix(Oe),le=this.localClippingEnabled,W=V.init(this.clippingPlanes,le,_),h=A.get(y,_),h.init(),Ke(y,_,0,d.sortObjects),h.finish(),d.sortObjects===!0&&h.sort(F,R),W&&V.beginShadows();var $=f.state.shadowsArray;oe.render($,y,_),f.setupLights(_),W&&V.endShadows(),this.info.autoReset&&this.info.reset(),D!==void 0&&this.setRenderTarget(D),J.render(h,y,_,X);var xe=h.opaque,de=h.transparent;if(y.overrideMaterial){var Fe=y.overrideMaterial;xe.length&&Mt(xe,y,_,Fe),de.length&&Mt(de,y,_,Fe)}else xe.length&&Mt(xe,y,_),de.length&&Mt(de,y,_);y.onAfterRender(d,y,_),x!==null&&(Ue.updateRenderTargetMipmap(x),Ue.updateMultisampleRenderTarget(x)),me.buffers.depth.setTest(!0),me.buffers.depth.setMask(!0),me.buffers.color.setMask(!0),me.setPolygonOffset(!1),h=null,f=null}};function Ke(y,_,D,X){if(y.visible!==!1){var $=y.layers.test(_.layers);if($){if(y.isGroup)D=y.renderOrder;else if(y.isLOD)y.autoUpdate===!0&&y.update(_);else if(y.isLight)f.pushLight(y),y.castShadow&&f.pushShadow(y);else if(y.isSprite){if(!y.frustumCulled||H.intersectsSprite(y)){X&&Re.setFromMatrixPosition(y.matrixWorld).applyMatrix4(Oe);var xe=Qe.update(y),de=y.material;de.visible&&h.push(y,xe,de,D,Re.z,null)}}else if(y.isImmediateRenderObject)X&&Re.setFromMatrixPosition(y.matrixWorld).applyMatrix4(Oe),h.push(y,null,y.material,D,Re.z,null);else if((y.isMesh||y.isLine||y.isPoints)&&(y.isSkinnedMesh&&y.skeleton.frame!==Z.render.frame&&(y.skeleton.update(),y.skeleton.frame=Z.render.frame),!y.frustumCulled||H.intersectsObject(y))){X&&Re.setFromMatrixPosition(y.matrixWorld).applyMatrix4(Oe);var xe=Qe.update(y),de=y.material;if(Array.isArray(de))for(var Fe=xe.groups,Ee=0,Pe=Fe.length;Ee<Pe;Ee++){var Je=Fe[Ee],ke=de[Je.materialIndex];ke&&ke.visible&&h.push(y,xe,ke,D,Re.z,Je)}else de.visible&&h.push(y,xe,de,D,Re.z,null)}}for(var Ge=y.children,Ee=0,Pe=Ge.length;Ee<Pe;Ee++)Ke(Ge[Ee],_,D,X)}}function Mt(y,_,D,X){for(var $=0,xe=y.length;$<xe;$++){var de=y[$],Fe=de.object,Ee=de.geometry,Pe=X===void 0?de.material:X,Je=de.group;if(D.isArrayCamera){L=D;for(var ke=D.cameras,Ge=0,ve=ke.length;Ge<ve;Ge++){var we=ke[Ge];Fe.layers.test(we.layers)&&(me.viewport(I.copy(we.viewport)),f.setupLights(we),Rt(Fe,_,we,Ee,Pe,Je))}}else L=null,Rt(Fe,_,D,Ee,Pe,Je)}}function Rt(y,_,D,X,$,xe){if(y.onBeforeRender(d,_,D,X,$,xe),f=Q.get(_,L||D),y.modelViewMatrix.multiplyMatrices(D.matrixWorldInverse,y.matrixWorld),y.normalMatrix.getNormalMatrix(y.modelViewMatrix),y.isImmediateRenderObject){var de=La(D,_,$,y);me.setMaterial($),w.geometry=null,w.program=null,w.wireframe=!1,Ie(y,de)}else d.renderBufferDirect(D,_,X,$,y,xe);y.onAfterRender(d,_,D,X,$,xe),f=Q.get(_,L||D)}function Gt(y,_,D){var X=Ae.get(y),$=f.state.lights,xe=f.state.shadowsArray,de=$.state.version,Fe=E.getParameters(y,$.state,xe,_,V.numPlanes,V.numIntersection,D),Ee=E.getProgramCacheKey(Fe),Pe=X.program,Je=!0;if(Pe===void 0)y.addEventListener("dispose",O);else if(Pe.cacheKey!==Ee)fe(y);else if(X.lightsStateVersion!==de)X.lightsStateVersion=de,Je=!1;else{if(Fe.shaderID!==void 0)return;Je=!1}Je&&(Pe=E.acquireProgram(Fe,Ee),X.program=Pe,X.uniforms=Fe.uniforms,X.environment=y.isMeshStandardMaterial?_.environment:null,X.outputEncoding=d.outputEncoding,y.program=Pe);var ke=Pe.getAttributes();if(y.morphTargets){y.numSupportedMorphTargets=0;for(var Ge=0;Ge<d.maxMorphTargets;Ge++)ke["morphTarget"+Ge]>=0&&y.numSupportedMorphTargets++}if(y.morphNormals){y.numSupportedMorphNormals=0;for(var Ge=0;Ge<d.maxMorphNormals;Ge++)ke["morphNormal"+Ge]>=0&&y.numSupportedMorphNormals++}var ve=X.uniforms;(!y.isShaderMaterial&&!y.isRawShaderMaterial||y.clipping===!0)&&(X.numClippingPlanes=V.numPlanes,X.numIntersection=V.numIntersection,ve.clippingPlanes=V.uniform),X.fog=_.fog,X.needsLights=Sf(y),X.lightsStateVersion=de,X.needsLights&&(ve.ambientLightColor.value=$.state.ambient,ve.lightProbe.value=$.state.probe,ve.directionalLights.value=$.state.directional,ve.directionalLightShadows.value=$.state.directionalShadow,ve.spotLights.value=$.state.spot,ve.spotLightShadows.value=$.state.spotShadow,ve.rectAreaLights.value=$.state.rectArea,ve.pointLights.value=$.state.point,ve.pointLightShadows.value=$.state.pointShadow,ve.hemisphereLights.value=$.state.hemi,ve.directionalShadowMap.value=$.state.directionalShadowMap,ve.directionalShadowMatrix.value=$.state.directionalShadowMatrix,ve.spotShadowMap.value=$.state.spotShadowMap,ve.spotShadowMatrix.value=$.state.spotShadowMatrix,ve.pointShadowMap.value=$.state.pointShadowMap,ve.pointShadowMatrix.value=$.state.pointShadowMatrix);var we=X.program.getUniforms(),en=Hn.seqWithValue(we.seq,ve);X.uniformsList=en}function La(y,_,D,X){Ue.resetTextureUnits();var $=_.fog,xe=D.isMeshStandardMaterial?_.environment:null,de=Ae.get(D),Fe=f.state.lights;if(W&&(le||y!==T)){var Ee=y===T&&D.id===S;V.setState(D.clippingPlanes,D.clipIntersection,D.clipShadows,y,de,Ee)}D.version===de.__version?(de.program===void 0||D.fog&&de.fog!==$||de.environment!==xe||de.needsLights&&de.lightsStateVersion!==Fe.state.version||de.numClippingPlanes!==void 0&&(de.numClippingPlanes!==V.numPlanes||de.numIntersection!==V.numIntersection)||de.outputEncoding!==d.outputEncoding)&&Gt(D,_,X):(Gt(D,_,X),de.__version=D.version);var Pe=!1,Je=!1,ke=!1,Ge=de.program,ve=Ge.getUniforms(),we=de.uniforms;if(me.useProgram(Ge.program)&&(Pe=!0,Je=!0,ke=!0),D.id!==S&&(S=D.id,Je=!0),Pe||T!==y){if(ve.setValue(Y,"projectionMatrix",y.projectionMatrix),ze.logarithmicDepthBuffer&&ve.setValue(Y,"logDepthBufFC",2/(Math.log(y.far+1)/Math.LN2)),T!==y&&(T=y,Je=!0,ke=!0),D.isShaderMaterial||D.isMeshPhongMaterial||D.isMeshToonMaterial||D.isMeshStandardMaterial||D.envMap){var en=ve.map.cameraPosition;en!==void 0&&en.setValue(Y,Re.setFromMatrixPosition(y.matrixWorld))}(D.isMeshPhongMaterial||D.isMeshToonMaterial||D.isMeshLambertMaterial||D.isMeshBasicMaterial||D.isMeshStandardMaterial||D.isShaderMaterial)&&ve.setValue(Y,"isOrthographic",y.isOrthographicCamera===!0),(D.isMeshPhongMaterial||D.isMeshToonMaterial||D.isMeshLambertMaterial||D.isMeshBasicMaterial||D.isMeshStandardMaterial||D.isShaderMaterial||D.skinning)&&ve.setValue(Y,"viewMatrix",y.matrixWorldInverse)}if(D.skinning){ve.setOptional(Y,X,"bindMatrix"),ve.setOptional(Y,X,"bindMatrixInverse");var ht=X.skeleton;if(ht){var Er=ht.bones;if(ze.floatVertexTextures){if(ht.boneTexture===void 0){var Dt=Math.sqrt(Er.length*4);Dt=Le.ceilPowerOfTwo(Dt),Dt=Math.max(Dt,4);var St=new Float32Array(Dt*Dt*4);St.set(ht.boneMatrices);var ds=new sr(St,Dt,Dt,Tt,tn);ht.boneMatrices=St,ht.boneTexture=ds,ht.boneTextureSize=Dt}ve.setValue(Y,"boneTexture",ht.boneTexture,Ue),ve.setValue(Y,"boneTextureSize",ht.boneTextureSize)}else ve.setOptional(Y,ht,"boneMatrices")}}return(Je||de.receiveShadow!==X.receiveShadow)&&(de.receiveShadow=X.receiveShadow,ve.setValue(Y,"receiveShadow",X.receiveShadow)),Je&&(ve.setValue(Y,"toneMappingExposure",d.toneMappingExposure),ve.setValue(Y,"toneMappingWhitePoint",d.toneMappingWhitePoint),de.needsLights&&Mf(we,ke),$&&D.fog&&pf(we,$),D.isMeshBasicMaterial?Xt(we,D):D.isMeshLambertMaterial?(Xt(we,D),vf(we,D)):D.isMeshToonMaterial?(Xt(we,D),gf(we,D)):D.isMeshPhongMaterial?(Xt(we,D),mf(we,D)):D.isMeshStandardMaterial?(Xt(we,D,xe),D.isMeshPhysicalMaterial?yf(we,D,xe):wc(we,D,xe)):D.isMeshMatcapMaterial?(Xt(we,D),xf(we,D)):D.isMeshDepthMaterial?(Xt(we,D),_f(we,D)):D.isMeshDistanceMaterial?(Xt(we,D),wf(we,D)):D.isMeshNormalMaterial?(Xt(we,D),bf(we,D)):D.isLineBasicMaterial?(Ca(we,D),D.isLineDashedMaterial&&Pa(we,D)):D.isPointsMaterial?Tr(we,D):D.isSpriteMaterial?df(we,D):D.isShadowMaterial&&(we.color.value.copy(D.color),we.opacity.value=D.opacity),we.ltc_1!==void 0&&(we.ltc_1.value=te.LTC_1),we.ltc_2!==void 0&&(we.ltc_2.value=te.LTC_2),Hn.upload(Y,de.uniformsList,we,Ue),D.isShaderMaterial&&(D.uniformsNeedUpdate=!1)),D.isShaderMaterial&&D.uniformsNeedUpdate===!0&&(Hn.upload(Y,de.uniformsList,we,Ue),D.uniformsNeedUpdate=!1),D.isSpriteMaterial&&ve.setValue(Y,"center",X.center),ve.setValue(Y,"modelViewMatrix",X.modelViewMatrix),ve.setValue(Y,"normalMatrix",X.normalMatrix),ve.setValue(Y,"modelMatrix",X.matrixWorld),Ge}function Xt(y,_,D){y.opacity.value=_.opacity,_.color&&y.diffuse.value.copy(_.color),_.emissive&&y.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(y.map.value=_.map),_.alphaMap&&(y.alphaMap.value=_.alphaMap),_.specularMap&&(y.specularMap.value=_.specularMap);var X=_.envMap||D;X&&(y.envMap.value=X,y.flipEnvMap.value=X.isCubeTexture?-1:1,y.reflectivity.value=_.reflectivity,y.refractionRatio.value=_.refractionRatio,y.maxMipLevel.value=Ae.get(X).__maxMipLevel),_.lightMap&&(y.lightMap.value=_.lightMap,y.lightMapIntensity.value=_.lightMapIntensity),_.aoMap&&(y.aoMap.value=_.aoMap,y.aoMapIntensity.value=_.aoMapIntensity);var $;_.map?$=_.map:_.specularMap?$=_.specularMap:_.displacementMap?$=_.displacementMap:_.normalMap?$=_.normalMap:_.bumpMap?$=_.bumpMap:_.roughnessMap?$=_.roughnessMap:_.metalnessMap?$=_.metalnessMap:_.alphaMap?$=_.alphaMap:_.emissiveMap&&($=_.emissiveMap),$!==void 0&&($.isWebGLRenderTarget&&($=$.texture),$.matrixAutoUpdate===!0&&$.updateMatrix(),y.uvTransform.value.copy($.matrix));var xe;_.aoMap?xe=_.aoMap:_.lightMap&&(xe=_.lightMap),xe!==void 0&&(xe.isWebGLRenderTarget&&(xe=xe.texture),xe.matrixAutoUpdate===!0&&xe.updateMatrix(),y.uv2Transform.value.copy(xe.matrix))}function Ca(y,_){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity}function Pa(y,_){y.dashSize.value=_.dashSize,y.totalSize.value=_.dashSize+_.gapSize,y.scale.value=_.scale}function Tr(y,_){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,y.size.value=_.size*U,y.scale.value=B*.5,_.map&&(y.map.value=_.map),_.alphaMap&&(y.alphaMap.value=_.alphaMap);var D;_.map?D=_.map:_.alphaMap&&(D=_.alphaMap),D!==void 0&&(D.matrixAutoUpdate===!0&&D.updateMatrix(),y.uvTransform.value.copy(D.matrix))}function df(y,_){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,y.rotation.value=_.rotation,_.map&&(y.map.value=_.map),_.alphaMap&&(y.alphaMap.value=_.alphaMap);var D;_.map?D=_.map:_.alphaMap&&(D=_.alphaMap),D!==void 0&&(D.matrixAutoUpdate===!0&&D.updateMatrix(),y.uvTransform.value.copy(D.matrix))}function pf(y,_){y.fogColor.value.copy(_.color),_.isFog?(y.fogNear.value=_.near,y.fogFar.value=_.far):_.isFogExp2&&(y.fogDensity.value=_.density)}function vf(y,_){_.emissiveMap&&(y.emissiveMap.value=_.emissiveMap)}function mf(y,_){y.specular.value.copy(_.specular),y.shininess.value=Math.max(_.shininess,1e-4),_.emissiveMap&&(y.emissiveMap.value=_.emissiveMap),_.bumpMap&&(y.bumpMap.value=_.bumpMap,y.bumpScale.value=_.bumpScale,_.side===dt&&(y.bumpScale.value*=-1)),_.normalMap&&(y.normalMap.value=_.normalMap,y.normalScale.value.copy(_.normalScale),_.side===dt&&y.normalScale.value.negate()),_.displacementMap&&(y.displacementMap.value=_.displacementMap,y.displacementScale.value=_.displacementScale,y.displacementBias.value=_.displacementBias)}function gf(y,_){y.specular.value.copy(_.specular),y.shininess.value=Math.max(_.shininess,1e-4),_.gradientMap&&(y.gradientMap.value=_.gradientMap),_.emissiveMap&&(y.emissiveMap.value=_.emissiveMap),_.bumpMap&&(y.bumpMap.value=_.bumpMap,y.bumpScale.value=_.bumpScale,_.side===dt&&(y.bumpScale.value*=-1)),_.normalMap&&(y.normalMap.value=_.normalMap,y.normalScale.value.copy(_.normalScale),_.side===dt&&y.normalScale.value.negate()),_.displacementMap&&(y.displacementMap.value=_.displacementMap,y.displacementScale.value=_.displacementScale,y.displacementBias.value=_.displacementBias)}function wc(y,_,D){y.roughness.value=_.roughness,y.metalness.value=_.metalness,_.roughnessMap&&(y.roughnessMap.value=_.roughnessMap),_.metalnessMap&&(y.metalnessMap.value=_.metalnessMap),_.emissiveMap&&(y.emissiveMap.value=_.emissiveMap),_.bumpMap&&(y.bumpMap.value=_.bumpMap,y.bumpScale.value=_.bumpScale,_.side===dt&&(y.bumpScale.value*=-1)),_.normalMap&&(y.normalMap.value=_.normalMap,y.normalScale.value.copy(_.normalScale),_.side===dt&&y.normalScale.value.negate()),_.displacementMap&&(y.displacementMap.value=_.displacementMap,y.displacementScale.value=_.displacementScale,y.displacementBias.value=_.displacementBias),(_.envMap||D)&&(y.envMapIntensity.value=_.envMapIntensity)}function yf(y,_,D){wc(y,_,D),y.reflectivity.value=_.reflectivity,y.clearcoat.value=_.clearcoat,y.clearcoatRoughness.value=_.clearcoatRoughness,_.sheen&&y.sheen.value.copy(_.sheen),_.clearcoatMap&&(y.clearcoatMap.value=_.clearcoatMap),_.clearcoatRoughnessMap&&(y.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap),_.clearcoatNormalMap&&(y.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),y.clearcoatNormalMap.value=_.clearcoatNormalMap,_.side===dt&&y.clearcoatNormalScale.value.negate()),y.transparency.value=_.transparency}function xf(y,_){_.matcap&&(y.matcap.value=_.matcap),_.bumpMap&&(y.bumpMap.value=_.bumpMap,y.bumpScale.value=_.bumpScale,_.side===dt&&(y.bumpScale.value*=-1)),_.normalMap&&(y.normalMap.value=_.normalMap,y.normalScale.value.copy(_.normalScale),_.side===dt&&y.normalScale.value.negate()),_.displacementMap&&(y.displacementMap.value=_.displacementMap,y.displacementScale.value=_.displacementScale,y.displacementBias.value=_.displacementBias)}function _f(y,_){_.displacementMap&&(y.displacementMap.value=_.displacementMap,y.displacementScale.value=_.displacementScale,y.displacementBias.value=_.displacementBias)}function wf(y,_){_.displacementMap&&(y.displacementMap.value=_.displacementMap,y.displacementScale.value=_.displacementScale,y.displacementBias.value=_.displacementBias),y.referencePosition.value.copy(_.referencePosition),y.nearDistance.value=_.nearDistance,y.farDistance.value=_.farDistance}function bf(y,_){_.bumpMap&&(y.bumpMap.value=_.bumpMap,y.bumpScale.value=_.bumpScale,_.side===dt&&(y.bumpScale.value*=-1)),_.normalMap&&(y.normalMap.value=_.normalMap,y.normalScale.value.copy(_.normalScale),_.side===dt&&y.normalScale.value.negate()),_.displacementMap&&(y.displacementMap.value=_.displacementMap,y.displacementScale.value=_.displacementScale,y.displacementBias.value=_.displacementBias)}function Mf(y,_){y.ambientLightColor.needsUpdate=_,y.lightProbe.needsUpdate=_,y.directionalLights.needsUpdate=_,y.directionalLightShadows.needsUpdate=_,y.pointLights.needsUpdate=_,y.pointLightShadows.needsUpdate=_,y.spotLights.needsUpdate=_,y.spotLightShadows.needsUpdate=_,y.rectAreaLights.needsUpdate=_,y.hemisphereLights.needsUpdate=_}function Sf(y){return y.isMeshLambertMaterial||y.isMeshToonMaterial||y.isMeshPhongMaterial||y.isMeshStandardMaterial||y.isShadowMaterial||y.isShaderMaterial&&y.lights===!0}this.setFramebuffer=function(y){v!==y&&x===null&&Y.bindFramebuffer(36160,y),v=y},this.getActiveCubeFace=function(){return m},this.getActiveMipmapLevel=function(){return g},this.getRenderTarget=function(){return x},this.setRenderTarget=function(y,_,D){x=y,m=_,g=D,y&&Ae.get(y).__webglFramebuffer===void 0&&Ue.setupRenderTarget(y);var X=v,$=!1;if(y){var xe=Ae.get(y).__webglFramebuffer;y.isWebGLCubeRenderTarget?(X=xe[_||0],$=!0):y.isWebGLMultisampleRenderTarget?X=Ae.get(y).__webglMultisampledFramebuffer:X=xe,I.copy(y.viewport),C.copy(y.scissor),z=y.scissorTest}else I.copy(G).multiplyScalar(U).floor(),C.copy(k).multiplyScalar(U).floor(),z=q;if(b!==X&&(Y.bindFramebuffer(36160,X),b=X),me.viewport(I),me.scissor(C),me.setScissorTest(z),$){var de=Ae.get(y.texture);Y.framebufferTexture2D(36160,36064,34069+(_||0),de.__webglTexture,D||0)}},this.readRenderTargetPixels=function(y,_,D,X,$,xe,de){if(!(y&&y.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}var Fe=Ae.get(y).__webglFramebuffer;if(y.isWebGLCubeRenderTarget&&de!==void 0&&(Fe=Fe[de]),Fe){var Ee=!1;Fe!==b&&(Y.bindFramebuffer(36160,Fe),Ee=!0);try{var Pe=y.texture,Je=Pe.format,ke=Pe.type;if(Je!==Tt&&K.convert(Je)!==Y.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(ke!==Ga&&K.convert(ke)!==Y.getParameter(35738)&&!(ke===tn&&(ze.isWebGL2||Te.get("OES_texture_float")||Te.get("WEBGL_color_buffer_float")))&&!(ke===Pi&&(ze.isWebGL2?Te.get("EXT_color_buffer_float"):Te.get("EXT_color_buffer_half_float")))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Y.checkFramebufferStatus(36160)===36053?_>=0&&_<=y.width-X&&D>=0&&D<=y.height-$&&Y.readPixels(_,D,X,$,K.convert(Je),K.convert(ke),xe):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{Ee&&Y.bindFramebuffer(36160,b)}}},this.copyFramebufferToTexture=function(y,_,D){D===void 0&&(D=0);var X=Math.pow(2,-D),$=Math.floor(_.image.width*X),xe=Math.floor(_.image.height*X),de=K.convert(_.format);Ue.setTexture2D(_,0),Y.copyTexImage2D(3553,D,de,y.x,y.y,$,xe,0),me.unbindTexture()},this.copyTextureToTexture=function(y,_,D,X){var $=_.image.width,xe=_.image.height,de=K.convert(D.format),Fe=K.convert(D.type);Ue.setTexture2D(D,0),_.isDataTexture?Y.texSubImage2D(3553,X||0,y.x,y.y,$,xe,de,Fe,_.image.data):Y.texSubImage2D(3553,X||0,y.x,y.y,de,Fe,_.image),me.unbindTexture()},this.initTexture=function(y){Ue.setTexture2D(y,0),me.unbindTexture()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function cl(e,t){this.name="",this.color=new ie(e),this.density=t!==void 0?t:25e-5}Object.assign(cl.prototype,{isFogExp2:!0,clone:function(){return new cl(this.color,this.density)},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}});function ul(e,t,n){this.name="",this.color=new ie(e),this.near=t!==void 0?t:1,this.far=n!==void 0?n:1e3}Object.assign(ul.prototype,{isFog:!0,clone:function(){return new ul(this.color,this.near,this.far)},toJSON:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}});function Vn(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=qa,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(Vn.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}}),Object.assign(Vn.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this},copyAt:function(e,t,n){e*=this.stride,n*=t.stride;for(var r=0,i=this.stride;r<i;r++)this.array[e+r]=t.array[n+r];return this},set:function(e,t){return t===void 0&&(t=0),this.array.set(e,t),this},clone:function(){return new this.constructor().copy(this)},onUpload:function(e){return this.onUploadCallback=e,this}});var ur=new M;function ho(e,t,n,r){this.data=e,this.itemSize=t,this.offset=n,this.normalized=r===!0}Object.defineProperties(ho.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(ho.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(e){for(var t=0,n=this.data.count;t<n;t++)ur.x=this.getX(t),ur.y=this.getY(t),ur.z=this.getZ(t),ur.applyMatrix4(e),this.setXYZ(t,ur.x,ur.y,ur.z);return this},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this},setXYZW:function(e,t,n,r,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=i,this}});function hr(e){be.call(this),this.type="SpriteMaterial",this.color=new ie(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}hr.prototype=Object.create(be.prototype),hr.prototype.constructor=hr,hr.prototype.isSpriteMaterial=!0,hr.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this};var Kr,Zi=new M,ei=new M,ti=new M,ni=new j,Ji=new j,Gu=new De,fo=new M,$i=new M,po=new M,Hu=new j,hl=new j,Vu=new j;function fl(e){if(ne.call(this),this.type="Sprite",Kr===void 0){Kr=new se;var t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Vn(t,5);Kr.setIndex([0,1,2,0,2,3]),Kr.setAttribute("position",new ho(n,3,0,!1)),Kr.setAttribute("uv",new ho(n,2,3,!1))}this.geometry=Kr,this.material=e!==void 0?e:new hr,this.center=new j(.5,.5)}fl.prototype=Object.assign(Object.create(ne.prototype),{constructor:fl,isSprite:!0,raycast:function(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ei.setFromMatrixScale(this.matrixWorld),Gu.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),ti.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&ei.multiplyScalar(-ti.z);var n=this.material.rotation,r,i;n!==0&&(i=Math.cos(n),r=Math.sin(n));var a=this.center;vo(fo.set(-.5,-.5,0),ti,a,ei,r,i),vo($i.set(.5,-.5,0),ti,a,ei,r,i),vo(po.set(.5,.5,0),ti,a,ei,r,i),Hu.set(0,0),hl.set(1,0),Vu.set(1,1);var o=e.ray.intersectTriangle(fo,$i,po,!1,Zi);if(!(o===null&&(vo($i.set(-.5,.5,0),ti,a,ei,r,i),hl.set(0,1),o=e.ray.intersectTriangle(fo,po,$i,!1,Zi),o===null))){var s=e.ray.origin.distanceTo(Zi);s<e.near||s>e.far||t.push({distance:s,point:Zi.clone(),uv:mt.getUV(Zi,fo,$i,po,Hu,hl,Vu,new j),face:null,object:this})}},clone:function(){return new this.constructor(this.material).copy(this)},copy:function(e){return ne.prototype.copy.call(this,e),e.center!==void 0&&this.center.copy(e.center),this}});function vo(e,t,n,r,i,a){ni.subVectors(e,n).addScalar(.5).multiply(r),i!==void 0?(Ji.x=a*ni.x-i*ni.y,Ji.y=i*ni.x+a*ni.y):Ji.copy(ni),e.copy(t),e.x+=Ji.x,e.y+=Ji.y,e.applyMatrix4(Gu)}var mo=new M,ku=new M;function go(){ne.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}go.prototype=Object.assign(Object.create(ne.prototype),{constructor:go,isLOD:!0,copy:function(e){ne.prototype.copy.call(this,e,!1);for(var t=e.levels,n=0,r=t.length;n<r;n++){var i=t[n];this.addLevel(i.object.clone(),i.distance)}return this.autoUpdate=e.autoUpdate,this},addLevel:function(e,t){t===void 0&&(t=0),t=Math.abs(t);for(var n=this.levels,r=0;r<n.length&&!(t<n[r].distance);r++);return n.splice(r,0,{distance:t,object:e}),this.add(e),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(e){var t=this.levels;if(t.length>0){for(var n=1,r=t.length;n<r&&!(e<t[n].distance);n++);return t[n-1].object}return null},raycast:function(e,t){var n=this.levels;if(n.length>0){mo.setFromMatrixPosition(this.matrixWorld);var r=e.ray.origin.distanceTo(mo);this.getObjectForDistance(r).raycast(e,t)}},update:function(e){var t=this.levels;if(t.length>1){mo.setFromMatrixPosition(e.matrixWorld),ku.setFromMatrixPosition(this.matrixWorld);var n=mo.distanceTo(ku)/e.zoom;t[0].object.visible=!0;for(var r=1,i=t.length;r<i&&n>=t[r].distance;r++)t[r-1].object.visible=!1,t[r].object.visible=!0;for(this._currentLevel=r-1;r<i;r++)t[r].object.visible=!1}},toJSON:function(e){var t=ne.prototype.toJSON.call(this,e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];for(var n=this.levels,r=0,i=n.length;r<i;r++){var a=n[r];t.object.levels.push({object:a.object.uuid,distance:a.distance})}return t}});function dl(e,t){e&&e.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),$e.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new De,this.bindMatrixInverse=new De}dl.prototype=Object.assign(Object.create($e.prototype),{constructor:dl,isSkinnedMesh:!0,bind:function(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){for(var e=new Ye,t=this.geometry.attributes.skinWeight,n=0,r=t.count;n<r;n++){e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n);var i=1/e.manhattanLength();i!==1/0?e.multiplyScalar(i):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}},updateMatrixWorld:function(e){$e.prototype.updateMatrixWorld.call(this,e),this.bindMode==="attached"?this.bindMatrixInverse.getInverse(this.matrixWorld):this.bindMode==="detached"?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var Wu=new De,Sy=new De;function pl(e,t){if(e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(this.bones.length*16),this.frame=-1,t===void 0)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var n=0,r=this.bones.length;n<r;n++)this.boneInverses.push(new De)}}Object.assign(pl.prototype,{calculateInverses:function(){this.boneInverses=[];for(var e=0,t=this.bones.length;e<t;e++){var n=new De;this.bones[e]&&n.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(n)}},pose:function(){var e,t,n;for(t=0,n=this.bones.length;t<n;t++)e=this.bones[t],e&&e.matrixWorld.getInverse(this.boneInverses[t]);for(t=0,n=this.bones.length;t<n;t++)e=this.bones[t],e&&(e.parent&&e.parent.isBone?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))},update:function(){for(var e=this.bones,t=this.boneInverses,n=this.boneMatrices,r=this.boneTexture,i=0,a=e.length;i<a;i++){var o=e[i]?e[i].matrixWorld:Sy;Wu.multiplyMatrices(o,t[i]),Wu.toArray(n,i*16)}r!==void 0&&(r.needsUpdate=!0)},clone:function(){return new pl(this.bones,this.boneInverses)},getBoneByName:function(e){for(var t=0,n=this.bones.length;t<n;t++){var r=this.bones[t];if(r.name===e)return r}},dispose:function(){this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=void 0)}});function ju(){ne.call(this),this.type="Bone"}ju.prototype=Object.assign(Object.create(ne.prototype),{constructor:ju,isBone:!0});var qu=new De,Xu=new De,ri=[],Qi=new $e;function vl(e,t,n){$e.call(this,e,t),this.instanceMatrix=new _e(new Float32Array(n*16),16),this.count=n,this.frustumCulled=!1}vl.prototype=Object.assign(Object.create($e.prototype),{constructor:vl,isInstancedMesh:!0,getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,e*16)},raycast:function(e,t){var n=this.matrixWorld,r=this.count;if(Qi.geometry=this.geometry,Qi.material=this.material,Qi.material!==void 0)for(var i=0;i<r;i++)this.getMatrixAt(i,qu),Xu.multiplyMatrices(n,qu),Qi.matrixWorld=Xu,Qi.raycast(e,ri),ri.length>0&&(ri[0].instanceId=i,ri[0].object=this,t.push(ri[0]),ri.length=0)},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,e*16)},updateMorphTargets:function(){}});function ot(e){be.call(this),this.type="LineBasicMaterial",this.color=new ie(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}ot.prototype=Object.create(be.prototype),ot.prototype.constructor=ot,ot.prototype.isLineBasicMaterial=!0,ot.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this};var Yu=new M,Zu=new M,Ju=new De,yo=new Gr,xo=new Bn;function Wt(e,t,n){n===1&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),ne.call(this),this.type="Line",this.geometry=e!==void 0?e:new se,this.material=t!==void 0?t:new ot}Wt.prototype=Object.assign(Object.create(ne.prototype),{constructor:Wt,isLine:!0,computeLineDistances:function(){var e=this.geometry;if(e.isBufferGeometry)if(e.index===null){for(var t=e.attributes.position,n=[0],r=1,i=t.count;r<i;r++)Yu.fromBufferAttribute(t,r-1),Zu.fromBufferAttribute(t,r),n[r]=n[r-1],n[r]+=Yu.distanceTo(Zu);e.setAttribute("lineDistance",new re(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){var a=e.vertices,n=e.lineDistances;n[0]=0;for(var r=1,i=a.length;r<i;r++)n[r]=n[r-1],n[r]+=a[r-1].distanceTo(a[r])}return this},raycast:function(e,t){var n=this.geometry,r=this.matrixWorld,i=e.params.Line.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),xo.copy(n.boundingSphere),xo.applyMatrix4(r),xo.radius+=i,e.ray.intersectsSphere(xo)!==!1){Ju.getInverse(r),yo.copy(e.ray).applyMatrix4(Ju);var a=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,s=new M,l=new M,c=new M,u=new M,h=this&&this.isLineSegments?2:1;if(n.isBufferGeometry){var f=n.index,d=n.attributes,p=d.position.array;if(f!==null)for(var v=f.array,m=0,g=v.length-1;m<g;m+=h){var x=v[m],b=v[m+1];s.fromArray(p,x*3),l.fromArray(p,b*3);var S=yo.distanceSqToSegment(s,l,u,c);if(!(S>o)){u.applyMatrix4(this.matrixWorld);var w=e.ray.origin.distanceTo(u);w<e.near||w>e.far||t.push({distance:w,point:c.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this})}}else for(var m=0,g=p.length/3-1;m<g;m+=h){s.fromArray(p,3*m),l.fromArray(p,3*m+3);var S=yo.distanceSqToSegment(s,l,u,c);if(!(S>o)){u.applyMatrix4(this.matrixWorld);var w=e.ray.origin.distanceTo(u);w<e.near||w>e.far||t.push({distance:w,point:c.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this})}}}else if(n.isGeometry)for(var T=n.vertices,L=T.length,m=0;m<L-1;m+=h){var S=yo.distanceSqToSegment(T[m],T[m+1],u,c);if(!(S>o)){u.applyMatrix4(this.matrixWorld);var w=e.ray.origin.distanceTo(u);w<e.near||w>e.far||t.push({distance:w,point:c.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this})}}}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var _o=new M,wo=new M;function ut(e,t){Wt.call(this,e,t),this.type="LineSegments"}ut.prototype=Object.assign(Object.create(Wt.prototype),{constructor:ut,isLineSegments:!0,computeLineDistances:function(){var e=this.geometry;if(e.isBufferGeometry)if(e.index===null){for(var t=e.attributes.position,n=[],r=0,i=t.count;r<i;r+=2)_o.fromBufferAttribute(t,r),wo.fromBufferAttribute(t,r+1),n[r]=r===0?0:n[r-1],n[r+1]=n[r]+_o.distanceTo(wo);e.setAttribute("lineDistance",new re(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry)for(var a=e.vertices,n=e.lineDistances,r=0,i=a.length;r<i;r+=2)_o.copy(a[r]),wo.copy(a[r+1]),n[r]=r===0?0:n[r-1],n[r+1]=n[r]+_o.distanceTo(wo);return this}});function ml(e,t){Wt.call(this,e,t),this.type="LineLoop"}ml.prototype=Object.assign(Object.create(Wt.prototype),{constructor:ml,isLineLoop:!0});function fr(e){be.call(this),this.type="PointsMaterial",this.color=new ie(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}fr.prototype=Object.create(be.prototype),fr.prototype.constructor=fr,fr.prototype.isPointsMaterial=!0,fr.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this};var $u=new De,gl=new Gr,bo=new Bn,Mo=new M;function So(e,t){ne.call(this),this.type="Points",this.geometry=e!==void 0?e:new se,this.material=t!==void 0?t:new fr,this.updateMorphTargets()}So.prototype=Object.assign(Object.create(ne.prototype),{constructor:So,isPoints:!0,raycast:function(e,t){var n=this.geometry,r=this.matrixWorld,i=e.params.Points.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),bo.copy(n.boundingSphere),bo.applyMatrix4(r),bo.radius+=i,e.ray.intersectsSphere(bo)!==!1){$u.getInverse(r),gl.copy(e.ray).applyMatrix4($u);var a=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a;if(n.isBufferGeometry){var s=n.index,l=n.attributes,c=l.position.array;if(s!==null)for(var u=s.array,h=0,f=u.length;h<f;h++){var d=u[h];Mo.fromArray(c,d*3),yl(Mo,d,o,r,e,t,this)}else for(var h=0,p=c.length/3;h<p;h++)Mo.fromArray(c,h*3),yl(Mo,h,o,r,e,t,this)}else for(var v=n.vertices,h=0,p=v.length;h<p;h++)yl(v[h],h,o,r,e,t,this)}},updateMorphTargets:function(){var e=this.geometry,t,n,r;if(e.isBufferGeometry){var i=e.morphAttributes,a=Object.keys(i);if(a.length>0){var o=i[a[0]];if(o!==void 0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,n=o.length;t<n;t++)r=o[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}else{var s=e.morphTargets;s!==void 0&&s.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});function yl(e,t,n,r,i,a,o){var s=gl.distanceSqToPoint(e);if(s<n){var l=new M;gl.closestPointToPoint(e,l),l.applyMatrix4(r);var c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;a.push({distance:c,distanceToRay:Math.sqrt(s),point:l,index:t,face:null,object:o})}}function Qu(e,t,n,r,i,a,o,s,l){Xe.call(this,e,t,n,r,i,a,o,s,l),this.format=o!==void 0?o:In,this.minFilter=a!==void 0?a:nt,this.magFilter=i!==void 0?i:nt,this.generateMipmaps=!1}Qu.prototype=Object.assign(Object.create(Xe.prototype),{constructor:Qu,isVideoTexture:!0,update:function(){var e=this.image;e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});function Ki(e,t,n,r,i,a,o,s,l,c,u,h){Xe.call(this,null,a,o,s,l,c,r,i,u,h),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}Ki.prototype=Object.create(Xe.prototype),Ki.prototype.constructor=Ki,Ki.prototype.isCompressedTexture=!0;function To(e,t,n,r,i,a,o,s,l){Xe.call(this,e,t,n,r,i,a,o,s,l),this.needsUpdate=!0}To.prototype=Object.create(Xe.prototype),To.prototype.constructor=To,To.prototype.isCanvasTexture=!0;function Eo(e,t,n,r,i,a,o,s,l,c){if(c=c!==void 0?c:Cr,c!==Cr&&c!==Di)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&c===Cr&&(n=Ha),n===void 0&&c===Di&&(n=Ri),Xe.call(this,null,r,i,a,o,s,c,n,l),this.image={width:e,height:t},this.magFilter=o!==void 0?o:tt,this.minFilter=s!==void 0?s:tt,this.flipY=!1,this.generateMipmaps=!1}Eo.prototype=Object.create(Xe.prototype),Eo.prototype.constructor=Eo,Eo.prototype.isDepthTexture=!0;function Ao(e){se.call(this),this.type="WireframeGeometry";var t=[],n,r,i,a,o,s=[0,0],l={},c,u,h,f,d=["a","b","c"],p;if(e&&e.isGeometry){var v=e.faces;for(n=0,i=v.length;n<i;n++){var m=v[n];for(r=0;r<3;r++)u=m[d[r]],h=m[d[(r+1)%3]],s[0]=Math.min(u,h),s[1]=Math.max(u,h),f=s[0]+","+s[1],l[f]===void 0&&(l[f]={index1:s[0],index2:s[1]})}for(f in l)c=l[f],p=e.vertices[c.index1],t.push(p.x,p.y,p.z),p=e.vertices[c.index2],t.push(p.x,p.y,p.z)}else if(e&&e.isBufferGeometry){var g,x,b,S,w,T,L,I;if(p=new M,e.index!==null){for(g=e.attributes.position,x=e.index,b=e.groups,b.length===0&&(b=[{start:0,count:x.count,materialIndex:0}]),a=0,o=b.length;a<o;++a)for(S=b[a],w=S.start,T=S.count,n=w,i=w+T;n<i;n+=3)for(r=0;r<3;r++)u=x.getX(n+r),h=x.getX(n+(r+1)%3),s[0]=Math.min(u,h),s[1]=Math.max(u,h),f=s[0]+","+s[1],l[f]===void 0&&(l[f]={index1:s[0],index2:s[1]});for(f in l)c=l[f],p.fromBufferAttribute(g,c.index1),t.push(p.x,p.y,p.z),p.fromBufferAttribute(g,c.index2),t.push(p.x,p.y,p.z)}else for(g=e.attributes.position,n=0,i=g.count/3;n<i;n++)for(r=0;r<3;r++)L=3*n+r,p.fromBufferAttribute(g,L),t.push(p.x,p.y,p.z),I=3*n+(r+1)%3,p.fromBufferAttribute(g,I),t.push(p.x,p.y,p.z)}this.setAttribute("position",new re(t,3))}Ao.prototype=Object.create(se.prototype),Ao.prototype.constructor=Ao;function Lo(e,t,n){Me.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:n},this.fromBufferGeometry(new ea(e,t,n)),this.mergeVertices()}Lo.prototype=Object.create(Me.prototype),Lo.prototype.constructor=Lo;function ea(e,t,n){se.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:n};var r=[],i=[],a=[],o=[],s=1e-5,l=new M,c=new M,u=new M,h=new M,f=new M,d,p;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");var v=t+1;for(d=0;d<=n;d++){var m=d/n;for(p=0;p<=t;p++){var g=p/t;e(g,m,c),i.push(c.x,c.y,c.z),g-s>=0?(e(g-s,m,u),h.subVectors(c,u)):(e(g+s,m,u),h.subVectors(u,c)),m-s>=0?(e(g,m-s,u),f.subVectors(c,u)):(e(g,m+s,u),f.subVectors(u,c)),l.crossVectors(h,f).normalize(),a.push(l.x,l.y,l.z),o.push(g,m)}}for(d=0;d<n;d++)for(p=0;p<t;p++){var x=d*v+p,b=d*v+p+1,S=(d+1)*v+p+1,w=(d+1)*v+p;r.push(x,b,w),r.push(b,S,w)}this.setIndex(r),this.setAttribute("position",new re(i,3)),this.setAttribute("normal",new re(a,3)),this.setAttribute("uv",new re(o,2))}ea.prototype=Object.create(se.prototype),ea.prototype.constructor=ea;function Co(e,t,n,r){Me.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r},this.fromBufferGeometry(new Ft(e,t,n,r)),this.mergeVertices()}Co.prototype=Object.create(Me.prototype),Co.prototype.constructor=Co;function Ft(e,t,n,r){se.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r},n=n||1,r=r||0;var i=[],a=[];o(r),l(n),c(),this.setAttribute("position",new re(i,3)),this.setAttribute("normal",new re(i.slice(),3)),this.setAttribute("uv",new re(a,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function o(g){for(var x=new M,b=new M,S=new M,w=0;w<t.length;w+=3)f(t[w+0],x),f(t[w+1],b),f(t[w+2],S),s(x,b,S,g)}function s(g,x,b,S){var w=Math.pow(2,S),T=[],L,I;for(L=0;L<=w;L++){T[L]=[];var C=g.clone().lerp(b,L/w),z=x.clone().lerp(b,L/w),N=w-L;for(I=0;I<=N;I++)I===0&&L===w?T[L][I]=C:T[L][I]=C.clone().lerp(z,I/N)}for(L=0;L<w;L++)for(I=0;I<2*(w-L)-1;I++){var B=Math.floor(I/2);I%2===0?(h(T[L][B+1]),h(T[L+1][B]),h(T[L][B])):(h(T[L][B+1]),h(T[L+1][B+1]),h(T[L+1][B]))}}function l(g){for(var x=new M,b=0;b<i.length;b+=3)x.x=i[b+0],x.y=i[b+1],x.z=i[b+2],x.normalize().multiplyScalar(g),i[b+0]=x.x,i[b+1]=x.y,i[b+2]=x.z}function c(){for(var g=new M,x=0;x<i.length;x+=3){g.x=i[x+0],g.y=i[x+1],g.z=i[x+2];var b=v(g)/2/Math.PI+.5,S=m(g)/Math.PI+.5;a.push(b,1-S)}d(),u()}function u(){for(var g=0;g<a.length;g+=6){var x=a[g+0],b=a[g+2],S=a[g+4],w=Math.max(x,b,S),T=Math.min(x,b,S);w>.9&&T<.1&&(x<.2&&(a[g+0]+=1),b<.2&&(a[g+2]+=1),S<.2&&(a[g+4]+=1))}}function h(g){i.push(g.x,g.y,g.z)}function f(g,x){var b=g*3;x.x=e[b+0],x.y=e[b+1],x.z=e[b+2]}function d(){for(var g=new M,x=new M,b=new M,S=new M,w=new j,T=new j,L=new j,I=0,C=0;I<i.length;I+=9,C+=6){g.set(i[I+0],i[I+1],i[I+2]),x.set(i[I+3],i[I+4],i[I+5]),b.set(i[I+6],i[I+7],i[I+8]),w.set(a[C+0],a[C+1]),T.set(a[C+2],a[C+3]),L.set(a[C+4],a[C+5]),S.copy(g).add(x).add(b).divideScalar(3);var z=v(S);p(w,C+0,g,z),p(T,C+2,x,z),p(L,C+4,b,z)}}function p(g,x,b,S){S<0&&g.x===1&&(a[x]=g.x-1),b.x===0&&b.z===0&&(a[x]=S/2/Math.PI+.5)}function v(g){return Math.atan2(g.z,-g.x)}function m(g){return Math.atan2(-g.y,Math.sqrt(g.x*g.x+g.z*g.z))}}Ft.prototype=Object.create(se.prototype),Ft.prototype.constructor=Ft;function Po(e,t){Me.call(this),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new ta(e,t)),this.mergeVertices()}Po.prototype=Object.create(Me.prototype),Po.prototype.constructor=Po;function ta(e,t){var n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];Ft.call(this,n,r,e,t),this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:t}}ta.prototype=Object.create(Ft.prototype),ta.prototype.constructor=ta;function Ro(e,t){Me.call(this),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new ii(e,t)),this.mergeVertices()}Ro.prototype=Object.create(Me.prototype),Ro.prototype.constructor=Ro;function ii(e,t){var n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];Ft.call(this,n,r,e,t),this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:t}}ii.prototype=Object.create(Ft.prototype),ii.prototype.constructor=ii;function Do(e,t){Me.call(this),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new na(e,t)),this.mergeVertices()}Do.prototype=Object.create(Me.prototype),Do.prototype.constructor=Do;function na(e,t){var n=(1+Math.sqrt(5))/2,r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],i=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];Ft.call(this,r,i,e,t),this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:t}}na.prototype=Object.create(Ft.prototype),na.prototype.constructor=na;function Oo(e,t){Me.call(this),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new ra(e,t)),this.mergeVertices()}Oo.prototype=Object.create(Me.prototype),Oo.prototype.constructor=Oo;function ra(e,t){var n=(1+Math.sqrt(5))/2,r=1/n,i=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];Ft.call(this,i,a,e,t),this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:t}}ra.prototype=Object.create(Ft.prototype),ra.prototype.constructor=ra;function Io(e,t,n,r,i,a){Me.call(this),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:i},a!==void 0&&console.warn("THREE.TubeGeometry: taper has been removed.");var o=new ai(e,t,n,r,i);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}Io.prototype=Object.create(Me.prototype),Io.prototype.constructor=Io;function ai(e,t,n,r,i){se.call(this),this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:i},t=t||64,n=n||1,r=r||8,i=i||!1;var a=e.computeFrenetFrames(t,i);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;var o=new M,s=new M,l=new j,c=new M,u,h,f=[],d=[],p=[],v=[];m(),this.setIndex(v),this.setAttribute("position",new re(f,3)),this.setAttribute("normal",new re(d,3)),this.setAttribute("uv",new re(p,2));function m(){for(u=0;u<t;u++)g(u);g(i===!1?t:0),b(),x()}function g(S){c=e.getPointAt(S/t,c);var w=a.normals[S],T=a.binormals[S];for(h=0;h<=r;h++){var L=h/r*Math.PI*2,I=Math.sin(L),C=-Math.cos(L);s.x=C*w.x+I*T.x,s.y=C*w.y+I*T.y,s.z=C*w.z+I*T.z,s.normalize(),d.push(s.x,s.y,s.z),o.x=c.x+n*s.x,o.y=c.y+n*s.y,o.z=c.z+n*s.z,f.push(o.x,o.y,o.z)}}function x(){for(h=1;h<=t;h++)for(u=1;u<=r;u++){var S=(r+1)*(h-1)+(u-1),w=(r+1)*h+(u-1),T=(r+1)*h+u,L=(r+1)*(h-1)+u;v.push(S,w,L),v.push(w,T,L)}}function b(){for(u=0;u<=t;u++)for(h=0;h<=r;h++)l.x=u/t,l.y=h/r,p.push(l.x,l.y)}}ai.prototype=Object.create(se.prototype),ai.prototype.constructor=ai,ai.prototype.toJSON=function(){var e=se.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e};function No(e,t,n,r,i,a,o){Me.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:i,q:a},o!==void 0&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new ia(e,t,n,r,i,a)),this.mergeVertices()}No.prototype=Object.create(Me.prototype),No.prototype.constructor=No;function ia(e,t,n,r,i,a){se.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:i,q:a},e=e||1,t=t||.4,n=Math.floor(n)||64,r=Math.floor(r)||8,i=i||2,a=a||3;var o=[],s=[],l=[],c=[],u,h,f=new M,d=new M,p=new M,v=new M,m=new M,g=new M,x=new M;for(u=0;u<=n;++u){var b=u/n*i*Math.PI*2;for(N(b,i,a,e,p),N(b+.01,i,a,e,v),g.subVectors(v,p),x.addVectors(v,p),m.crossVectors(g,x),x.crossVectors(m,g),m.normalize(),x.normalize(),h=0;h<=r;++h){var S=h/r*Math.PI*2,w=-t*Math.cos(S),T=t*Math.sin(S);f.x=p.x+(w*x.x+T*m.x),f.y=p.y+(w*x.y+T*m.y),f.z=p.z+(w*x.z+T*m.z),s.push(f.x,f.y,f.z),d.subVectors(f,p).normalize(),l.push(d.x,d.y,d.z),c.push(u/n),c.push(h/r)}}for(h=1;h<=n;h++)for(u=1;u<=r;u++){var L=(r+1)*(h-1)+(u-1),I=(r+1)*h+(u-1),C=(r+1)*h+u,z=(r+1)*(h-1)+u;o.push(L,I,z),o.push(I,C,z)}this.setIndex(o),this.setAttribute("position",new re(s,3)),this.setAttribute("normal",new re(l,3)),this.setAttribute("uv",new re(c,2));function N(B,U,F,R,G){var k=Math.cos(B),q=Math.sin(B),H=F/U*B,V=Math.cos(H);G.x=R*(2+V)*.5*k,G.y=R*(2+V)*q*.5,G.z=R*Math.sin(H)*.5}}ia.prototype=Object.create(se.prototype),ia.prototype.constructor=ia;function zo(e,t,n,r,i){Me.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:i},this.fromBufferGeometry(new aa(e,t,n,r,i)),this.mergeVertices()}zo.prototype=Object.create(Me.prototype),zo.prototype.constructor=zo;function aa(e,t,n,r,i){se.call(this),this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:i},e=e||1,t=t||.4,n=Math.floor(n)||8,r=Math.floor(r)||6,i=i||Math.PI*2;var a=[],o=[],s=[],l=[],c=new M,u=new M,h=new M,f,d;for(f=0;f<=n;f++)for(d=0;d<=r;d++){var p=d/r*i,v=f/n*Math.PI*2;u.x=(e+t*Math.cos(v))*Math.cos(p),u.y=(e+t*Math.cos(v))*Math.sin(p),u.z=t*Math.sin(v),o.push(u.x,u.y,u.z),c.x=e*Math.cos(p),c.y=e*Math.sin(p),h.subVectors(u,c).normalize(),s.push(h.x,h.y,h.z),l.push(d/r),l.push(f/n)}for(f=1;f<=n;f++)for(d=1;d<=r;d++){var m=(r+1)*f+d-1,g=(r+1)*(f-1)+d-1,x=(r+1)*(f-1)+d,b=(r+1)*f+d;a.push(m,g,b),a.push(g,x,b)}this.setIndex(a),this.setAttribute("position",new re(o,3)),this.setAttribute("normal",new re(s,3)),this.setAttribute("uv",new re(l,2))}aa.prototype=Object.create(se.prototype),aa.prototype.constructor=aa;var Ty={triangulate:function(e,t,n){n=n||2;var r=t&&t.length,i=r?t[0]*n:e.length,a=Ku(e,0,i,n,!0),o=[];if(!a||a.next===a.prev)return o;var s,l,c,u,h,f,d;if(r&&(a=Py(e,t,a,n)),e.length>80*n){s=c=e[0],l=u=e[1];for(var p=n;p<i;p+=n)h=e[p],f=e[p+1],h<s&&(s=h),f<l&&(l=f),h>c&&(c=h),f>u&&(u=f);d=Math.max(c-s,u-l),d=d!==0?1/d:0}return sa(a,o,n,s,l,d),o}};function Ku(e,t,n,r,i){var a,o;if(i===Gy(e,t,n,r)>0)for(a=t;a<n;a+=r)o=nh(a,e[a],e[a+1],o);else for(a=n-r;a>=t;a-=r)o=nh(a,e[a],e[a+1],o);return o&&dr(o,o.next)&&(ca(o),o=o.next),o}function oa(e,t){if(!e)return e;t||(t=e);var n=e,r;do if(r=!1,!n.steiner&&(dr(n,n.next)||gt(n.prev,n,n.next)===0)){if(ca(n),n=t=n.prev,n===n.next)break;r=!0}else n=n.next;while(r||n!==t);return t}function sa(e,t,n,r,i,a,o){if(e){!o&&a&&Iy(e,r,i,a);for(var s=e,l,c;e.prev!==e.next;){if(l=e.prev,c=e.next,a?Ay(e,r,i,a):Ey(e)){t.push(l.i/n),t.push(e.i/n),t.push(c.i/n),ca(e),e=c.next,s=c.next;continue}if(e=c,e===s){o?o===1?(e=Ly(e,t,n),sa(e,t,n,r,i,a,2)):o===2&&Cy(e,t,n,r,i,a):sa(oa(e),t,n,r,i,a,1);break}}}}function Ey(e){var t=e.prev,n=e,r=e.next;if(gt(t,n,r)>=0)return!1;for(var i=e.next.next;i!==e.prev;){if(oi(t.x,t.y,n.x,n.y,r.x,r.y,i.x,i.y)&&gt(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function Ay(e,t,n,r){var i=e.prev,a=e,o=e.next;if(gt(i,a,o)>=0)return!1;for(var s=i.x<a.x?i.x<o.x?i.x:o.x:a.x<o.x?a.x:o.x,l=i.y<a.y?i.y<o.y?i.y:o.y:a.y<o.y?a.y:o.y,c=i.x>a.x?i.x>o.x?i.x:o.x:a.x>o.x?a.x:o.x,u=i.y>a.y?i.y>o.y?i.y:o.y:a.y>o.y?a.y:o.y,h=xl(s,l,t,n,r),f=xl(c,u,t,n,r),d=e.prevZ,p=e.nextZ;d&&d.z>=h&&p&&p.z<=f;){if(d!==e.prev&&d!==e.next&&oi(i.x,i.y,a.x,a.y,o.x,o.y,d.x,d.y)&&gt(d.prev,d,d.next)>=0||(d=d.prevZ,p!==e.prev&&p!==e.next&&oi(i.x,i.y,a.x,a.y,o.x,o.y,p.x,p.y)&&gt(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;d&&d.z>=h;){if(d!==e.prev&&d!==e.next&&oi(i.x,i.y,a.x,a.y,o.x,o.y,d.x,d.y)&&gt(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;p&&p.z<=f;){if(p!==e.prev&&p!==e.next&&oi(i.x,i.y,a.x,a.y,o.x,o.y,p.x,p.y)&&gt(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function Ly(e,t,n){var r=e;do{var i=r.prev,a=r.next.next;!dr(i,a)&&eh(i,r,r.next,a)&&la(i,a)&&la(a,i)&&(t.push(i.i/n),t.push(r.i/n),t.push(a.i/n),ca(r),ca(r.next),r=e=a),r=r.next}while(r!==e);return r}function Cy(e,t,n,r,i,a){var o=e;do{for(var s=o.next.next;s!==o.prev;){if(o.i!==s.i&&Fy(o,s)){var l=th(o,s);o=oa(o,o.next),l=oa(l,l.next),sa(o,t,n,r,i,a),sa(l,t,n,r,i,a);return}s=s.next}o=o.next}while(o!==e)}function Py(e,t,n,r){var i=[],a,o,s,l,c;for(a=0,o=t.length;a<o;a++)s=t[a]*r,l=a<o-1?t[a+1]*r:e.length,c=Ku(e,s,l,r,!1),c===c.next&&(c.steiner=!0),i.push(zy(c));for(i.sort(Ry),a=0;a<i.length;a++)Dy(i[a],n),n=oa(n,n.next);return n}function Ry(e,t){return e.x-t.x}function Dy(e,t){if(t=Oy(e,t),t){var n=th(t,e);oa(n,n.next)}}function Oy(e,t){var n=t,r=e.x,i=e.y,a=-1/0,o;do{if(i<=n.y&&i>=n.next.y&&n.next.y!==n.y){var s=n.x+(i-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(s<=r&&s>a){if(a=s,s===r){if(i===n.y)return n;if(i===n.next.y)return n.next}o=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!o)return null;if(r===a)return o.prev;var l=o,c=o.x,u=o.y,h=1/0,f;for(n=o.next;n!==l;)r>=n.x&&n.x>=c&&r!==n.x&&oi(i<u?r:a,i,c,u,i<u?a:r,i,n.x,n.y)&&(f=Math.abs(i-n.y)/(r-n.x),(f<h||f===h&&n.x>o.x)&&la(n,e)&&(o=n,h=f)),n=n.next;return o}function Iy(e,t,n,r){var i=e;do i.z===null&&(i.z=xl(i.x,i.y,t,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,Ny(i)}function Ny(e){var t,n,r,i,a,o,s,l,c=1;do{for(n=e,e=null,a=null,o=0;n;){for(o++,r=n,s=0,t=0;t<c&&(s++,r=r.nextZ,!!r);t++);for(l=c;s>0||l>0&&r;)s!==0&&(l===0||!r||n.z<=r.z)?(i=n,n=n.nextZ,s--):(i=r,r=r.nextZ,l--),a?a.nextZ=i:e=i,i.prevZ=a,a=i;n=r}a.nextZ=null,c*=2}while(o>1);return e}function xl(e,t,n,r,i){return e=32767*(e-n)*i,t=32767*(t-r)*i,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e|t<<1}function zy(e){var t=e,n=e;do(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next;while(t!==e);return n}function oi(e,t,n,r,i,a,o,s){return(i-o)*(t-s)-(e-o)*(a-s)>=0&&(e-o)*(r-s)-(n-o)*(t-s)>=0&&(n-o)*(a-s)-(i-o)*(r-s)>=0}function Fy(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!By(e,t)&&la(e,t)&&la(t,e)&&Uy(e,t)}function gt(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function dr(e,t){return e.x===t.x&&e.y===t.y}function eh(e,t,n,r){return dr(e,n)&&dr(t,r)||dr(e,r)&&dr(n,t)?!0:gt(e,t,n)>0!=gt(e,t,r)>0&&gt(n,r,e)>0!=gt(n,r,t)>0}function By(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&eh(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}function la(e,t){return gt(e.prev,e,e.next)<0?gt(e,t,e.next)>=0&&gt(e,e.prev,t)>=0:gt(e,t,e.prev)<0||gt(e,e.next,t)<0}function Uy(e,t){var n=e,r=!1,i=(e.x+t.x)/2,a=(e.y+t.y)/2;do n.y>a!=n.next.y>a&&n.next.y!==n.y&&i<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next;while(n!==e);return r}function th(e,t){var n=new _l(e.i,e.x,e.y),r=new _l(t.i,t.x,t.y),i=e.next,a=t.prev;return e.next=t,t.prev=e,n.next=i,i.prev=n,r.next=n,n.prev=r,a.next=r,r.prev=a,r}function nh(e,t,n,r){var i=new _l(e,t,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function ca(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function _l(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Gy(e,t,n,r){for(var i=0,a=t,o=n-r;a<n;a+=r)i+=(e[o]-e[a])*(e[a+1]+e[o+1]),o=a;return i}var kn={area:function(e){for(var t=e.length,n=0,r=t-1,i=0;i<t;r=i++)n+=e[r].x*e[i].y-e[i].x*e[r].y;return n*.5},isClockWise:function(e){return kn.area(e)<0},triangulateShape:function(e,t){var n=[],r=[],i=[];rh(e),ih(n,e);var a=e.length;t.forEach(rh);for(var o=0;o<t.length;o++)r.push(a),a+=t[o].length,ih(n,t[o]);for(var s=Ty.triangulate(n,r),o=0;o<s.length;o+=3)i.push(s.slice(o,o+3));return i}};function rh(e){var t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function ih(e,t){for(var n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}function si(e,t){Me.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},this.fromBufferGeometry(new En(e,t)),this.mergeVertices()}si.prototype=Object.create(Me.prototype),si.prototype.constructor=si,si.prototype.toJSON=function(){var e=Me.prototype.toJSON.call(this),t=this.parameters.shapes,n=this.parameters.options;return ah(t,n,e)};function En(e,t){se.call(this),this.type="ExtrudeBufferGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];for(var n=this,r=[],i=[],a=0,o=e.length;a<o;a++){var s=e[a];l(s)}this.setAttribute("position",new re(r,3)),this.setAttribute("uv",new re(i,2)),this.computeVertexNormals();function l(c){var u=[],h=t.curveSegments!==void 0?t.curveSegments:12,f=t.steps!==void 0?t.steps:1,d=t.depth!==void 0?t.depth:100,p=t.bevelEnabled!==void 0?t.bevelEnabled:!0,v=t.bevelThickness!==void 0?t.bevelThickness:6,m=t.bevelSize!==void 0?t.bevelSize:v-2,g=t.bevelOffset!==void 0?t.bevelOffset:0,x=t.bevelSegments!==void 0?t.bevelSegments:3,b=t.extrudePath,S=t.UVGenerator!==void 0?t.UVGenerator:Hy;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),d=t.amount);var w,T=!1,L,I,C,z;b&&(w=b.getSpacedPoints(f),T=!0,p=!1,L=b.computeFrenetFrames(f,!1),I=new M,C=new M,z=new M),p||(x=0,v=0,m=0,g=0);var N,B,U,F=c.extractPoints(h),R=F.shape,G=F.holes,k=!kn.isClockWise(R);if(k)for(R=R.reverse(),B=0,U=G.length;B<U;B++)N=G[B],kn.isClockWise(N)&&(G[B]=N.reverse());var q=kn.triangulateShape(R,G),H=R;for(B=0,U=G.length;B<U;B++)N=G[B],R=R.concat(N);function V(oe,ge,ce){return ge||console.error("THREE.ExtrudeGeometry: vec does not exist"),ge.clone().multiplyScalar(ce).add(oe)}var W,le,Oe,Re,Se,Y=R.length,Be,Te=q.length;function ze(oe,ge,ce){var O,ee,fe,Ie=oe.x-ge.x,pe=oe.y-ge.y,He=ce.x-oe.x,qe=ce.y-oe.y,at=Ie*Ie+pe*pe,Ct=Ie*qe-pe*He;if(Math.abs(Ct)>Number.EPSILON){var Ke=Math.sqrt(at),Mt=Math.sqrt(He*He+qe*qe),Rt=ge.x-pe/Ke,Gt=ge.y+Ie/Ke,La=ce.x-qe/Mt,Xt=ce.y+He/Mt,Ca=((La-Rt)*qe-(Xt-Gt)*He)/(Ie*qe-pe*He);O=Rt+Ie*Ca-oe.x,ee=Gt+pe*Ca-oe.y;var Pa=O*O+ee*ee;if(Pa<=2)return new j(O,ee);fe=Math.sqrt(Pa/2)}else{var Tr=!1;Ie>Number.EPSILON?He>Number.EPSILON&&(Tr=!0):Ie<-Number.EPSILON?He<-Number.EPSILON&&(Tr=!0):Math.sign(pe)===Math.sign(qe)&&(Tr=!0),Tr?(O=-pe,ee=Ie,fe=Math.sqrt(at)):(O=Ie,ee=pe,fe=Math.sqrt(at/2))}return new j(O/fe,ee/fe)}for(var me=[],Z=0,Ae=H.length,Ue=Ae-1,je=Z+1;Z<Ae;Z++,Ue++,je++)Ue===Ae&&(Ue=0),je===Ae&&(je=0),me[Z]=ze(H[Z],H[Ue],H[je]);var bt=[],Qe,E=me.concat();for(B=0,U=G.length;B<U;B++){for(N=G[B],Qe=[],Z=0,Ae=N.length,Ue=Ae-1,je=Z+1;Z<Ae;Z++,Ue++,je++)Ue===Ae&&(Ue=0),je===Ae&&(je=0),Qe[Z]=ze(N[Z],N[Ue],N[je]);bt.push(Qe),E=E.concat(Qe)}for(W=0;W<x;W++){for(Oe=W/x,Re=v*Math.cos(Oe*Math.PI/2),le=m*Math.sin(Oe*Math.PI/2)+g,Z=0,Ae=H.length;Z<Ae;Z++)Se=V(H[Z],me[Z],le),ue(Se.x,Se.y,-Re);for(B=0,U=G.length;B<U;B++)for(N=G[B],Qe=bt[B],Z=0,Ae=N.length;Z<Ae;Z++)Se=V(N[Z],Qe[Z],le),ue(Se.x,Se.y,-Re)}for(le=m+g,Z=0;Z<Y;Z++)Se=p?V(R[Z],E[Z],le):R[Z],T?(C.copy(L.normals[0]).multiplyScalar(Se.x),I.copy(L.binormals[0]).multiplyScalar(Se.y),z.copy(w[0]).add(C).add(I),ue(z.x,z.y,z.z)):ue(Se.x,Se.y,0);var A;for(A=1;A<=f;A++)for(Z=0;Z<Y;Z++)Se=p?V(R[Z],E[Z],le):R[Z],T?(C.copy(L.normals[A]).multiplyScalar(Se.x),I.copy(L.binormals[A]).multiplyScalar(Se.y),z.copy(w[A]).add(C).add(I),ue(z.x,z.y,z.z)):ue(Se.x,Se.y,d/f*A);for(W=x-1;W>=0;W--){for(Oe=W/x,Re=v*Math.cos(Oe*Math.PI/2),le=m*Math.sin(Oe*Math.PI/2)+g,Z=0,Ae=H.length;Z<Ae;Z++)Se=V(H[Z],me[Z],le),ue(Se.x,Se.y,d+Re);for(B=0,U=G.length;B<U;B++)for(N=G[B],Qe=bt[B],Z=0,Ae=N.length;Z<Ae;Z++)Se=V(N[Z],Qe[Z],le),T?ue(Se.x,Se.y+w[f-1].y,w[f-1].x+Re):ue(Se.x,Se.y,d+Re)}Q(),J();function Q(){var oe=r.length/3;if(p){var ge=0,ce=Y*ge;for(Z=0;Z<Te;Z++)Be=q[Z],P(Be[2]+ce,Be[1]+ce,Be[0]+ce);for(ge=f+x*2,ce=Y*ge,Z=0;Z<Te;Z++)Be=q[Z],P(Be[0]+ce,Be[1]+ce,Be[2]+ce)}else{for(Z=0;Z<Te;Z++)Be=q[Z],P(Be[2],Be[1],Be[0]);for(Z=0;Z<Te;Z++)Be=q[Z],P(Be[0]+Y*f,Be[1]+Y*f,Be[2]+Y*f)}n.addGroup(oe,r.length/3-oe,0)}function J(){var oe=r.length/3,ge=0;for(Ce(H,ge),ge+=H.length,B=0,U=G.length;B<U;B++)N=G[B],Ce(N,ge),ge+=N.length;n.addGroup(oe,r.length/3-oe,1)}function Ce(oe,ge){var ce,O;for(Z=oe.length;--Z>=0;){ce=Z,O=Z-1,O<0&&(O=oe.length-1);var ee=0,fe=f+x*2;for(ee=0;ee<fe;ee++){var Ie=Y*ee,pe=Y*(ee+1),He=ge+ce+Ie,qe=ge+O+Ie,at=ge+O+pe,Ct=ge+ce+pe;K(He,qe,at,Ct)}}}function ue(oe,ge,ce){u.push(oe),u.push(ge),u.push(ce)}function P(oe,ge,ce){he(oe),he(ge),he(ce);var O=r.length/3,ee=S.generateTopUV(n,r,O-3,O-2,O-1);ae(ee[0]),ae(ee[1]),ae(ee[2])}function K(oe,ge,ce,O){he(oe),he(ge),he(O),he(ge),he(ce),he(O);var ee=r.length/3,fe=S.generateSideWallUV(n,r,ee-6,ee-3,ee-2,ee-1);ae(fe[0]),ae(fe[1]),ae(fe[3]),ae(fe[1]),ae(fe[2]),ae(fe[3])}function he(oe){r.push(u[oe*3+0]),r.push(u[oe*3+1]),r.push(u[oe*3+2])}function ae(oe){i.push(oe.x),i.push(oe.y)}}}En.prototype=Object.create(se.prototype),En.prototype.constructor=En,En.prototype.toJSON=function(){var e=se.prototype.toJSON.call(this),t=this.parameters.shapes,n=this.parameters.options;return ah(t,n,e)};var Hy={generateTopUV:function(e,t,n,r,i){var a=t[n*3],o=t[n*3+1],s=t[r*3],l=t[r*3+1],c=t[i*3],u=t[i*3+1];return[new j(a,o),new j(s,l),new j(c,u)]},generateSideWallUV:function(e,t,n,r,i,a){var o=t[n*3],s=t[n*3+1],l=t[n*3+2],c=t[r*3],u=t[r*3+1],h=t[r*3+2],f=t[i*3],d=t[i*3+1],p=t[i*3+2],v=t[a*3],m=t[a*3+1],g=t[a*3+2];return Math.abs(s-u)<.01?[new j(o,1-l),new j(c,1-h),new j(f,1-p),new j(v,1-g)]:[new j(s,1-l),new j(u,1-h),new j(d,1-p),new j(m,1-g)]}};function ah(e,t,n){if(n.shapes=[],Array.isArray(e))for(var r=0,i=e.length;r<i;r++){var a=e[r];n.shapes.push(a.uuid)}else n.shapes.push(e.uuid);return t.extrudePath!==void 0&&(n.options.extrudePath=t.extrudePath.toJSON()),n}function Fo(e,t){Me.call(this),this.type="TextGeometry",this.parameters={text:e,parameters:t},this.fromBufferGeometry(new ua(e,t)),this.mergeVertices()}Fo.prototype=Object.create(Me.prototype),Fo.prototype.constructor=Fo;function ua(e,t){t=t||{};var n=t.font;if(!(n&&n.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Me;var r=n.generateShapes(e,t.size);t.depth=t.height!==void 0?t.height:50,t.bevelThickness===void 0&&(t.bevelThickness=10),t.bevelSize===void 0&&(t.bevelSize=8),t.bevelEnabled===void 0&&(t.bevelEnabled=!1),En.call(this,r,t),this.type="TextBufferGeometry"}ua.prototype=Object.create(En.prototype),ua.prototype.constructor=ua;function Bo(e,t,n,r,i,a,o){Me.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:i,thetaStart:a,thetaLength:o},this.fromBufferGeometry(new li(e,t,n,r,i,a,o)),this.mergeVertices()}Bo.prototype=Object.create(Me.prototype),Bo.prototype.constructor=Bo;function li(e,t,n,r,i,a,o){se.call(this),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:i,thetaStart:a,thetaLength:o},e=e||1,t=Math.max(3,Math.floor(t)||8),n=Math.max(2,Math.floor(n)||6),r=r!==void 0?r:0,i=i!==void 0?i:Math.PI*2,a=a!==void 0?a:0,o=o!==void 0?o:Math.PI;var s=Math.min(a+o,Math.PI),l,c,u=0,h=[],f=new M,d=new M,p=[],v=[],m=[],g=[];for(c=0;c<=n;c++){var x=[],b=c/n,S=0;for(c==0&&a==0?S=.5/t:c==n&&s==Math.PI&&(S=-.5/t),l=0;l<=t;l++){var w=l/t;f.x=-e*Math.cos(r+w*i)*Math.sin(a+b*o),f.y=e*Math.cos(a+b*o),f.z=e*Math.sin(r+w*i)*Math.sin(a+b*o),v.push(f.x,f.y,f.z),d.copy(f).normalize(),m.push(d.x,d.y,d.z),g.push(w+S,1-b),x.push(u++)}h.push(x)}for(c=0;c<n;c++)for(l=0;l<t;l++){var T=h[c][l+1],L=h[c][l],I=h[c+1][l],C=h[c+1][l+1];(c!==0||a>0)&&p.push(T,L,C),(c!==n-1||s<Math.PI)&&p.push(L,I,C)}this.setIndex(p),this.setAttribute("position",new re(v,3)),this.setAttribute("normal",new re(m,3)),this.setAttribute("uv",new re(g,2))}li.prototype=Object.create(se.prototype),li.prototype.constructor=li;function Uo(e,t,n,r,i,a){Me.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:a},this.fromBufferGeometry(new ha(e,t,n,r,i,a)),this.mergeVertices()}Uo.prototype=Object.create(Me.prototype),Uo.prototype.constructor=Uo;function ha(e,t,n,r,i,a){se.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:a},e=e||.5,t=t||1,i=i!==void 0?i:0,a=a!==void 0?a:Math.PI*2,n=n!==void 0?Math.max(3,n):8,r=r!==void 0?Math.max(1,r):1;var o=[],s=[],l=[],c=[],u,h=e,f=(t-e)/r,d=new M,p=new j,v,m;for(v=0;v<=r;v++){for(m=0;m<=n;m++)u=i+m/n*a,d.x=h*Math.cos(u),d.y=h*Math.sin(u),s.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,c.push(p.x,p.y);h+=f}for(v=0;v<r;v++){var g=v*(n+1);for(m=0;m<n;m++){u=m+g;var x=u,b=u+n+1,S=u+n+2,w=u+1;o.push(x,b,w),o.push(b,S,w)}}this.setIndex(o),this.setAttribute("position",new re(s,3)),this.setAttribute("normal",new re(l,3)),this.setAttribute("uv",new re(c,2))}ha.prototype=Object.create(se.prototype),ha.prototype.constructor=ha;function Go(e,t,n,r){Me.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},this.fromBufferGeometry(new fa(e,t,n,r)),this.mergeVertices()}Go.prototype=Object.create(Me.prototype),Go.prototype.constructor=Go;function fa(e,t,n,r){se.call(this),this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},t=Math.floor(t)||12,n=n||0,r=r||Math.PI*2,r=Le.clamp(r,0,Math.PI*2);var i=[],a=[],o=[],s,l=1/t,c=new M,u=new j,h,f;for(h=0;h<=t;h++){var d=n+h*l*r,p=Math.sin(d),v=Math.cos(d);for(f=0;f<=e.length-1;f++)c.x=e[f].x*p,c.y=e[f].y,c.z=e[f].x*v,a.push(c.x,c.y,c.z),u.x=h/t,u.y=f/(e.length-1),o.push(u.x,u.y)}for(h=0;h<t;h++)for(f=0;f<e.length-1;f++){s=f+h*e.length;var m=s,g=s+e.length,x=s+e.length+1,b=s+1;i.push(m,g,b),i.push(g,x,b)}if(this.setIndex(i),this.setAttribute("position",new re(a,3)),this.setAttribute("uv",new re(o,2)),this.computeVertexNormals(),r===Math.PI*2){var S=this.attributes.normal.array,w=new M,T=new M,L=new M;for(s=t*e.length*3,h=0,f=0;h<e.length;h++,f+=3)w.x=S[f+0],w.y=S[f+1],w.z=S[f+2],T.x=S[s+f+0],T.y=S[s+f+1],T.z=S[s+f+2],L.addVectors(w,T).normalize(),S[f+0]=S[s+f+0]=L.x,S[f+1]=S[s+f+1]=L.y,S[f+2]=S[s+f+2]=L.z}}fa.prototype=Object.create(se.prototype),fa.prototype.constructor=fa;function ci(e,t){Me.call(this),this.type="ShapeGeometry",typeof t=="object"&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new ui(e,t)),this.mergeVertices()}ci.prototype=Object.create(Me.prototype),ci.prototype.constructor=ci,ci.prototype.toJSON=function(){var e=Me.prototype.toJSON.call(this),t=this.parameters.shapes;return oh(t,e)};function ui(e,t){se.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:t},t=t||12;var n=[],r=[],i=[],a=[],o=0,s=0;if(Array.isArray(e)===!1)c(e);else for(var l=0;l<e.length;l++)c(e[l]),this.addGroup(o,s,l),o+=s,s=0;this.setIndex(n),this.setAttribute("position",new re(r,3)),this.setAttribute("normal",new re(i,3)),this.setAttribute("uv",new re(a,2));function c(u){var h,f,d,p=r.length/3,v=u.extractPoints(t),m=v.shape,g=v.holes;for(kn.isClockWise(m)===!1&&(m=m.reverse()),h=0,f=g.length;h<f;h++)d=g[h],kn.isClockWise(d)===!0&&(g[h]=d.reverse());var x=kn.triangulateShape(m,g);for(h=0,f=g.length;h<f;h++)d=g[h],m=m.concat(d);for(h=0,f=m.length;h<f;h++){var b=m[h];r.push(b.x,b.y,0),i.push(0,0,1),a.push(b.x,b.y)}for(h=0,f=x.length;h<f;h++){var S=x[h],w=S[0]+p,T=S[1]+p,L=S[2]+p;n.push(w,T,L),s+=3}}}ui.prototype=Object.create(se.prototype),ui.prototype.constructor=ui,ui.prototype.toJSON=function(){var e=se.prototype.toJSON.call(this),t=this.parameters.shapes;return oh(t,e)};function oh(e,t){if(t.shapes=[],Array.isArray(e))for(var n=0,r=e.length;n<r;n++){var i=e[n];t.shapes.push(i.uuid)}else t.shapes.push(e.uuid);return t}function Ho(e,t){se.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=t!==void 0?t:1;var n=[],r=Math.cos(Le.DEG2RAD*t),i=[0,0],a={},o,s,l,c=["a","b","c"],u;e.isBufferGeometry?(u=new Me,u.fromBufferGeometry(e)):u=e.clone(),u.mergeVertices(),u.computeFaceNormals();for(var h=u.vertices,f=u.faces,d=0,p=f.length;d<p;d++)for(var v=f[d],m=0;m<3;m++)o=v[c[m]],s=v[c[(m+1)%3]],i[0]=Math.min(o,s),i[1]=Math.max(o,s),l=i[0]+","+i[1],a[l]===void 0?a[l]={index1:i[0],index2:i[1],face1:d,face2:void 0}:a[l].face2=d;for(l in a){var g=a[l];if(g.face2===void 0||f[g.face1].normal.dot(f[g.face2].normal)<=r){var x=h[g.index1];n.push(x.x,x.y,x.z),x=h[g.index2],n.push(x.x,x.y,x.z)}}this.setAttribute("position",new re(n,3))}Ho.prototype=Object.create(se.prototype),Ho.prototype.constructor=Ho;function hi(e,t,n,r,i,a,o,s){Me.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new Wn(e,t,n,r,i,a,o,s)),this.mergeVertices()}hi.prototype=Object.create(Me.prototype),hi.prototype.constructor=hi;function Wn(e,t,n,r,i,a,o,s){se.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s};var l=this;e=e!==void 0?e:1,t=t!==void 0?t:1,n=n||1,r=Math.floor(r)||8,i=Math.floor(i)||1,a=a!==void 0?a:!1,o=o!==void 0?o:0,s=s!==void 0?s:Math.PI*2;var c=[],u=[],h=[],f=[],d=0,p=[],v=n/2,m=0;g(),a===!1&&(e>0&&x(!0),t>0&&x(!1)),this.setIndex(c),this.setAttribute("position",new re(u,3)),this.setAttribute("normal",new re(h,3)),this.setAttribute("uv",new re(f,2));function g(){var b,S,w=new M,T=new M,L=0,I=(t-e)/n;for(S=0;S<=i;S++){var C=[],z=S/i,N=z*(t-e)+e;for(b=0;b<=r;b++){var B=b/r,U=B*s+o,F=Math.sin(U),R=Math.cos(U);T.x=N*F,T.y=-z*n+v,T.z=N*R,u.push(T.x,T.y,T.z),w.set(F,I,R).normalize(),h.push(w.x,w.y,w.z),f.push(B,1-z),C.push(d++)}p.push(C)}for(b=0;b<r;b++)for(S=0;S<i;S++){var G=p[S][b],k=p[S+1][b],q=p[S+1][b+1],H=p[S][b+1];c.push(G,k,H),c.push(k,q,H),L+=6}l.addGroup(m,L,0),m+=L}function x(b){var S,w,T,L=new j,I=new M,C=0,z=b===!0?e:t,N=b===!0?1:-1;for(w=d,S=1;S<=r;S++)u.push(0,v*N,0),h.push(0,N,0),f.push(.5,.5),d++;for(T=d,S=0;S<=r;S++){var B=S/r,U=B*s+o,F=Math.cos(U),R=Math.sin(U);I.x=z*R,I.y=v*N,I.z=z*F,u.push(I.x,I.y,I.z),h.push(0,N,0),L.x=F*.5+.5,L.y=R*.5*N+.5,f.push(L.x,L.y),d++}for(S=0;S<r;S++){var G=w+S,k=T+S;b===!0?c.push(k,k+1,G):c.push(k+1,k,G),C+=3}l.addGroup(m,C,b===!0?1:2),m+=C}}Wn.prototype=Object.create(se.prototype),Wn.prototype.constructor=Wn;function Vo(e,t,n,r,i,a,o){hi.call(this,0,e,t,n,r,i,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:o}}Vo.prototype=Object.create(hi.prototype),Vo.prototype.constructor=Vo;function ko(e,t,n,r,i,a,o){Wn.call(this,0,e,t,n,r,i,a,o),this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:o}}ko.prototype=Object.create(Wn.prototype),ko.prototype.constructor=ko;function Wo(e,t,n,r){Me.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},this.fromBufferGeometry(new da(e,t,n,r)),this.mergeVertices()}Wo.prototype=Object.create(Me.prototype),Wo.prototype.constructor=Wo;function da(e,t,n,r){se.call(this),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},e=e||1,t=t!==void 0?Math.max(3,t):8,n=n!==void 0?n:0,r=r!==void 0?r:Math.PI*2;var i=[],a=[],o=[],s=[],l,c,u=new M,h=new j;for(a.push(0,0,0),o.push(0,0,1),s.push(.5,.5),c=0,l=3;c<=t;c++,l+=3){var f=n+c/t*r;u.x=e*Math.cos(f),u.y=e*Math.sin(f),a.push(u.x,u.y,u.z),o.push(0,0,1),h.x=(a[l]/e+1)/2,h.y=(a[l+1]/e+1)/2,s.push(h.x,h.y)}for(l=1;l<=t;l++)i.push(l,l+1,0);this.setIndex(i),this.setAttribute("position",new re(a,3)),this.setAttribute("normal",new re(o,3)),this.setAttribute("uv",new re(s,2))}da.prototype=Object.create(se.prototype),da.prototype.constructor=da;var At=Object.freeze({__proto__:null,WireframeGeometry:Ao,ParametricGeometry:Lo,ParametricBufferGeometry:ea,TetrahedronGeometry:Po,TetrahedronBufferGeometry:ta,OctahedronGeometry:Ro,OctahedronBufferGeometry:ii,IcosahedronGeometry:Do,IcosahedronBufferGeometry:na,DodecahedronGeometry:Oo,DodecahedronBufferGeometry:ra,PolyhedronGeometry:Co,PolyhedronBufferGeometry:Ft,TubeGeometry:Io,TubeBufferGeometry:ai,TorusKnotGeometry:No,TorusKnotBufferGeometry:ia,TorusGeometry:zo,TorusBufferGeometry:aa,TextGeometry:Fo,TextBufferGeometry:ua,SphereGeometry:Bo,SphereBufferGeometry:li,RingGeometry:Uo,RingBufferGeometry:ha,PlaneGeometry:uo,PlaneBufferGeometry:Sn,LatheGeometry:Go,LatheBufferGeometry:fa,ShapeGeometry:ci,ShapeBufferGeometry:ui,ExtrudeGeometry:si,ExtrudeBufferGeometry:En,EdgesGeometry:Ho,ConeGeometry:Vo,ConeBufferGeometry:ko,CylinderGeometry:hi,CylinderBufferGeometry:Wn,CircleGeometry:Wo,CircleBufferGeometry:da,BoxGeometry:Pp,BoxBufferGeometry:so});function fi(e){be.call(this),this.type="ShadowMaterial",this.color=new ie(0),this.transparent=!0,this.setValues(e)}fi.prototype=Object.create(be.prototype),fi.prototype.constructor=fi,fi.prototype.isShadowMaterial=!0,fi.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.color.copy(e.color),this};function jn(e){rt.call(this,e),this.type="RawShaderMaterial"}jn.prototype=Object.create(rt.prototype),jn.prototype.constructor=jn,jn.prototype.isRawShaderMaterial=!0;function An(e){be.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ie(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ie(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Dr,this.normalScale=new j(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(e)}An.prototype=Object.create(be.prototype),An.prototype.constructor=An,An.prototype.isMeshStandardMaterial=!0,An.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.vertexTangents=e.vertexTangents,this};function di(e){An.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new j(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,this.sheen=null,this.transparency=0,this.setValues(e)}di.prototype=Object.create(An.prototype),di.prototype.constructor=di,di.prototype.isMeshPhysicalMaterial=!0,di.prototype.copy=function(e){return An.prototype.copy.call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new ie).copy(e.sheen):this.sheen=null,this.transparency=e.transparency,this};function pr(e){be.call(this),this.type="MeshPhongMaterial",this.color=new ie(16777215),this.specular=new ie(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ie(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Dr,this.normalScale=new j(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Na,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}pr.prototype=Object.create(be.prototype),pr.prototype.constructor=pr,pr.prototype.isMeshPhongMaterial=!0,pr.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function pi(e){be.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ie(16777215),this.specular=new ie(1118481),this.shininess=30,this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ie(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Dr,this.normalScale=new j(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}pi.prototype=Object.create(be.prototype),pi.prototype.constructor=pi,pi.prototype.isMeshToonMaterial=!0,pi.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function vi(e){be.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Dr,this.normalScale=new j(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}vi.prototype=Object.create(be.prototype),vi.prototype.constructor=vi,vi.prototype.isMeshNormalMaterial=!0,vi.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function mi(e){be.call(this),this.type="MeshLambertMaterial",this.color=new ie(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ie(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Na,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}mi.prototype=Object.create(be.prototype),mi.prototype.constructor=mi,mi.prototype.isMeshLambertMaterial=!0,mi.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function gi(e){be.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ie(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Dr,this.normalScale=new j(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}gi.prototype=Object.create(be.prototype),gi.prototype.constructor=gi,gi.prototype.isMeshMatcapMaterial=!0,gi.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function yi(e){ot.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}yi.prototype=Object.create(ot.prototype),yi.prototype.constructor=yi,yi.prototype.isLineDashedMaterial=!0,yi.prototype.copy=function(e){return ot.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var Vy=Object.freeze({__proto__:null,ShadowMaterial:fi,SpriteMaterial:hr,RawShaderMaterial:jn,ShaderMaterial:rt,PointsMaterial:fr,MeshPhysicalMaterial:di,MeshStandardMaterial:An,MeshPhongMaterial:pr,MeshToonMaterial:pi,MeshNormalMaterial:vi,MeshLambertMaterial:mi,MeshDepthMaterial:lr,MeshDistanceMaterial:cr,MeshBasicMaterial:Vt,MeshMatcapMaterial:gi,LineDashedMaterial:yi,LineBasicMaterial:ot,Material:be}),st={arraySlice:function(e,t,n){return st.isTypedArray(e)?new e.constructor(e.subarray(t,n!==void 0?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:typeof t.BYTES_PER_ELEMENT=="number"?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){function t(a,o){return e[a]-e[o]}for(var n=e.length,r=new Array(n),i=0;i!==n;++i)r[i]=i;return r.sort(t),r},sortedArray:function(e,t,n){for(var r=e.length,i=new e.constructor(r),a=0,o=0;o!==r;++a)for(var s=n[a]*t,l=0;l!==t;++l)i[o++]=e[s+l];return i},flattenJSON:function(e,t,n,r){for(var i=1,a=e[0];a!==void 0&&a[r]===void 0;)a=e[i++];if(a!==void 0){var o=a[r];if(o!==void 0)if(Array.isArray(o))do o=a[r],o!==void 0&&(t.push(a.time),n.push.apply(n,o)),a=e[i++];while(a!==void 0);else if(o.toArray!==void 0)do o=a[r],o!==void 0&&(t.push(a.time),o.toArray(n,n.length)),a=e[i++];while(a!==void 0);else do o=a[r],o!==void 0&&(t.push(a.time),n.push(o)),a=e[i++];while(a!==void 0)}},subclip:function(e,t,n,r,i){i=i||30;var a=e.clone();a.name=t;for(var o=[],s=0;s<a.tracks.length;++s){for(var l=a.tracks[s],c=l.getValueSize(),u=[],h=[],f=0;f<l.times.length;++f){var d=l.times[f]*i;if(!(d<n||d>=r)){u.push(l.times[f]);for(var p=0;p<c;++p)h.push(l.values[f*c+p])}}u.length!==0&&(l.times=st.convertArray(u,l.times.constructor),l.values=st.convertArray(h,l.values.constructor),o.push(l))}a.tracks=o;for(var v=1/0,s=0;s<a.tracks.length;++s)v>a.tracks[s].times[0]&&(v=a.tracks[s].times[0]);for(var s=0;s<a.tracks.length;++s)a.tracks[s].shift(-1*v);return a.resetDuration(),a}};function jt(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=r!==void 0?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n}Object.assign(jt.prototype,{evaluate:function(e){var t=this.parameterPositions,n=this._cachedIndex,r=t[n],i=t[n-1];e:{t:{var a;n:{r:if(!(e<r)){for(var o=n+2;;){if(r===void 0){if(e<i)break r;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,i)}if(n===o)break;if(i=r,r=t[++n],e<r)break t}a=t.length;break n}if(!(e>=i)){var s=t[1];e<s&&(n=2,i=s);for(var o=n-2;;){if(i===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(n===o)break;if(r=i,i=t[--n-1],e>=i)break t}a=n,n=0;break n}break e}for(;n<a;){var l=n+a>>>1;e<t[l]?a=l:n=l+1}if(r=t[n],i=t[n-1],i===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(r===void 0)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,i,e)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,e,r)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){for(var t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=e*r,a=0;a!==r;++a)t[a]=n[i+a];return t},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(jt.prototype,{beforeStart_:jt.prototype.copySampleValue_,afterEnd_:jt.prototype.copySampleValue_});function wl(e,t,n,r){jt.call(this,e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}wl.prototype=Object.assign(Object.create(jt.prototype),{constructor:wl,DefaultSettings_:{endingStart:Pr,endingEnd:Pr},intervalChanged_:function(e,t,n){var r=this.parameterPositions,i=e-2,a=e+1,o=r[i],s=r[a];if(o===void 0)switch(this.getSettings_().endingStart){case Rr:i=e,o=2*t-n;break;case ja:i=r.length-2,o=t+r[i]-r[i+1];break;default:i=e,o=n}if(s===void 0)switch(this.getSettings_().endingEnd){case Rr:a=e,s=2*n-t;break;case ja:a=1,s=n+r[1]-r[0];break;default:a=e-1,s=t}var l=(n-t)*.5,c=this.valueSize;this._weightPrev=l/(t-o),this._weightNext=l/(s-n),this._offsetPrev=i*c,this._offsetNext=a*c},interpolate_:function(e,t,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=s-o,c=this._offsetPrev,u=this._offsetNext,h=this._weightPrev,f=this._weightNext,d=(n-t)/(r-t),p=d*d,v=p*d,m=-h*v+2*h*p-h*d,g=(1+h)*v+(-1.5-2*h)*p+(-.5+h)*d+1,x=(-1-f)*v+(1.5+f)*p+.5*d,b=f*v-f*p,S=0;S!==o;++S)i[S]=m*a[c+S]+g*a[l+S]+x*a[s+S]+b*a[u+S];return i}});function jo(e,t,n,r){jt.call(this,e,t,n,r)}jo.prototype=Object.assign(Object.create(jt.prototype),{constructor:jo,interpolate_:function(e,t,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=s-o,c=(n-t)/(r-t),u=1-c,h=0;h!==o;++h)i[h]=a[l+h]*u+a[s+h]*c;return i}});function bl(e,t,n,r){jt.call(this,e,t,n,r)}bl.prototype=Object.assign(Object.create(jt.prototype),{constructor:bl,interpolate_:function(e){return this.copySampleValue_(e-1)}});function wt(e,t,n,r){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=st.convertArray(t,this.TimeBufferType),this.values=st.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}Object.assign(wt,{toJSON:function(e){var t=e.constructor,n;if(t.toJSON!==void 0)n=t.toJSON(e);else{n={name:e.name,times:st.convertArray(e.times,Array),values:st.convertArray(e.values,Array)};var r=e.getInterpolation();r!==e.DefaultInterpolation&&(n.interpolation=r)}return n.type=e.ValueTypeName,n}}),Object.assign(wt.prototype,{constructor:wt,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:Wa,InterpolantFactoryMethodDiscrete:function(e){return new bl(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new jo(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new wl(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){var t;switch(e){case ka:t=this.InterpolantFactoryMethodDiscrete;break;case Wa:t=this.InterpolantFactoryMethodLinear;break;case Cs:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){var n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ka;case this.InterpolantFactoryMethodLinear:return Wa;case this.InterpolantFactoryMethodSmooth:return Cs}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(e!==0)for(var t=this.times,n=0,r=t.length;n!==r;++n)t[n]+=e;return this},scale:function(e){if(e!==1)for(var t=this.times,n=0,r=t.length;n!==r;++n)t[n]*=e;return this},trim:function(e,t){for(var n=this.times,r=n.length,i=0,a=r-1;i!==r&&n[i]<e;)++i;for(;a!==-1&&n[a]>t;)--a;if(++a,i!==0||a!==r){i>=a&&(a=Math.max(a,1),i=a-1);var o=this.getValueSize();this.times=st.arraySlice(n,i,a),this.values=st.arraySlice(this.values,i*o,a*o)}return this},validate:function(){var e=!0,t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);var n=this.times,r=this.values,i=n.length;i===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);for(var a=null,o=0;o!==i;o++){var s=n[o];if(typeof s=="number"&&isNaN(s)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,s),e=!1;break}if(a!==null&&a>s){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,s,a),e=!1;break}a=s}if(r!==void 0&&st.isTypedArray(r))for(var o=0,l=r.length;o!==l;++o){var c=r[o];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,c),e=!1;break}}return e},optimize:function(){for(var e=st.arraySlice(this.times),t=st.arraySlice(this.values),n=this.getValueSize(),r=this.getInterpolation()===Cs,i=1,a=e.length-1,o=1;o<a;++o){var s=!1,l=e[o],c=e[o+1];if(l!==c&&(o!==1||l!==l[0]))if(r)s=!0;else for(var u=o*n,h=u-n,f=u+n,d=0;d!==n;++d){var p=t[u+d];if(p!==t[h+d]||p!==t[f+d]){s=!0;break}}if(s){if(o!==i){e[i]=e[o];for(var v=o*n,m=i*n,d=0;d!==n;++d)t[m+d]=t[v+d]}++i}}if(a>0){e[i]=e[a];for(var v=a*n,m=i*n,d=0;d!==n;++d)t[m+d]=t[v+d];++i}return i!==e.length?(this.times=st.arraySlice(e,0,i),this.values=st.arraySlice(t,0,i*n)):(this.times=e,this.values=t),this},clone:function(){var e=st.arraySlice(this.times,0),t=st.arraySlice(this.values,0),n=this.constructor,r=new n(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}});function Ml(e,t,n){wt.call(this,e,t,n)}Ml.prototype=Object.assign(Object.create(wt.prototype),{constructor:Ml,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:ka,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function Sl(e,t,n,r){wt.call(this,e,t,n,r)}Sl.prototype=Object.assign(Object.create(wt.prototype),{constructor:Sl,ValueTypeName:"color"});function pa(e,t,n,r){wt.call(this,e,t,n,r)}pa.prototype=Object.assign(Object.create(wt.prototype),{constructor:pa,ValueTypeName:"number"});function Tl(e,t,n,r){jt.call(this,e,t,n,r)}Tl.prototype=Object.assign(Object.create(jt.prototype),{constructor:Tl,interpolate_:function(e,t,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=(n-t)/(r-t),c=s+o;s!==c;s+=4)xt.slerpFlat(i,0,a,s-o,a,s,l);return i}});function qo(e,t,n,r){wt.call(this,e,t,n,r)}qo.prototype=Object.assign(Object.create(wt.prototype),{constructor:qo,ValueTypeName:"quaternion",DefaultInterpolation:Wa,InterpolantFactoryMethodLinear:function(e){return new Tl(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0});function El(e,t,n,r){wt.call(this,e,t,n,r)}El.prototype=Object.assign(Object.create(wt.prototype),{constructor:El,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:ka,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function va(e,t,n,r){wt.call(this,e,t,n,r)}va.prototype=Object.assign(Object.create(wt.prototype),{constructor:va,ValueTypeName:"vector"});function Qt(e,t,n){this.name=e,this.tracks=n,this.duration=t!==void 0?t:-1,this.uuid=Le.generateUUID(),this.duration<0&&this.resetDuration()}function ky(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return pa;case"vector":case"vector2":case"vector3":case"vector4":return va;case"color":return Sl;case"quaternion":return qo;case"bool":case"boolean":return Ml;case"string":return El}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function Wy(e){if(e.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var t=ky(e.type);if(e.times===void 0){var n=[],r=[];st.flattenJSON(e.keys,n,r,"value"),e.times=n,e.values=r}return t.parse!==void 0?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}Object.assign(Qt,{parse:function(e){for(var t=[],n=e.tracks,r=1/(e.fps||1),i=0,a=n.length;i!==a;++i)t.push(Wy(n[i]).scale(r));return new Qt(e.name,e.duration,t)},toJSON:function(e){for(var t=[],n=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid},i=0,a=n.length;i!==a;++i)t.push(wt.toJSON(n[i]));return r},CreateFromMorphTargetSequence:function(e,t,n,r){for(var i=t.length,a=[],o=0;o<i;o++){var s=[],l=[];s.push((o+i-1)%i,o,(o+1)%i),l.push(0,1,0);var c=st.getKeyframeOrder(s);s=st.sortedArray(s,1,c),l=st.sortedArray(l,1,c),!r&&s[0]===0&&(s.push(i),l.push(l[0])),a.push(new pa(".morphTargetInfluences["+t[o].name+"]",s,l).scale(1/n))}return new Qt(e,-1,a)},findByName:function(e,t){var n=e;if(!Array.isArray(e)){var r=e;n=r.geometry&&r.geometry.animations||r.animations}for(var i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null},CreateClipsFromMorphTargetSequences:function(e,t,n){for(var r={},i=/^([\w-]*?)([\d]+)$/,a=0,o=e.length;a<o;a++){var s=e[a],l=s.name.match(i);if(l&&l.length>1){var c=l[1],u=r[c];u||(r[c]=u=[]),u.push(s)}}var h=[];for(var c in r)h.push(Qt.CreateFromMorphTargetSequence(c,r[c],t,n));return h},parseAnimation:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var n=function(b,S,w,T,L){if(w.length!==0){var I=[],C=[];st.flattenJSON(w,I,C,T),I.length!==0&&L.push(new b(S,I,C))}},r=[],i=e.name||"default",a=e.length||-1,o=e.fps||30,s=e.hierarchy||[],l=0;l<s.length;l++){var c=s[l].keys;if(!(!c||c.length===0))if(c[0].morphTargets){for(var u={},h=0;h<c.length;h++)if(c[h].morphTargets)for(var f=0;f<c[h].morphTargets.length;f++)u[c[h].morphTargets[f]]=-1;for(var d in u){for(var p=[],v=[],f=0;f!==c[h].morphTargets.length;++f){var m=c[h];p.push(m.time),v.push(m.morphTarget===d?1:0)}r.push(new pa(".morphTargetInfluence["+d+"]",p,v))}a=u.length*(o||1)}else{var g=".bones["+t[l].name+"]";n(va,g+".position",c,"pos",r),n(qo,g+".quaternion",c,"rot",r),n(va,g+".scale",c,"scl",r)}}if(r.length===0)return null;var x=new Qt(i,a,r);return x}}),Object.assign(Qt.prototype,{resetDuration:function(){for(var e=this.tracks,t=0,n=0,r=e.length;n!==r;++n){var i=this.tracks[n];t=Math.max(t,i.times[i.times.length-1])}return this.duration=t,this},trim:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},validate:function(){for(var e=!0,t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e},optimize:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this},clone:function(){for(var e=[],t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new Qt(this.name,this.duration,e)}});var xi={enabled:!1,files:{},add:function(e,t){this.enabled!==!1&&(this.files[e]=t)},get:function(e){if(this.enabled!==!1)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function sh(e,t,n){var r=this,i=!1,a=0,o=0,s=void 0,l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(c){o++,i===!1&&r.onStart!==void 0&&r.onStart(c,a,o),i=!0},this.itemEnd=function(c){a++,r.onProgress!==void 0&&r.onProgress(c,a,o),a===o&&(i=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(c){r.onError!==void 0&&r.onError(c)},this.resolveURL=function(c){return s?s(c):c},this.setURLModifier=function(c){return s=c,this},this.addHandler=function(c,u){return l.push(c,u),this},this.removeHandler=function(c){var u=l.indexOf(c);return u!==-1&&l.splice(u,2),this},this.getHandler=function(c){for(var u=0,h=l.length;u<h;u+=2){var f=l[u],d=l[u+1];if(f.global&&(f.lastIndex=0),f.test(c))return d}return null}}var jy=new sh;function Ve(e){this.manager=e!==void 0?e:jy,this.crossOrigin="anonymous",this.path="",this.resourcePath=""}Object.assign(Ve.prototype,{load:function(){},parse:function(){},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this}});var Kt={};function ln(e){Ve.call(this,e)}ln.prototype=Object.assign(Object.create(Ve.prototype),{constructor:ln,load:function(e,t,n,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);var i=this,a=xi.get(e);if(a!==void 0)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0),a;if(Kt[e]!==void 0){Kt[e].push({onLoad:t,onProgress:n,onError:r});return}var o=/^data:(.*?)(;base64)?,(.*)$/,s=e.match(o);if(s){var l=s[1],c=!!s[2],u=s[3];u=decodeURIComponent(u),c&&(u=atob(u));try{var h,f=(this.responseType||"").toLowerCase();switch(f){case"arraybuffer":case"blob":for(var d=new Uint8Array(u.length),p=0;p<u.length;p++)d[p]=u.charCodeAt(p);f==="blob"?h=new Blob([d.buffer],{type:l}):h=d.buffer;break;case"document":var v=new DOMParser;h=v.parseFromString(u,l);break;case"json":h=JSON.parse(u);break;default:h=u;break}setTimeout(function(){t&&t(h),i.manager.itemEnd(e)},0)}catch(x){setTimeout(function(){r&&r(x),i.manager.itemError(e),i.manager.itemEnd(e)},0)}}else{Kt[e]=[],Kt[e].push({onLoad:t,onProgress:n,onError:r});var m=new XMLHttpRequest;m.open("GET",e,!0),m.addEventListener("load",function(x){var b=this.response,S=Kt[e];if(delete Kt[e],this.status===200||this.status===0){this.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),xi.add(e,b);for(var w=0,T=S.length;w<T;w++){var L=S[w];L.onLoad&&L.onLoad(b)}i.manager.itemEnd(e)}else{for(var w=0,T=S.length;w<T;w++){var L=S[w];L.onError&&L.onError(x)}i.manager.itemError(e),i.manager.itemEnd(e)}},!1),m.addEventListener("progress",function(x){for(var b=Kt[e],S=0,w=b.length;S<w;S++){var T=b[S];T.onProgress&&T.onProgress(x)}},!1),m.addEventListener("error",function(x){var b=Kt[e];delete Kt[e];for(var S=0,w=b.length;S<w;S++){var T=b[S];T.onError&&T.onError(x)}i.manager.itemError(e),i.manager.itemEnd(e)},!1),m.addEventListener("abort",function(x){var b=Kt[e];delete Kt[e];for(var S=0,w=b.length;S<w;S++){var T=b[S];T.onError&&T.onError(x)}i.manager.itemError(e),i.manager.itemEnd(e)},!1),this.responseType!==void 0&&(m.responseType=this.responseType),this.withCredentials!==void 0&&(m.withCredentials=this.withCredentials),m.overrideMimeType&&m.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain");for(var g in this.requestHeader)m.setRequestHeader(g,this.requestHeader[g]);m.send(null)}return i.manager.itemStart(e),m},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}});function lh(e){Ve.call(this,e)}lh.prototype=Object.assign(Object.create(Ve.prototype),{constructor:lh,load:function(e,t,n,r){var i=this,a=new ln(i.manager);a.setPath(i.path),a.load(e,function(o){t(i.parse(JSON.parse(o)))},n,r)},parse:function(e){for(var t=[],n=0;n<e.length;n++){var r=Qt.parse(e[n]);t.push(r)}return t}});function ch(e){Ve.call(this,e)}ch.prototype=Object.assign(Object.create(Ve.prototype),{constructor:ch,load:function(e,t,n,r){var i=this,a=[],o=new Ki;o.image=a;var s=new ln(this.manager);s.setPath(this.path),s.setResponseType("arraybuffer");function l(f){s.load(e[f],function(d){var p=i.parse(d,!0);a[f]={width:p.width,height:p.height,format:p.format,mipmaps:p.mipmaps},c+=1,c===6&&(p.mipmapCount===1&&(o.minFilter=nt),o.format=p.format,o.needsUpdate=!0,t&&t(o))},n,r)}if(Array.isArray(e))for(var c=0,u=0,h=e.length;u<h;++u)l(u);else s.load(e,function(f){var d=i.parse(f,!0);if(d.isCubemap)for(var p=d.mipmaps.length/d.mipmapCount,v=0;v<p;v++){a[v]={mipmaps:[]};for(var m=0;m<d.mipmapCount;m++)a[v].mipmaps.push(d.mipmaps[v*d.mipmapCount+m]),a[v].format=d.format,a[v].width=d.width,a[v].height=d.height}else o.image.width=d.width,o.image.height=d.height,o.mipmaps=d.mipmaps;d.mipmapCount===1&&(o.minFilter=nt),o.format=d.format,o.needsUpdate=!0,t&&t(o)},n,r);return o}});function uh(e){Ve.call(this,e)}uh.prototype=Object.assign(Object.create(Ve.prototype),{constructor:uh,load:function(e,t,n,r){var i=this,a=new sr,o=new ln(this.manager);return o.setResponseType("arraybuffer"),o.setPath(this.path),o.load(e,function(s){var l=i.parse(s);l&&(l.image!==void 0?a.image=l.image:l.data!==void 0&&(a.image.width=l.width,a.image.height=l.height,a.image.data=l.data),a.wrapS=l.wrapS!==void 0?l.wrapS:yt,a.wrapT=l.wrapT!==void 0?l.wrapT:yt,a.magFilter=l.magFilter!==void 0?l.magFilter:nt,a.minFilter=l.minFilter!==void 0?l.minFilter:nt,a.anisotropy=l.anisotropy!==void 0?l.anisotropy:1,l.format!==void 0&&(a.format=l.format),l.type!==void 0&&(a.type=l.type),l.mipmaps!==void 0&&(a.mipmaps=l.mipmaps,a.minFilter=Ua),l.mipmapCount===1&&(a.minFilter=nt),a.needsUpdate=!0,t&&t(a,l))},n,r),a}});function ma(e){Ve.call(this,e)}ma.prototype=Object.assign(Object.create(Ve.prototype),{constructor:ma,load:function(e,t,n,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);var i=this,a=xi.get(e);if(a!==void 0)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0),a;var o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function s(){o.removeEventListener("load",s,!1),o.removeEventListener("error",l,!1),xi.add(e,this),t&&t(this),i.manager.itemEnd(e)}function l(c){o.removeEventListener("load",s,!1),o.removeEventListener("error",l,!1),r&&r(c),i.manager.itemError(e),i.manager.itemEnd(e)}return o.addEventListener("load",s,!1),o.addEventListener("error",l,!1),e.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),i.manager.itemStart(e),o.src=e,o}});function Al(e){Ve.call(this,e)}Al.prototype=Object.assign(Object.create(Ve.prototype),{constructor:Al,load:function(e,t,n,r){var i=new Gn,a=new ma(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);var o=0;function s(c){a.load(e[c],function(u){i.images[c]=u,o++,o===6&&(i.needsUpdate=!0,t&&t(i))},void 0,r)}for(var l=0;l<e.length;++l)s(l);return i}});function Ll(e){Ve.call(this,e)}Ll.prototype=Object.assign(Object.create(Ve.prototype),{constructor:Ll,load:function(e,t,n,r){var i=new Xe,a=new ma(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){i.image=o;var s=e.search(/\.jpe?g($|\?)/i)>0||e.search(/^data\:image\/jpeg/)===0;i.format=s?In:Tt,i.needsUpdate=!0,t!==void 0&&t(i)},n,r),i}});function ye(){this.type="Curve",this.arcLengthDivisions=200}Object.assign(ye.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(e,t){var n=this.getUtoTmapping(e);return this.getPoint(n,t)},getPoints:function(e){e===void 0&&(e=5);for(var t=[],n=0;n<=e;n++)t.push(this.getPoint(n/e));return t},getSpacedPoints:function(e){e===void 0&&(e=5);for(var t=[],n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t},getLength:function(){var e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(e===void 0&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t=[],n,r=this.getPoint(0),i,a=0;for(t.push(0),i=1;i<=e;i++)n=this.getPoint(i/e),a+=n.distanceTo(r),t.push(a),r=n;return this.cacheArcLengths=t,t},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){var n=this.getLengths(),r=0,i=n.length,a;t?a=t:a=e*n[i-1];for(var o=0,s=i-1,l;o<=s;)if(r=Math.floor(o+(s-o)/2),l=n[r]-a,l<0)o=r+1;else if(l>0)s=r-1;else{s=r;break}if(r=s,n[r]===a)return r/(i-1);var c=n[r],u=n[r+1],h=u-c,f=(a-c)/h,d=(r+f)/(i-1);return d},getTangent:function(e){var t=1e-4,n=e-t,r=e+t;n<0&&(n=0),r>1&&(r=1);var i=this.getPoint(n),a=this.getPoint(r),o=a.clone().sub(i);return o.normalize()},getTangentAt:function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)},computeFrenetFrames:function(e,t){var n=new M,r=[],i=[],a=[],o=new M,s=new De,l,c,u;for(l=0;l<=e;l++)c=l/e,r[l]=this.getTangentAt(c),r[l].normalize();i[0]=new M,a[0]=new M;var h=Number.MAX_VALUE,f=Math.abs(r[0].x),d=Math.abs(r[0].y),p=Math.abs(r[0].z);for(f<=h&&(h=f,n.set(1,0,0)),d<=h&&(h=d,n.set(0,1,0)),p<=h&&n.set(0,0,1),o.crossVectors(r[0],n).normalize(),i[0].crossVectors(r[0],o),a[0].crossVectors(r[0],i[0]),l=1;l<=e;l++)i[l]=i[l-1].clone(),a[l]=a[l-1].clone(),o.crossVectors(r[l-1],r[l]),o.length()>Number.EPSILON&&(o.normalize(),u=Math.acos(Le.clamp(r[l-1].dot(r[l]),-1,1)),i[l].applyMatrix4(s.makeRotationAxis(o,u))),a[l].crossVectors(r[l],i[l]);if(t===!0)for(u=Math.acos(Le.clamp(i[0].dot(i[e]),-1,1)),u/=e,r[0].dot(o.crossVectors(i[0],i[e]))>0&&(u=-u),l=1;l<=e;l++)i[l].applyMatrix4(s.makeRotationAxis(r[l],u*l)),a[l].crossVectors(r[l],i[l]);return{tangents:r,normals:i,binormals:a}},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){var e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}});function qt(e,t,n,r,i,a,o,s){ye.call(this),this.type="EllipseCurve",this.aX=e||0,this.aY=t||0,this.xRadius=n||1,this.yRadius=r||1,this.aStartAngle=i||0,this.aEndAngle=a||2*Math.PI,this.aClockwise=o||!1,this.aRotation=s||0}qt.prototype=Object.create(ye.prototype),qt.prototype.constructor=qt,qt.prototype.isEllipseCurve=!0,qt.prototype.getPoint=function(e,t){for(var n=t||new j,r=Math.PI*2,i=this.aEndAngle-this.aStartAngle,a=Math.abs(i)<Number.EPSILON;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(a?i=0:i=r),this.aClockwise===!0&&!a&&(i===r?i=-r:i=i-r);var o=this.aStartAngle+e*i,s=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){var c=Math.cos(this.aRotation),u=Math.sin(this.aRotation),h=s-this.aX,f=l-this.aY;s=h*c-f*u+this.aX,l=h*u+f*c+this.aY}return n.set(s,l)},qt.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},qt.prototype.toJSON=function(){var e=ye.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e},qt.prototype.fromJSON=function(e){return ye.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this};function ga(e,t,n,r,i,a){qt.call(this,e,t,n,n,r,i,a),this.type="ArcCurve"}ga.prototype=Object.create(qt.prototype),ga.prototype.constructor=ga,ga.prototype.isArcCurve=!0;function Cl(){var e=0,t=0,n=0,r=0;function i(a,o,s,l){e=a,t=s,n=-3*a+3*o-2*s-l,r=2*a-2*o+s+l}return{initCatmullRom:function(a,o,s,l,c){i(o,s,c*(s-a),c*(l-o))},initNonuniformCatmullRom:function(a,o,s,l,c,u,h){var f=(o-a)/c-(s-a)/(c+u)+(s-o)/u,d=(s-o)/u-(l-o)/(u+h)+(l-s)/h;f*=u,d*=u,i(o,s,f,d)},calc:function(a){var o=a*a,s=o*a;return e+t*a+n*o+r*s}}}var Xo=new M,Pl=new Cl,Rl=new Cl,Dl=new Cl;function Bt(e,t,n,r){ye.call(this),this.type="CatmullRomCurve3",this.points=e||[],this.closed=t||!1,this.curveType=n||"centripetal",this.tension=r||.5}Bt.prototype=Object.create(ye.prototype),Bt.prototype.constructor=Bt,Bt.prototype.isCatmullRomCurve3=!0,Bt.prototype.getPoint=function(e,t){var n=t||new M,r=this.points,i=r.length,a=(i-(this.closed?0:1))*e,o=Math.floor(a),s=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/i)+1)*i:s===0&&o===i-1&&(o=i-2,s=1);var l,c,u,h;if(this.closed||o>0?l=r[(o-1)%i]:(Xo.subVectors(r[0],r[1]).add(r[0]),l=Xo),c=r[o%i],u=r[(o+1)%i],this.closed||o+2<i?h=r[(o+2)%i]:(Xo.subVectors(r[i-1],r[i-2]).add(r[i-1]),h=Xo),this.curveType==="centripetal"||this.curveType==="chordal"){var f=this.curveType==="chordal"?.5:.25,d=Math.pow(l.distanceToSquared(c),f),p=Math.pow(c.distanceToSquared(u),f),v=Math.pow(u.distanceToSquared(h),f);p<1e-4&&(p=1),d<1e-4&&(d=p),v<1e-4&&(v=p),Pl.initNonuniformCatmullRom(l.x,c.x,u.x,h.x,d,p,v),Rl.initNonuniformCatmullRom(l.y,c.y,u.y,h.y,d,p,v),Dl.initNonuniformCatmullRom(l.z,c.z,u.z,h.z,d,p,v)}else this.curveType==="catmullrom"&&(Pl.initCatmullRom(l.x,c.x,u.x,h.x,this.tension),Rl.initCatmullRom(l.y,c.y,u.y,h.y,this.tension),Dl.initCatmullRom(l.z,c.z,u.z,h.z,this.tension));return n.set(Pl.calc(s),Rl.calc(s),Dl.calc(s)),n},Bt.prototype.copy=function(e){ye.prototype.copy.call(this,e),this.points=[];for(var t=0,n=e.points.length;t<n;t++){var r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},Bt.prototype.toJSON=function(){var e=ye.prototype.toJSON.call(this);e.points=[];for(var t=0,n=this.points.length;t<n;t++){var r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e},Bt.prototype.fromJSON=function(e){ye.prototype.fromJSON.call(this,e),this.points=[];for(var t=0,n=e.points.length;t<n;t++){var r=e.points[t];this.points.push(new M().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this};function hh(e,t,n,r,i){var a=(r-t)*.5,o=(i-n)*.5,s=e*e,l=e*s;return(2*n-2*r+a+o)*l+(-3*n+3*r-2*a-o)*s+a*e+n}function qy(e,t){var n=1-e;return n*n*t}function Xy(e,t){return 2*(1-e)*e*t}function Yy(e,t){return e*e*t}function ya(e,t,n,r){return qy(e,t)+Xy(e,n)+Yy(e,r)}function Zy(e,t){var n=1-e;return n*n*n*t}function Jy(e,t){var n=1-e;return 3*n*n*e*t}function $y(e,t){return 3*(1-e)*e*e*t}function Qy(e,t){return e*e*e*t}function xa(e,t,n,r,i){return Zy(e,t)+Jy(e,n)+$y(e,r)+Qy(e,i)}function cn(e,t,n,r){ye.call(this),this.type="CubicBezierCurve",this.v0=e||new j,this.v1=t||new j,this.v2=n||new j,this.v3=r||new j}cn.prototype=Object.create(ye.prototype),cn.prototype.constructor=cn,cn.prototype.isCubicBezierCurve=!0,cn.prototype.getPoint=function(e,t){var n=t||new j,r=this.v0,i=this.v1,a=this.v2,o=this.v3;return n.set(xa(e,r.x,i.x,a.x,o.x),xa(e,r.y,i.y,a.y,o.y)),n},cn.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},cn.prototype.toJSON=function(){var e=ye.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},cn.prototype.fromJSON=function(e){return ye.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this};function Ln(e,t,n,r){ye.call(this),this.type="CubicBezierCurve3",this.v0=e||new M,this.v1=t||new M,this.v2=n||new M,this.v3=r||new M}Ln.prototype=Object.create(ye.prototype),Ln.prototype.constructor=Ln,Ln.prototype.isCubicBezierCurve3=!0,Ln.prototype.getPoint=function(e,t){var n=t||new M,r=this.v0,i=this.v1,a=this.v2,o=this.v3;return n.set(xa(e,r.x,i.x,a.x,o.x),xa(e,r.y,i.y,a.y,o.y),xa(e,r.z,i.z,a.z,o.z)),n},Ln.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},Ln.prototype.toJSON=function(){var e=ye.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},Ln.prototype.fromJSON=function(e){return ye.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this};function Ut(e,t){ye.call(this),this.type="LineCurve",this.v1=e||new j,this.v2=t||new j}Ut.prototype=Object.create(ye.prototype),Ut.prototype.constructor=Ut,Ut.prototype.isLineCurve=!0,Ut.prototype.getPoint=function(e,t){var n=t||new j;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n},Ut.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},Ut.prototype.getTangent=function(){var e=this.v2.clone().sub(this.v1);return e.normalize()},Ut.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},Ut.prototype.toJSON=function(){var e=ye.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},Ut.prototype.fromJSON=function(e){return ye.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function un(e,t){ye.call(this),this.type="LineCurve3",this.v1=e||new M,this.v2=t||new M}un.prototype=Object.create(ye.prototype),un.prototype.constructor=un,un.prototype.isLineCurve3=!0,un.prototype.getPoint=function(e,t){var n=t||new M;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n},un.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},un.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},un.prototype.toJSON=function(){var e=ye.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},un.prototype.fromJSON=function(e){return ye.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function hn(e,t,n){ye.call(this),this.type="QuadraticBezierCurve",this.v0=e||new j,this.v1=t||new j,this.v2=n||new j}hn.prototype=Object.create(ye.prototype),hn.prototype.constructor=hn,hn.prototype.isQuadraticBezierCurve=!0,hn.prototype.getPoint=function(e,t){var n=t||new j,r=this.v0,i=this.v1,a=this.v2;return n.set(ya(e,r.x,i.x,a.x),ya(e,r.y,i.y,a.y)),n},hn.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},hn.prototype.toJSON=function(){var e=ye.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},hn.prototype.fromJSON=function(e){return ye.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function Cn(e,t,n){ye.call(this),this.type="QuadraticBezierCurve3",this.v0=e||new M,this.v1=t||new M,this.v2=n||new M}Cn.prototype=Object.create(ye.prototype),Cn.prototype.constructor=Cn,Cn.prototype.isQuadraticBezierCurve3=!0,Cn.prototype.getPoint=function(e,t){var n=t||new M,r=this.v0,i=this.v1,a=this.v2;return n.set(ya(e,r.x,i.x,a.x),ya(e,r.y,i.y,a.y),ya(e,r.z,i.z,a.z)),n},Cn.prototype.copy=function(e){return ye.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},Cn.prototype.toJSON=function(){var e=ye.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},Cn.prototype.fromJSON=function(e){return ye.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function fn(e){ye.call(this),this.type="SplineCurve",this.points=e||[]}fn.prototype=Object.create(ye.prototype),fn.prototype.constructor=fn,fn.prototype.isSplineCurve=!0,fn.prototype.getPoint=function(e,t){var n=t||new j,r=this.points,i=(r.length-1)*e,a=Math.floor(i),o=i-a,s=r[a===0?a:a-1],l=r[a],c=r[a>r.length-2?r.length-1:a+1],u=r[a>r.length-3?r.length-1:a+2];return n.set(hh(o,s.x,l.x,c.x,u.x),hh(o,s.y,l.y,c.y,u.y)),n},fn.prototype.copy=function(e){ye.prototype.copy.call(this,e),this.points=[];for(var t=0,n=e.points.length;t<n;t++){var r=e.points[t];this.points.push(r.clone())}return this},fn.prototype.toJSON=function(){var e=ye.prototype.toJSON.call(this);e.points=[];for(var t=0,n=this.points.length;t<n;t++){var r=this.points[t];e.points.push(r.toArray())}return e},fn.prototype.fromJSON=function(e){ye.prototype.fromJSON.call(this,e),this.points=[];for(var t=0,n=e.points.length;t<n;t++){var r=e.points[t];this.points.push(new j().fromArray(r))}return this};var Ol=Object.freeze({__proto__:null,ArcCurve:ga,CatmullRomCurve3:Bt,CubicBezierCurve:cn,CubicBezierCurve3:Ln,EllipseCurve:qt,LineCurve:Ut,LineCurve3:un,QuadraticBezierCurve:hn,QuadraticBezierCurve3:Cn,SplineCurve:fn});function qn(){ye.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}qn.prototype=Object.assign(Object.create(ye.prototype),{constructor:qn,add:function(e){this.curves.push(e)},closePath:function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Ut(t,e))},getPoint:function(e){for(var t=e*this.getLength(),n=this.getCurveLengths(),r=0;r<n.length;){if(n[r]>=t){var i=n[r]-t,a=this.curves[r],o=a.getLength(),s=o===0?0:1-i/o;return a.getPointAt(s)}r++}return null},getLength:function(){var e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var e=[],t=0,n=0,r=this.curves.length;n<r;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e){e===void 0&&(e=40);for(var t=[],n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e){e=e||12;for(var t=[],n,r=0,i=this.curves;r<i.length;r++)for(var a=i[r],o=a&&a.isEllipseCurve?e*2:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?e*a.points.length:e,s=a.getPoints(o),l=0;l<s.length;l++){var c=s[l];n&&n.equals(c)||(t.push(c),n=c)}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t},copy:function(e){ye.prototype.copy.call(this,e),this.curves=[];for(var t=0,n=e.curves.length;t<n;t++){var r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this},toJSON:function(){var e=ye.prototype.toJSON.call(this);e.autoClose=this.autoClose,e.curves=[];for(var t=0,n=this.curves.length;t<n;t++){var r=this.curves[t];e.curves.push(r.toJSON())}return e},fromJSON:function(e){ye.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(var t=0,n=e.curves.length;t<n;t++){var r=e.curves[t];this.curves.push(new Ol[r.type]().fromJSON(r))}return this}});function dn(e){qn.call(this),this.type="Path",this.currentPoint=new j,e&&this.setFromPoints(e)}dn.prototype=Object.assign(Object.create(qn.prototype),{constructor:dn,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this},moveTo:function(e,t){return this.currentPoint.set(e,t),this},lineTo:function(e,t){var n=new Ut(this.currentPoint.clone(),new j(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this},quadraticCurveTo:function(e,t,n,r){var i=new hn(this.currentPoint.clone(),new j(e,t),new j(n,r));return this.curves.push(i),this.currentPoint.set(n,r),this},bezierCurveTo:function(e,t,n,r,i,a){var o=new cn(this.currentPoint.clone(),new j(e,t),new j(n,r),new j(i,a));return this.curves.push(o),this.currentPoint.set(i,a),this},splineThru:function(e){var t=[this.currentPoint.clone()].concat(e),n=new fn(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this},arc:function(e,t,n,r,i,a){var o=this.currentPoint.x,s=this.currentPoint.y;return this.absarc(e+o,t+s,n,r,i,a),this},absarc:function(e,t,n,r,i,a){return this.absellipse(e,t,n,n,r,i,a),this},ellipse:function(e,t,n,r,i,a,o,s){var l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(e+l,t+c,n,r,i,a,o,s),this},absellipse:function(e,t,n,r,i,a,o,s){var l=new qt(e,t,n,r,i,a,o,s);if(this.curves.length>0){var c=l.getPoint(0);c.equals(this.currentPoint)||this.lineTo(c.x,c.y)}this.curves.push(l);var u=l.getPoint(1);return this.currentPoint.copy(u),this},copy:function(e){return qn.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this},toJSON:function(){var e=qn.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e},fromJSON:function(e){return qn.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}});function vr(e){dn.call(this,e),this.uuid=Le.generateUUID(),this.type="Shape",this.holes=[]}vr.prototype=Object.assign(Object.create(dn.prototype),{constructor:vr,getPointsHoles:function(e){for(var t=[],n=0,r=this.holes.length;n<r;n++)t[n]=this.holes[n].getPoints(e);return t},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(e){dn.prototype.copy.call(this,e),this.holes=[];for(var t=0,n=e.holes.length;t<n;t++){var r=e.holes[t];this.holes.push(r.clone())}return this},toJSON:function(){var e=dn.prototype.toJSON.call(this);e.uuid=this.uuid,e.holes=[];for(var t=0,n=this.holes.length;t<n;t++){var r=this.holes[t];e.holes.push(r.toJSON())}return e},fromJSON:function(e){dn.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(var t=0,n=e.holes.length;t<n;t++){var r=e.holes[t];this.holes.push(new dn().fromJSON(r))}return this}});function et(e,t){ne.call(this),this.type="Light",this.color=new ie(e),this.intensity=t!==void 0?t:1,this.receiveShadow=void 0}et.prototype=Object.assign(Object.create(ne.prototype),{constructor:et,isLight:!0,copy:function(e){return ne.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){var t=ne.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}});function Il(e,t,n){et.call(this,e,n),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(ne.DefaultUp),this.updateMatrix(),this.groundColor=new ie(t)}Il.prototype=Object.assign(Object.create(et.prototype),{constructor:Il,isHemisphereLight:!0,copy:function(e){return et.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}});function Pn(e){this.camera=e,this.bias=0,this.radius=1,this.mapSize=new j(512,512),this.map=null,this.mapPass=null,this.matrix=new De,this._frustum=new ki,this._frameExtents=new j(1,1),this._viewportCount=1,this._viewports=[new Ye(0,0,1,1)]}Object.assign(Pn.prototype,{_projScreenMatrix:new De,_lightPositionWorld:new M,_lookTarget:new M,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(e){var t=this.camera,n=this.matrix,r=this._projScreenMatrix,i=this._lookTarget,a=this._lightPositionWorld;a.setFromMatrixPosition(e.matrixWorld),t.position.copy(a),i.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(i),t.updateMatrixWorld(),r.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(r),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)},getViewport:function(e){return this._viewports[e]},getFrameExtents:function(){return this._frameExtents},copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){var e={};return this.bias!==0&&(e.bias=this.bias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}});function Nl(){Pn.call(this,new ft(50,1,.5,500))}Nl.prototype=Object.assign(Object.create(Pn.prototype),{constructor:Nl,isSpotLightShadow:!0,updateMatrices:function(e){var t=this.camera,n=Le.RAD2DEG*2*e.angle,r=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;(n!==t.fov||r!==t.aspect||i!==t.far)&&(t.fov=n,t.aspect=r,t.far=i,t.updateProjectionMatrix()),Pn.prototype.updateMatrices.call(this,e)}});function zl(e,t,n,r,i,a){et.call(this,e,t),this.type="SpotLight",this.position.copy(ne.DefaultUp),this.updateMatrix(),this.target=new ne,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(o){this.intensity=o/Math.PI}}),this.distance=n!==void 0?n:0,this.angle=r!==void 0?r:Math.PI/3,this.penumbra=i!==void 0?i:0,this.decay=a!==void 0?a:1,this.shadow=new Nl}zl.prototype=Object.assign(Object.create(et.prototype),{constructor:zl,isSpotLight:!0,copy:function(e){return et.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}});function Fl(){Pn.call(this,new ft(90,1,.5,500)),this._frameExtents=new j(4,2),this._viewportCount=6,this._viewports=[new Ye(2,1,1,1),new Ye(0,1,1,1),new Ye(3,1,1,1),new Ye(1,1,1,1),new Ye(3,0,1,1),new Ye(1,0,1,1)],this._cubeDirections=[new M(1,0,0),new M(-1,0,0),new M(0,0,1),new M(0,0,-1),new M(0,1,0),new M(0,-1,0)],this._cubeUps=[new M(0,1,0),new M(0,1,0),new M(0,1,0),new M(0,1,0),new M(0,0,1),new M(0,0,-1)]}Fl.prototype=Object.assign(Object.create(Pn.prototype),{constructor:Fl,isPointLightShadow:!0,updateMatrices:function(e,t){t===void 0&&(t=0);var n=this.camera,r=this.matrix,i=this._lightPositionWorld,a=this._lookTarget,o=this._projScreenMatrix;i.setFromMatrixPosition(e.matrixWorld),n.position.copy(i),a.copy(n.position),a.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(a),n.updateMatrixWorld(),r.makeTranslation(-i.x,-i.y,-i.z),o.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o)}});function Bl(e,t,n,r){et.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(i){this.intensity=i/(4*Math.PI)}}),this.distance=n!==void 0?n:0,this.decay=r!==void 0?r:1,this.shadow=new Fl}Bl.prototype=Object.assign(Object.create(et.prototype),{constructor:Bl,isPointLight:!0,copy:function(e){return et.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}});function mr(e,t,n,r,i,a){sn.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e!==void 0?e:-1,this.right=t!==void 0?t:1,this.top=n!==void 0?n:1,this.bottom=r!==void 0?r:-1,this.near=i!==void 0?i:.1,this.far=a!==void 0?a:2e3,this.updateProjectionMatrix()}mr.prototype=Object.assign(Object.create(sn.prototype),{constructor:mr,isOrthographicCamera:!0,copy:function(e,t){return sn.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this},setViewOffset:function(e,t,n,r,i,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2,i=n-e,a=n+e,o=r+t,s=r-t;if(this.view!==null&&this.view.enabled){var l=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=l*this.view.offsetX,a=i+l*this.view.width,o-=c*this.view.offsetY,s=o-c*this.view.height}this.projectionMatrix.makeOrthographic(i,a,o,s,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){var t=ne.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}});function Ul(){Pn.call(this,new mr(-5,5,5,-5,.5,500))}Ul.prototype=Object.assign(Object.create(Pn.prototype),{constructor:Ul,isDirectionalLightShadow:!0,updateMatrices:function(e){Pn.prototype.updateMatrices.call(this,e)}});function Gl(e,t){et.call(this,e,t),this.type="DirectionalLight",this.position.copy(ne.DefaultUp),this.updateMatrix(),this.target=new ne,this.shadow=new Ul}Gl.prototype=Object.assign(Object.create(et.prototype),{constructor:Gl,isDirectionalLight:!0,copy:function(e){return et.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}});function Hl(e,t){et.call(this,e,t),this.type="AmbientLight",this.castShadow=void 0}Hl.prototype=Object.assign(Object.create(et.prototype),{constructor:Hl,isAmbientLight:!0});function Vl(e,t,n,r){et.call(this,e,t),this.type="RectAreaLight",this.width=n!==void 0?n:10,this.height=r!==void 0?r:10}Vl.prototype=Object.assign(Object.create(et.prototype),{constructor:Vl,isRectAreaLight:!0,copy:function(e){return et.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){var t=et.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}});function kl(e){Ve.call(this,e),this.textures={}}kl.prototype=Object.assign(Object.create(Ve.prototype),{constructor:kl,load:function(e,t,n,r){var i=this,a=new ln(i.manager);a.setPath(i.path),a.load(e,function(o){t(i.parse(JSON.parse(o)))},n,r)},parse:function(e){var t=this.textures;function n(l){return t[l]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",l),t[l]}var r=new Vy[e.type];if(e.uuid!==void 0&&(r.uuid=e.uuid),e.name!==void 0&&(r.name=e.name),e.color!==void 0&&r.color.setHex(e.color),e.roughness!==void 0&&(r.roughness=e.roughness),e.metalness!==void 0&&(r.metalness=e.metalness),e.sheen!==void 0&&(r.sheen=new ie().setHex(e.sheen)),e.emissive!==void 0&&r.emissive.setHex(e.emissive),e.specular!==void 0&&r.specular.setHex(e.specular),e.shininess!==void 0&&(r.shininess=e.shininess),e.clearcoat!==void 0&&(r.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(r.clearcoatRoughness=e.clearcoatRoughness),e.fog!==void 0&&(r.fog=e.fog),e.flatShading!==void 0&&(r.flatShading=e.flatShading),e.blending!==void 0&&(r.blending=e.blending),e.combine!==void 0&&(r.combine=e.combine),e.side!==void 0&&(r.side=e.side),e.opacity!==void 0&&(r.opacity=e.opacity),e.transparent!==void 0&&(r.transparent=e.transparent),e.alphaTest!==void 0&&(r.alphaTest=e.alphaTest),e.depthTest!==void 0&&(r.depthTest=e.depthTest),e.depthWrite!==void 0&&(r.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(r.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(r.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(r.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(r.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(r.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(r.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(r.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(r.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(r.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(r.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(r.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(r.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(r.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(r.rotation=e.rotation),e.linewidth!==1&&(r.linewidth=e.linewidth),e.dashSize!==void 0&&(r.dashSize=e.dashSize),e.gapSize!==void 0&&(r.gapSize=e.gapSize),e.scale!==void 0&&(r.scale=e.scale),e.polygonOffset!==void 0&&(r.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(r.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(r.polygonOffsetUnits=e.polygonOffsetUnits),e.skinning!==void 0&&(r.skinning=e.skinning),e.morphTargets!==void 0&&(r.morphTargets=e.morphTargets),e.morphNormals!==void 0&&(r.morphNormals=e.morphNormals),e.dithering!==void 0&&(r.dithering=e.dithering),e.vertexTangents!==void 0&&(r.vertexTangents=e.vertexTangents),e.visible!==void 0&&(r.visible=e.visible),e.toneMapped!==void 0&&(r.toneMapped=e.toneMapped),e.userData!==void 0&&(r.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?r.vertexColors=e.vertexColors>0:r.vertexColors=e.vertexColors),e.uniforms!==void 0)for(var i in e.uniforms){var a=e.uniforms[i];switch(r.uniforms[i]={},a.type){case"t":r.uniforms[i].value=n(a.value);break;case"c":r.uniforms[i].value=new ie().setHex(a.value);break;case"v2":r.uniforms[i].value=new j().fromArray(a.value);break;case"v3":r.uniforms[i].value=new M().fromArray(a.value);break;case"v4":r.uniforms[i].value=new Ye().fromArray(a.value);break;case"m3":r.uniforms[i].value=new Et().fromArray(a.value);case"m4":r.uniforms[i].value=new De().fromArray(a.value);break;default:r.uniforms[i].value=a.value}}if(e.defines!==void 0&&(r.defines=e.defines),e.vertexShader!==void 0&&(r.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(r.fragmentShader=e.fragmentShader),e.extensions!==void 0)for(var o in e.extensions)r.extensions[o]=e.extensions[o];if(e.shading!==void 0&&(r.flatShading=e.shading===1),e.size!==void 0&&(r.size=e.size),e.sizeAttenuation!==void 0&&(r.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(r.map=n(e.map)),e.matcap!==void 0&&(r.matcap=n(e.matcap)),e.alphaMap!==void 0&&(r.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(r.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(r.bumpScale=e.bumpScale),e.normalMap!==void 0&&(r.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(r.normalMapType=e.normalMapType),e.normalScale!==void 0){var s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),r.normalScale=new j().fromArray(s)}return e.displacementMap!==void 0&&(r.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(r.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(r.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(r.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(r.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(r.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(r.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(r.specularMap=n(e.specularMap)),e.envMap!==void 0&&(r.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(r.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(r.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(r.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(r.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(r.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(r.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(r.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(r.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(r.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(r.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(r.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(r.clearcoatNormalScale=new j().fromArray(e.clearcoatNormalScale)),r},setTextures:function(e){return this.textures=e,this}});var fh={decodeText:function(e){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(e);for(var t="",n=0,r=e.length;n<r;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}},extractUrlBase:function(e){var t=e.lastIndexOf("/");return t===-1?"./":e.substr(0,t+1)}};function Wl(){se.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}Wl.prototype=Object.assign(Object.create(se.prototype),{constructor:Wl,isInstancedBufferGeometry:!0,copy:function(e){return se.prototype.copy.call(this,e),this.maxInstancedCount=e.maxInstancedCount,this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){var e=se.prototype.toJSON.call(this);return e.maxInstancedCount=this.maxInstancedCount,e.isInstancedBufferGeometry=!0,e}});function jl(e,t,n,r){typeof n=="number"&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),_e.call(this,e,t,n),this.meshPerAttribute=r||1}jl.prototype=Object.assign(Object.create(_e.prototype),{constructor:jl,isInstancedBufferAttribute:!0,copy:function(e){return _e.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},toJSON:function(){var e=_e.prototype.toJSON.call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}});function ql(e){Ve.call(this,e)}ql.prototype=Object.assign(Object.create(Ve.prototype),{constructor:ql,load:function(e,t,n,r){var i=this,a=new ln(i.manager);a.setPath(i.path),a.load(e,function(o){t(i.parse(JSON.parse(o)))},n,r)},parse:function(e){var t=e.isInstancedBufferGeometry?new Wl:new se,n=e.data.index;if(n!==void 0){var r=new Xl[n.type](n.array);t.setIndex(new _e(r,1))}var i=e.data.attributes;for(var a in i){var o=i[a],r=new Xl[o.type](o.array),s=o.isInstancedBufferAttribute?jl:_e,l=new s(r,o.itemSize,o.normalized);o.name!==void 0&&(l.name=o.name),t.setAttribute(a,l)}var c=e.data.morphAttributes;if(c)for(var a in c){for(var u=c[a],h=[],f=0,d=u.length;f<d;f++){var o=u[f],r=new Xl[o.type](o.array),l=new _e(r,o.itemSize,o.normalized);o.name!==void 0&&(l.name=o.name),h.push(l)}t.morphAttributes[a]=h}var p=e.data.morphTargetsRelative;p&&(t.morphTargetsRelative=!0);var v=e.data.groups||e.data.drawcalls||e.data.offsets;if(v!==void 0)for(var f=0,m=v.length;f!==m;++f){var g=v[f];t.addGroup(g.start,g.count,g.materialIndex)}var x=e.data.boundingSphere;if(x!==void 0){var b=new M;x.center!==void 0&&b.fromArray(x.center),t.boundingSphere=new Bn(b,x.radius)}return e.name&&(t.name=e.name),e.userData&&(t.userData=e.userData),t}});var Xl={Int8Array,Uint8Array,Uint8ClampedArray:typeof Uint8ClampedArray!="undefined"?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Yl(e){Ve.call(this,e)}Yl.prototype=Object.assign(Object.create(Ve.prototype),{constructor:Yl,load:function(e,t,n,r){var i=this,a=this.path===""?fh.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;var o=new ln(i.manager);o.setPath(this.path),o.load(e,function(s){var l=null;try{l=JSON.parse(s)}catch(u){r!==void 0&&r(u),console.error("THREE:ObjectLoader: Can't parse "+e+".",u.message);return}var c=l.metadata;if(c===void 0||c.type===void 0||c.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e);return}i.parse(l,t)},n,r)},parse:function(e,t){var n=this.parseShape(e.shapes),r=this.parseGeometries(e.geometries,n),i=this.parseImages(e.images,function(){t!==void 0&&t(s)}),a=this.parseTextures(e.textures,i),o=this.parseMaterials(e.materials,a),s=this.parseObject(e.object,r,o);return e.animations&&(s.animations=this.parseAnimations(e.animations)),(e.images===void 0||e.images.length===0)&&t!==void 0&&t(s),s},parseShape:function(e){var t={};if(e!==void 0)for(var n=0,r=e.length;n<r;n++){var i=new vr().fromJSON(e[n]);t[i.uuid]=i}return t},parseGeometries:function(e,t){var n={};if(e!==void 0)for(var r=new ql,i=0,a=e.length;i<a;i++){var o,s=e[i];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":o=new At[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":o=new At[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":o=new At[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":o=new At[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":o=new At[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":o=new At[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":o=new At[s.type](s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":o=new At[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":o=new At[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":o=new At[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"TubeGeometry":case"TubeBufferGeometry":o=new At[s.type](new Ol[s.path.type]().fromJSON(s.path),s.tubularSegments,s.radius,s.radialSegments,s.closed);break;case"LatheGeometry":case"LatheBufferGeometry":o=new At[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":o=new At[s.type](s.vertices,s.indices,s.radius,s.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":for(var h=[],l=0,c=s.shapes.length;l<c;l++){var u=t[s.shapes[l]];h.push(u)}o=new At[s.type](h,s.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":for(var h=[],l=0,c=s.shapes.length;l<c;l++){var u=t[s.shapes[l]];h.push(u)}var f=s.options.extrudePath;f!==void 0&&(s.options.extrudePath=new Ol[f.type]().fromJSON(f)),o=new At[s.type](h,s.options);break;case"BufferGeometry":case"InstancedBufferGeometry":o=r.parse(s);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+s.type+'"');continue}o.uuid=s.uuid,s.name!==void 0&&(o.name=s.name),o.isBufferGeometry===!0&&s.userData!==void 0&&(o.userData=s.userData),n[s.uuid]=o}return n},parseMaterials:function(e,t){var n={},r={};if(e!==void 0){var i=new kl;i.setTextures(t);for(var a=0,o=e.length;a<o;a++){var s=e[a];if(s.type==="MultiMaterial"){for(var l=[],c=0;c<s.materials.length;c++){var u=s.materials[c];n[u.uuid]===void 0&&(n[u.uuid]=i.parse(u)),l.push(n[u.uuid])}r[s.uuid]=l}else n[s.uuid]===void 0&&(n[s.uuid]=i.parse(s)),r[s.uuid]=n[s.uuid]}}return r},parseAnimations:function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n],i=Qt.parse(r);r.uuid!==void 0&&(i.uuid=r.uuid),t.push(i)}return t},parseImages:function(e,t){var n=this,r={};function i(v){return n.manager.itemStart(v),o.load(v,function(){n.manager.itemEnd(v)},void 0,function(){n.manager.itemError(v),n.manager.itemEnd(v)})}if(e!==void 0&&e.length>0){var a=new sh(t),o=new ma(a);o.setCrossOrigin(this.crossOrigin);for(var s=0,l=e.length;s<l;s++){var c=e[s],u=c.url;if(Array.isArray(u)){r[c.uuid]=[];for(var h=0,f=u.length;h<f;h++){var d=u[h],p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(d)?d:n.resourcePath+d;r[c.uuid].push(i(p))}}else{var p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url)?c.url:n.resourcePath+c.url;r[c.uuid]=i(p)}}}return r},parseTextures:function(e,t){function n(l,c){return typeof l=="number"?l:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",l),c[l])}var r={};if(e!==void 0)for(var i=0,a=e.length;i<a;i++){var o=e[i];o.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),t[o.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",o.image);var s;Array.isArray(t[o.image])?s=new Gn(t[o.image]):s=new Xe(t[o.image]),s.needsUpdate=!0,s.uuid=o.uuid,o.name!==void 0&&(s.name=o.name),o.mapping!==void 0&&(s.mapping=n(o.mapping,Ky)),o.offset!==void 0&&s.offset.fromArray(o.offset),o.repeat!==void 0&&s.repeat.fromArray(o.repeat),o.center!==void 0&&s.center.fromArray(o.center),o.rotation!==void 0&&(s.rotation=o.rotation),o.wrap!==void 0&&(s.wrapS=n(o.wrap[0],dh),s.wrapT=n(o.wrap[1],dh)),o.format!==void 0&&(s.format=o.format),o.type!==void 0&&(s.type=o.type),o.encoding!==void 0&&(s.encoding=o.encoding),o.minFilter!==void 0&&(s.minFilter=n(o.minFilter,ph)),o.magFilter!==void 0&&(s.magFilter=n(o.magFilter,ph)),o.anisotropy!==void 0&&(s.anisotropy=o.anisotropy),o.flipY!==void 0&&(s.flipY=o.flipY),o.premultiplyAlpha!==void 0&&(s.premultiplyAlpha=o.premultiplyAlpha),o.unpackAlignment!==void 0&&(s.unpackAlignment=o.unpackAlignment),r[o.uuid]=s}return r},parseObject:function(e,t,n){var r;function i(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function a(m){if(m!==void 0){if(Array.isArray(m)){for(var g=[],x=0,b=m.length;x<b;x++){var S=m[x];n[S]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",S),g.push(n[S])}return g}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}switch(e.type){case"Scene":r=new xn,e.background!==void 0&&Number.isInteger(e.background)&&(r.background=new ie(e.background)),e.fog!==void 0&&(e.fog.type==="Fog"?r.fog=new ul(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(r.fog=new cl(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":r=new ft(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(r.focus=e.focus),e.zoom!==void 0&&(r.zoom=e.zoom),e.filmGauge!==void 0&&(r.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(r.filmOffset=e.filmOffset),e.view!==void 0&&(r.view=Object.assign({},e.view));break;case"OrthographicCamera":r=new mr(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(r.zoom=e.zoom),e.view!==void 0&&(r.view=Object.assign({},e.view));break;case"AmbientLight":r=new Hl(e.color,e.intensity);break;case"DirectionalLight":r=new Gl(e.color,e.intensity);break;case"PointLight":r=new Bl(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":r=new Vl(e.color,e.intensity,e.width,e.height);break;case"SpotLight":r=new zl(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":r=new Il(e.color,e.groundColor,e.intensity);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var o=i(e.geometry),s=a(e.material);r=new $e(o,s);break;case"InstancedMesh":var o=i(e.geometry),s=a(e.material),l=e.count,c=e.instanceMatrix;r=new vl(o,s,l),r.instanceMatrix=new _e(new Float32Array(c.array),16);break;case"LOD":r=new go;break;case"Line":r=new Wt(i(e.geometry),a(e.material),e.mode);break;case"LineLoop":r=new ml(i(e.geometry),a(e.material));break;case"LineSegments":r=new ut(i(e.geometry),a(e.material));break;case"PointCloud":case"Points":r=new So(i(e.geometry),a(e.material));break;case"Sprite":r=new fl(a(e.material));break;case"Group":r=new Yi;break;default:r=new ne}if(r.uuid=e.uuid,e.name!==void 0&&(r.name=e.name),e.matrix!==void 0?(r.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(r.matrixAutoUpdate=e.matrixAutoUpdate),r.matrixAutoUpdate&&r.matrix.decompose(r.position,r.quaternion,r.scale)):(e.position!==void 0&&r.position.fromArray(e.position),e.rotation!==void 0&&r.rotation.fromArray(e.rotation),e.quaternion!==void 0&&r.quaternion.fromArray(e.quaternion),e.scale!==void 0&&r.scale.fromArray(e.scale)),e.castShadow!==void 0&&(r.castShadow=e.castShadow),e.receiveShadow!==void 0&&(r.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(r.shadow.bias=e.shadow.bias),e.shadow.radius!==void 0&&(r.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&r.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(r.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(r.visible=e.visible),e.frustumCulled!==void 0&&(r.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(r.renderOrder=e.renderOrder),e.userData!==void 0&&(r.userData=e.userData),e.layers!==void 0&&(r.layers.mask=e.layers),e.children!==void 0)for(var u=e.children,h=0;h<u.length;h++)r.add(this.parseObject(u[h],t,n));if(e.type==="LOD"){e.autoUpdate!==void 0&&(r.autoUpdate=e.autoUpdate);for(var f=e.levels,d=0;d<f.length;d++){var p=f[d],v=r.getObjectByProperty("uuid",p.object);v!==void 0&&r.addLevel(v,p.distance)}}return r}});var Ky={UVMapping:bs,CubeReflectionMapping:Ms,CubeRefractionMapping:Ss,EquirectangularReflectionMapping:Bc,EquirectangularRefractionMapping:Ts,SphericalReflectionMapping:Uc,CubeUVReflectionMapping:Ci,CubeUVRefractionMapping:Es},dh={RepeatWrapping:Fa,ClampToEdgeWrapping:yt,MirroredRepeatWrapping:Ba},ph={NearestFilter:tt,NearestMipmapNearestFilter:As,NearestMipmapLinearFilter:Ls,LinearFilter:nt,LinearMipmapNearestFilter:Gc,LinearMipmapLinearFilter:Ua};function vh(e){typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Ve.call(this,e),this.options=void 0}vh.prototype=Object.assign(Object.create(Ve.prototype),{constructor:vh,setOptions:function(t){return this.options=t,this},load:function(e,t,n,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);var i=this,a=xi.get(e);if(a!==void 0)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0),a;fetch(e).then(function(o){return o.blob()}).then(function(o){return i.options===void 0?createImageBitmap(o):createImageBitmap(o,i.options)}).then(function(o){xi.add(e,o),t&&t(o),i.manager.itemEnd(e)}).catch(function(o){r&&r(o),i.manager.itemError(e),i.manager.itemEnd(e)}),i.manager.itemStart(e)}});function mh(){this.type="ShapePath",this.color=new ie,this.subPaths=[],this.currentPath=null}Object.assign(mh.prototype,{moveTo:function(e,t){return this.currentPath=new dn,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this},lineTo:function(e,t){return this.currentPath.lineTo(e,t),this},quadraticCurveTo:function(e,t,n,r){return this.currentPath.quadraticCurveTo(e,t,n,r),this},bezierCurveTo:function(e,t,n,r,i,a){return this.currentPath.bezierCurveTo(e,t,n,r,i,a),this},splineThru:function(e){return this.currentPath.splineThru(e),this},toShapes:function(e,t){function n(R){for(var G=[],k=0,q=R.length;k<q;k++){var H=R[k],V=new vr;V.curves=H.curves,G.push(V)}return G}function r(R,G){for(var k=G.length,q=!1,H=k-1,V=0;V<k;H=V++){var W=G[H],le=G[V],Oe=le.x-W.x,Re=le.y-W.y;if(Math.abs(Re)>Number.EPSILON){if(Re<0&&(W=G[V],Oe=-Oe,le=G[H],Re=-Re),R.y<W.y||R.y>le.y)continue;if(R.y===W.y){if(R.x===W.x)return!0}else{var Se=Re*(R.x-W.x)-Oe*(R.y-W.y);if(Se===0)return!0;if(Se<0)continue;q=!q}}else{if(R.y!==W.y)continue;if(le.x<=R.x&&R.x<=W.x||W.x<=R.x&&R.x<=le.x)return!0}}return q}var i=kn.isClockWise,a=this.subPaths;if(a.length===0)return[];if(t===!0)return n(a);var o,s,l,c=[];if(a.length===1)return s=a[0],l=new vr,l.curves=s.curves,c.push(l),c;var u=!i(a[0].getPoints());u=e?!u:u;var h=[],f=[],d=[],p=0,v;f[p]=void 0,d[p]=[];for(var m=0,g=a.length;m<g;m++)s=a[m],v=s.getPoints(),o=i(v),o=e?!o:o,o?(!u&&f[p]&&p++,f[p]={s:new vr,p:v},f[p].s.curves=s.curves,u&&p++,d[p]=[]):d[p].push({h:s,p:v[0]});if(!f[0])return n(a);if(f.length>1){for(var x=!1,b=[],S=0,w=f.length;S<w;S++)h[S]=[];for(var S=0,w=f.length;S<w;S++)for(var T=d[S],L=0;L<T.length;L++){for(var I=T[L],C=!0,z=0;z<f.length;z++)r(I.p,f[z].p)&&(S!==z&&b.push({froms:S,tos:z,hole:L}),C?(C=!1,h[z].push(I)):x=!0);C&&h[S].push(I)}b.length>0&&(x||(d=h))}for(var N,m=0,B=f.length;m<B;m++){l=f[m].s,c.push(l),N=d[m];for(var U=0,F=N.length;U<F;U++)l.holes.push(N[U].h)}return c}});function gh(e){this.type="Font",this.data=e}Object.assign(gh.prototype,{isFont:!0,generateShapes:function(e,t){t===void 0&&(t=100);for(var n=[],r=e0(e,t,this.data),i=0,a=r.length;i<a;i++)Array.prototype.push.apply(n,r[i].toShapes());return n}});function e0(e,t,n){for(var r=Array.from?Array.from(e):String(e).split(""),i=t/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*i,o=[],s=0,l=0,c=0;c<r.length;c++){var u=r[c];if(u===`
`)s=0,l-=a;else{var h=t0(u,i,s,l,n);s+=h.offsetX,o.push(h.path)}}return o}function t0(e,t,n,r,i){var a=i.glyphs[e]||i.glyphs["?"];if(!a){console.error('THREE.Font: character "'+e+'" does not exists in font family '+i.familyName+".");return}var o=new mh,s,l,c,u,h,f,d,p;if(a.o)for(var v=a._cachedOutline||(a._cachedOutline=a.o.split(" ")),m=0,g=v.length;m<g;){var x=v[m++];switch(x){case"m":s=v[m++]*t+n,l=v[m++]*t+r,o.moveTo(s,l);break;case"l":s=v[m++]*t+n,l=v[m++]*t+r,o.lineTo(s,l);break;case"q":c=v[m++]*t+n,u=v[m++]*t+r,h=v[m++]*t+n,f=v[m++]*t+r,o.quadraticCurveTo(h,f,c,u);break;case"b":c=v[m++]*t+n,u=v[m++]*t+r,h=v[m++]*t+n,f=v[m++]*t+r,d=v[m++]*t+n,p=v[m++]*t+r,o.bezierCurveTo(h,f,d,p,c,u);break}}return{offsetX:a.ha*t,path:o}}function yh(e){Ve.call(this,e)}yh.prototype=Object.assign(Object.create(Ve.prototype),{constructor:yh,load:function(e,t,n,r){var i=this,a=new ln(this.manager);a.setPath(this.path),a.load(e,function(o){var s;try{s=JSON.parse(o)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),s=JSON.parse(o.substring(65,o.length-2))}var l=i.parse(s);t&&t(l)},n,r)},parse:function(e){return new gh(e)}});var Yo,xh={getContext:function(){return Yo===void 0&&(Yo=new(window.AudioContext||window.webkitAudioContext)),Yo},setContext:function(e){Yo=e}};function Zl(e){Ve.call(this,e)}Zl.prototype=Object.assign(Object.create(Ve.prototype),{constructor:Zl,load:function(e,t,n,r){var i=new ln(this.manager);i.setResponseType("arraybuffer"),i.setPath(this.path),i.load(e,function(a){var o=a.slice(0),s=xh.getContext();s.decodeAudioData(o,function(l){t(l)})},n,r)}});function Jl(){this.coefficients=[];for(var e=0;e<9;e++)this.coefficients.push(new M)}Object.assign(Jl.prototype,{isSphericalHarmonics3:!0,set:function(e){for(var t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this},zero:function(){for(var e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this},getAt:function(e,t){var n=e.x,r=e.y,i=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*r),t.addScaledVector(a[2],.488603*i),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*r)),t.addScaledVector(a[5],1.092548*(r*i)),t.addScaledVector(a[6],.315392*(3*i*i-1)),t.addScaledVector(a[7],1.092548*(n*i)),t.addScaledVector(a[8],.546274*(n*n-r*r)),t},getIrradianceAt:function(e,t){var n=e.x,r=e.y,i=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*r),t.addScaledVector(a[2],2*.511664*i),t.addScaledVector(a[3],2*.511664*n),t.addScaledVector(a[4],2*.429043*n*r),t.addScaledVector(a[5],2*.429043*r*i),t.addScaledVector(a[6],.743125*i*i-.247708),t.addScaledVector(a[7],2*.429043*n*i),t.addScaledVector(a[8],.429043*(n*n-r*r)),t},add:function(e){for(var t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this},addScaledSH:function(e,t){for(var n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this},scale:function(e){for(var t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this},lerp:function(e,t){for(var n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this},equals:function(e){for(var t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0},copy:function(e){return this.set(e.coefficients)},clone:function(){return new this.constructor().copy(this)},fromArray:function(e,t){t===void 0&&(t=0);for(var n=this.coefficients,r=0;r<9;r++)n[r].fromArray(e,t+r*3);return this},toArray:function(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);for(var n=this.coefficients,r=0;r<9;r++)n[r].toArray(e,t+r*3);return e}}),Object.assign(Jl,{getBasisAt:function(e,t){var n=e.x,r=e.y,i=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*i,t[3]=.488603*n,t[4]=1.092548*n*r,t[5]=1.092548*r*i,t[6]=.315392*(3*i*i-1),t[7]=1.092548*n*i,t[8]=.546274*(n*n-r*r)}});function pn(e,t){et.call(this,void 0,t),this.sh=e!==void 0?e:new Jl}pn.prototype=Object.assign(Object.create(et.prototype),{constructor:pn,isLightProbe:!0,copy:function(e){return et.prototype.copy.call(this,e),this.sh.copy(e.sh),this.intensity=e.intensity,this},toJSON:function(e){var t=et.prototype.toJSON.call(this,e);return t}});function _h(e,t,n){pn.call(this,void 0,n);var r=new ie().set(e),i=new ie().set(t),a=new M(r.r,r.g,r.b),o=new M(i.r,i.g,i.b),s=Math.sqrt(Math.PI),l=s*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(o).multiplyScalar(s),this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(l)}_h.prototype=Object.assign(Object.create(pn.prototype),{constructor:_h,isHemisphereLightProbe:!0,copy:function(e){return pn.prototype.copy.call(this,e),this},toJSON:function(e){var t=pn.prototype.toJSON.call(this,e);return t}});function wh(e,t){pn.call(this,void 0,t);var n=new ie().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}wh.prototype=Object.assign(Object.create(pn.prototype),{constructor:wh,isAmbientLightProbe:!0,copy:function(e){return pn.prototype.copy.call(this,e),this},toJSON:function(e){var t=pn.prototype.toJSON.call(this,e);return t}});var bh=new De,Mh=new De;function n0(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new ft,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new ft,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(n0.prototype,{update:function(e){var t=this._cache,n=t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep;if(n){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;var r=e.projectionMatrix.clone(),i=t.eyeSep/2,a=i*t.near/t.focus,o=t.near*Math.tan(Le.DEG2RAD*t.fov*.5)/t.zoom,s,l;Mh.elements[12]=-i,bh.elements[12]=i,s=-o*t.aspect+a,l=o*t.aspect+a,r.elements[0]=2*t.near/(l-s),r.elements[8]=(l+s)/(l-s),this.cameraL.projectionMatrix.copy(r),s=-o*t.aspect-a,l=o*t.aspect-a,r.elements[0]=2*t.near/(l-s),r.elements[8]=(l+s)/(l-s),this.cameraR.projectionMatrix.copy(r)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Mh),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(bh)}});function $l(e){this.autoStart=e!==void 0?e:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}Object.assign($l.prototype,{start:function(){this.startTime=(typeof performance=="undefined"?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var t=(typeof performance=="undefined"?Date:performance).now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}});var gr=new M,Sh=new xt,r0=new M,yr=new M;function Th(){ne.call(this),this.type="AudioListener",this.context=xh.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new $l}Th.prototype=Object.assign(Object.create(ne.prototype),{constructor:Th,getInput:function(){return this.gain},removeFilter:function(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function(){return this.filter},setFilter:function(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this},updateMatrixWorld:function(e){ne.prototype.updateMatrixWorld.call(this,e);var t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(gr,Sh,r0),yr.set(0,0,-1).applyQuaternion(Sh),t.positionX){var r=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(gr.x,r),t.positionY.linearRampToValueAtTime(gr.y,r),t.positionZ.linearRampToValueAtTime(gr.z,r),t.forwardX.linearRampToValueAtTime(yr.x,r),t.forwardY.linearRampToValueAtTime(yr.y,r),t.forwardZ.linearRampToValueAtTime(yr.z,r),t.upX.linearRampToValueAtTime(n.x,r),t.upY.linearRampToValueAtTime(n.y,r),t.upZ.linearRampToValueAtTime(n.z,r)}else t.setPosition(gr.x,gr.y,gr.z),t.setOrientation(yr.x,yr.y,yr.z,n.x,n.y,n.z)}});function _a(e){ne.call(this),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this._startedAt=0,this._pausedAt=0,this.filters=[]}_a.prototype=Object.assign(Object.create(ne.prototype),{constructor:_a,getOutput:function(){return this.gain},setNodeSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this},setMediaElementSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this},setMediaStreamSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this},setBuffer:function(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(e){if(e===void 0&&(e=0),this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;var t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._pausedAt+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()},pause:function(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._pausedAt+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.source.stop(),this.source.onended=null,this.isPlaying=!1),this},stop:function(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._pausedAt=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(e){return e||(e=[]),this.isPlaying===!0?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this},setDetune:function(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this},getDetune:function(){return this.detune},getFilter:function(){return this.getFilters()[0]},setFilter:function(e){return this.setFilters(e?[e]:[])},setPlaybackRate:function(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this},setLoopStart:function(e){return this.loopStart=e,this},setLoopEnd:function(e){return this.loopEnd=e,this},getVolume:function(){return this.gain.gain.value},setVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}});var xr=new M,Eh=new xt,i0=new M,_r=new M;function Ah(e){_a.call(this,e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}Ah.prototype=Object.assign(Object.create(_a.prototype),{constructor:Ah,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(e){return this.panner.refDistance=e,this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(e){return this.panner.rolloffFactor=e,this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(e){return this.panner.distanceModel=e,this},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(e){return this.panner.maxDistance=e,this},setDirectionalCone:function(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this},updateMatrixWorld:function(e){if(ne.prototype.updateMatrixWorld.call(this,e),!(this.hasPlaybackControl===!0&&this.isPlaying===!1)){this.matrixWorld.decompose(xr,Eh,i0),_r.set(0,0,1).applyQuaternion(Eh);var t=this.panner;if(t.positionX){var n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(xr.x,n),t.positionY.linearRampToValueAtTime(xr.y,n),t.positionZ.linearRampToValueAtTime(xr.z,n),t.orientationX.linearRampToValueAtTime(_r.x,n),t.orientationY.linearRampToValueAtTime(_r.y,n),t.orientationZ.linearRampToValueAtTime(_r.z,n)}else t.setPosition(xr.x,xr.y,xr.z),t.setOrientation(_r.x,_r.y,_r.z)}}});function Lh(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t!==void 0?t:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}Object.assign(Lh.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var e=0,t=this.getFrequencyData(),n=0;n<t.length;n++)e+=t[n];return e/t.length}});function Ch(e,t,n){this.binding=e,this.valueSize=n;var r=Float64Array,i;switch(t){case"quaternion":i=this._slerp;break;case"string":case"bool":r=Array,i=this._select;break;default:i=this._lerp}this.buffer=new r(n*4),this._mixBufferRegion=i,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}Object.assign(Ch.prototype,{accumulate:function(e,t){var n=this.buffer,r=this.valueSize,i=e*r+r,a=this.cumulativeWeight;if(a===0){for(var o=0;o!==r;++o)n[i+o]=n[o];a=t}else{a+=t;var s=t/a;this._mixBufferRegion(n,i,0,s,r)}this.cumulativeWeight=a},apply:function(e){var t=this.valueSize,n=this.buffer,r=e*t+t,i=this.cumulativeWeight,a=this.binding;if(this.cumulativeWeight=0,i<1){var o=t*3;this._mixBufferRegion(n,r,o,1-i,t)}for(var s=t,l=t+t;s!==l;++s)if(n[s]!==n[s+t]){a.setValue(n,r);break}},saveOriginalState:function(){var e=this.binding,t=this.buffer,n=this.valueSize,r=n*3;e.getValue(t,r);for(var i=n,a=r;i!==a;++i)t[i]=t[r+i%n];this.cumulativeWeight=0},restoreOriginalState:function(){var e=this.valueSize*3;this.binding.setValue(this.buffer,e)},_select:function(e,t,n,r,i){if(r>=.5)for(var a=0;a!==i;++a)e[t+a]=e[n+a]},_slerp:function(e,t,n,r){xt.slerpFlat(e,t,e,t,e,n,r)},_lerp:function(e,t,n,r,i){for(var a=1-r,o=0;o!==i;++o){var s=t+o;e[s]=e[s]*a+e[n+o]*r}}});var Ql="\\[\\]\\.:\\/",a0=new RegExp("["+Ql+"]","g"),Kl="[^"+Ql+"]",o0="[^"+Ql.replace("\\.","")+"]",s0=/((?:WC+[\/:])*)/.source.replace("WC",Kl),l0=/(WCOD+)?/.source.replace("WCOD",o0),c0=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Kl),u0=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Kl),h0=new RegExp("^"+s0+l0+c0+u0+"$"),f0=["material","materials","bones"];function Ph(e,t,n){var r=n||Lt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}Object.assign(Ph.prototype,{getValue:function(e,t){this.bind();var n=this._targetGroup.nCachedObjects_,r=this._bindings[n];r!==void 0&&r.getValue(e,t)},setValue:function(e,t){for(var n=this._bindings,r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(e,t)},bind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()},unbind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}});function Lt(e,t,n){this.path=t,this.parsedPath=n||Lt.parseTrackName(t),this.node=Lt.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}Object.assign(Lt,{Composite:Ph,create:function(e,t,n){return e&&e.isAnimationObjectGroup?new Lt.Composite(e,t,n):new Lt(e,t,n)},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(a0,"")},parseTrackName:function(e){var t=h0.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);var n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(r!==void 0&&r!==-1){var i=n.nodeName.substring(r+1);f0.indexOf(i)!==-1&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=i)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n},findNode:function(e,t){if(!t||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){var n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){var r=function(a){for(var o=0;o<a.length;o++){var s=a[o];if(s.name===t||s.uuid===t)return s;var l=r(s.children);if(l)return l}return null},i=r(e.children);if(i)return i}return null}}),Object.assign(Lt.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,n){t[n]=this.node[this.propertyName]},function(t,n){for(var r=this.resolvedProperty,i=0,a=r.length;i!==a;++i)t[n++]=r[i]},function(t,n){t[n]=this.resolvedProperty[this.propertyIndex]},function(t,n){this.resolvedProperty.toArray(t,n)}],SetterByBindingTypeAndVersioning:[[function(t,n){this.targetObject[this.propertyName]=t[n]},function(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.needsUpdate=!0},function(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){for(var r=this.resolvedProperty,i=0,a=r.length;i!==a;++i)r[i]=t[n++]},function(t,n){for(var r=this.resolvedProperty,i=0,a=r.length;i!==a;++i)r[i]=t[n++];this.targetObject.needsUpdate=!0},function(t,n){for(var r=this.resolvedProperty,i=0,a=r.length;i!==a;++i)r[i]=t[n++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){this.resolvedProperty[this.propertyIndex]=t[n]},function(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.needsUpdate=!0},function(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){this.resolvedProperty.fromArray(t,n)},function(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.needsUpdate=!0},function(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,n){this.bind(),this.getValue(t,n)},setValue:function(t,n){this.bind(),this.setValue(t,n)},bind:function(){var e=this.node,t=this.parsedPath,n=t.objectName,r=t.propertyName,i=t.propertyIndex;if(e||(e=Lt.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){var a=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(var o=0;o<e.length;o++)if(e[o].name===a){a=o;break}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(a!==void 0){if(e[a]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[a]}}var s=e[r];if(s===void 0){var l=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+r+" but it wasn't found.",e);return}var c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);var u=this.BindingType.Direct;if(i!==void 0){if(r==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}for(var o=0;o<this.node.geometry.morphAttributes.position.length;o++)if(e.geometry.morphAttributes.position[o].name===i){i=o;break}}else{if(!e.geometry.morphTargets){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);return}for(var o=0;o<this.node.geometry.morphTargets.length;o++)if(e.geometry.morphTargets[o].name===i){i=o;break}}}u=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=i}else s.fromArray!==void 0&&s.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(u=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(Lt.prototype,{_getValue_unbound:Lt.prototype.getValue,_setValue_unbound:Lt.prototype.setValue});function d0(){this.uuid=Le.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var e={};this._indicesByUUID=e;for(var t=0,n=arguments.length;t!==n;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var r=this;this.stats={objects:{get total(){return r._objects.length},get inUse(){return this.total-r.nCachedObjects_}},get bindingsPerObject(){return r._bindings.length}}}Object.assign(d0.prototype,{isAnimationObjectGroup:!0,add:function(){for(var e=this._objects,t=e.length,n=this.nCachedObjects_,r=this._indicesByUUID,i=this._paths,a=this._parsedPaths,o=this._bindings,s=o.length,l=void 0,c=0,u=arguments.length;c!==u;++c){var h=arguments[c],f=h.uuid,d=r[f];if(d===void 0){d=t++,r[f]=d,e.push(h);for(var p=0,v=s;p!==v;++p)o[p].push(new Lt(h,i[p],a[p]))}else if(d<n){l=e[d];var m=--n,g=e[m];r[g.uuid]=d,e[d]=g,r[f]=m,e[m]=h;for(var p=0,v=s;p!==v;++p){var x=o[p],b=x[m],S=x[d];x[d]=b,S===void 0&&(S=new Lt(h,i[p],a[p])),x[m]=S}}else e[d]!==l&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=n},remove:function(){for(var e=this._objects,t=this.nCachedObjects_,n=this._indicesByUUID,r=this._bindings,i=r.length,a=0,o=arguments.length;a!==o;++a){var s=arguments[a],l=s.uuid,c=n[l];if(c!==void 0&&c>=t){var u=t++,h=e[u];n[h.uuid]=c,e[c]=h,n[l]=u,e[u]=s;for(var f=0,d=i;f!==d;++f){var p=r[f],v=p[u],m=p[c];p[c]=v,p[u]=m}}}this.nCachedObjects_=t},uncache:function(){for(var e=this._objects,t=e.length,n=this.nCachedObjects_,r=this._indicesByUUID,i=this._bindings,a=i.length,o=0,s=arguments.length;o!==s;++o){var l=arguments[o],c=l.uuid,u=r[c];if(u!==void 0)if(delete r[c],u<n){var h=--n,f=e[h],d=--t,p=e[d];r[f.uuid]=u,e[u]=f,r[p.uuid]=h,e[h]=p,e.pop();for(var v=0,m=a;v!==m;++v){var g=i[v],x=g[h],b=g[d];g[u]=x,g[h]=b,g.pop()}}else{var d=--t,p=e[d];r[p.uuid]=u,e[u]=p,e.pop();for(var v=0,m=a;v!==m;++v){var g=i[v];g[u]=g[d],g.pop()}}}this.nCachedObjects_=n},subscribe_:function(e,t){var n=this._bindingsIndicesByPath,r=n[e],i=this._bindings;if(r!==void 0)return i[r];var a=this._paths,o=this._parsedPaths,s=this._objects,l=s.length,c=this.nCachedObjects_,u=new Array(l);r=i.length,n[e]=r,a.push(e),o.push(t),i.push(u);for(var h=c,f=s.length;h!==f;++h){var d=s[h];u[h]=new Lt(d,e,t)}return u},unsubscribe_:function(e){var t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){var r=this._paths,i=this._parsedPaths,a=this._bindings,o=a.length-1,s=a[o],l=e[o];t[l]=n,a[n]=s,a.pop(),i[n]=i[o],i.pop(),r[n]=r[o],r.pop()}}});function Rh(e,t,n){this._mixer=e,this._clip=t,this._localRoot=n||null;for(var r=t.tracks,i=r.length,a=new Array(i),o={endingStart:Pr,endingEnd:Pr},s=0;s!==i;++s){var l=r[s].createInterpolant(null);a[s]=l,l.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(i),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=lp,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}Object.assign(Rh.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(e){return this._startTime=e,this},setLoop:function(e,t){return this.loop=e,this.repetitions=t,this},setEffectiveWeight:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(e){return this._scheduleFading(e,0,1)},fadeOut:function(e){return this._scheduleFading(e,1,0)},crossFadeFrom:function(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){var r=this._clip.duration,i=e._clip.duration,a=i/r,o=r/i;e.warp(1,a,t),this.warp(o,1,t)}return this},crossFadeTo:function(e,t,n){return e.crossFadeFrom(this,t,n)},stopFading:function(){var e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},setEffectiveTimeScale:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()},syncWith:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()},halt:function(e){return this.warp(this._effectiveTimeScale,0,e)},warp:function(e,t,n){var r=this._mixer,i=r.time,a=this._timeScaleInterpolant,o=this.timeScale;a===null&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);var s=a.parameterPositions,l=a.sampleValues;return s[0]=i,s[1]=i+n,l[0]=e/o,l[1]=t/o,this},stopWarping:function(){var e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(e,t,n,r){if(!this.enabled){this._updateWeight(e);return}var i=this._startTime;if(i!==null){var a=(e-i)*n;if(a<0||n===0)return;this._startTime=null,t=n*a}t*=this._updateTimeScale(e);var o=this._updateTime(t),s=this._updateWeight(e);if(s>0)for(var l=this._interpolants,c=this._propertyBindings,u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulate(r,s)},_updateWeight:function(e){var t=0;if(this.enabled){t=this.weight;var n=this._weightInterpolant;if(n!==null){var r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t},_updateTimeScale:function(e){var t=0;if(!this.paused){t=this.timeScale;var n=this._timeScaleInterpolant;if(n!==null){var r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t},_updateTime:function(e){var t=this.time+e,n=this._clip.duration,r=this.loop,i=this._loopCount,a=r===cp;if(e===0)return i===-1?t:a&&(i&1)===1?n-t:t;if(r===sp){i===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(t>=n)t=n;else if(t<0)t=0;else{this.time=t;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=t,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(i===-1&&(e>=0?(i=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),t>=n||t<0){var o=Math.floor(t/n);t-=n*o,i+=Math.abs(o);var s=this.repetitions-i;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,t=e>0?n:0,this.time=t,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(s===1){var l=e<0;this._setEndings(l,!l,a)}else this._setEndings(!1,!1,a);this._loopCount=i,this.time=t,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=t;if(a&&(i&1)===1)return n-t}return t},_setEndings:function(e,t,n){var r=this._interpolantSettings;n?(r.endingStart=Rr,r.endingEnd=Rr):(e?r.endingStart=this.zeroSlopeAtStart?Rr:Pr:r.endingStart=ja,t?r.endingEnd=this.zeroSlopeAtEnd?Rr:Pr:r.endingEnd=ja)},_scheduleFading:function(e,t,n){var r=this._mixer,i=r.time,a=this._weightInterpolant;a===null&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);var o=a.parameterPositions,s=a.sampleValues;return o[0]=i,s[0]=t,o[1]=i+e,s[1]=n,this}});function Dh(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}Dh.prototype=Object.assign(Object.create(Yt.prototype),{constructor:Dh,_bindAction:function(e,t){var n=e._localRoot||this._root,r=e._clip.tracks,i=r.length,a=e._propertyBindings,o=e._interpolants,s=n.uuid,l=this._bindingsByRootAndName,c=l[s];c===void 0&&(c={},l[s]=c);for(var u=0;u!==i;++u){var h=r[u],f=h.name,d=c[f];if(d!==void 0)a[u]=d;else{if(d=a[u],d!==void 0){d._cacheIndex===null&&(++d.referenceCount,this._addInactiveBinding(d,s,f));continue}var p=t&&t._propertyBindings[u].binding.parsedPath;d=new Ch(Lt.create(n,f,p),h.ValueTypeName,h.getValueSize()),++d.referenceCount,this._addInactiveBinding(d,s,f),a[u]=d}o[u].resultBuffer=d.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){var t=(e._localRoot||this._root).uuid,n=e._clip.uuid,r=this._actionsByClip[n];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,n,t)}for(var i=e._propertyBindings,a=0,o=i.length;a!==o;++a){var s=i[a];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){for(var t=e._propertyBindings,n=0,r=t.length;n!==r;++n){var i=t[n];--i.useCount===0&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){var t=e._cacheIndex;return t!==null&&t<this._nActiveActions},_addInactiveAction:function(e,t,n){var r=this._actions,i=this._actionsByClip,a=i[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=a;else{var o=a.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=r.length,r.push(e),a.actionByRoot[n]=e},_removeInactiveAction:function(e){var t=this._actions,n=t[t.length-1],r=e._cacheIndex;n._cacheIndex=r,t[r]=n,t.pop(),e._cacheIndex=null;var i=e._clip.uuid,a=this._actionsByClip,o=a[i],s=o.knownActions,l=s[s.length-1],c=e._byClipCacheIndex;l._byClipCacheIndex=c,s[c]=l,s.pop(),e._byClipCacheIndex=null;var u=o.actionByRoot,h=(e._localRoot||this._root).uuid;delete u[h],s.length===0&&delete a[i],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){for(var t=e._propertyBindings,n=0,r=t.length;n!==r;++n){var i=t[n];--i.referenceCount===0&&this._removeInactiveBinding(i)}},_lendAction:function(e){var t=this._actions,n=e._cacheIndex,r=this._nActiveActions++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_takeBackAction:function(e){var t=this._actions,n=e._cacheIndex,r=--this._nActiveActions,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_addInactiveBinding:function(e,t,n){var r=this._bindingsByRootAndName,i=r[t],a=this._bindings;i===void 0&&(i={},r[t]=i),i[n]=e,e._cacheIndex=a.length,a.push(e)},_removeInactiveBinding:function(e){var t=this._bindings,n=e.binding,r=n.rootNode.uuid,i=n.path,a=this._bindingsByRootAndName,o=a[r],s=t[t.length-1],l=e._cacheIndex;s._cacheIndex=l,t[l]=s,t.pop(),delete o[i],Object.keys(o).length===0&&delete a[r]},_lendBinding:function(e){var t=this._bindings,n=e._cacheIndex,r=this._nActiveBindings++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_takeBackBinding:function(e){var t=this._bindings,n=e._cacheIndex,r=--this._nActiveBindings,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_lendControlInterpolant:function(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++,n=e[t];return n===void 0&&(n=new jo(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n},_takeBackControlInterpolant:function(e){var t=this._controlInterpolants,n=e.__cacheIndex,r=--this._nActiveControlInterpolants,i=t[r];e.__cacheIndex=r,t[r]=e,i.__cacheIndex=n,t[n]=i},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t){var n=t||this._root,r=n.uuid,i=typeof e=="string"?Qt.findByName(n,e):e,a=i!==null?i.uuid:e,o=this._actionsByClip[a],s=null;if(o!==void 0){var l=o.actionByRoot[r];if(l!==void 0)return l;s=o.knownActions[0],i===null&&(i=s._clip)}if(i===null)return null;var c=new Rh(this,i,t);return this._bindAction(c,s),this._addInactiveAction(c,a,r),c},existingAction:function(e,t){var n=t||this._root,r=n.uuid,i=typeof e=="string"?Qt.findByName(n,e):e,a=i?i.uuid:e,o=this._actionsByClip[a];return o!==void 0&&o.actionByRoot[r]||null},stopAllAction:function(){var e=this._actions,t=this._nActiveActions,n=this._bindings,r=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var i=0;i!==t;++i)e[i].reset();for(var i=0;i!==r;++i)n[i].useCount=0;return this},update:function(e){e*=this.timeScale;for(var t=this._actions,n=this._nActiveActions,r=this.time+=e,i=Math.sign(e),a=this._accuIndex^=1,o=0;o!==n;++o){var s=t[o];s._update(r,e,i,a)}for(var l=this._bindings,c=this._nActiveBindings,o=0;o!==c;++o)l[o].apply(a);return this},setTime:function(e){this.time=0;for(var t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)},getRoot:function(){return this._root},uncacheClip:function(e){var t=this._actions,n=e.uuid,r=this._actionsByClip,i=r[n];if(i!==void 0){for(var a=i.knownActions,o=0,s=a.length;o!==s;++o){var l=a[o];this._deactivateAction(l);var c=l._cacheIndex,u=t[t.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,u._cacheIndex=c,t[c]=u,t.pop(),this._removeInactiveBindingsForAction(l)}delete r[n]}},uncacheRoot:function(e){var t=e.uuid,n=this._actionsByClip;for(var r in n){var i=n[r].actionByRoot,a=i[t];a!==void 0&&(this._deactivateAction(a),this._removeInactiveAction(a))}var o=this._bindingsByRootAndName,s=o[t];if(s!==void 0)for(var l in s){var c=s[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}},uncacheAction:function(e,t){var n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}});function ec(e){typeof e=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}ec.prototype.clone=function(){return new ec(this.value.clone===void 0?this.value:this.value.clone())};function Oh(e,t,n){Vn.call(this,e,t),this.meshPerAttribute=n||1}Oh.prototype=Object.assign(Object.create(Vn.prototype),{constructor:Oh,isInstancedInterleavedBuffer:!0,copy:function(e){return Vn.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}});function Ih(e,t,n,r){this.ray=new Gr(e,t),this.near=n||0,this.far=r||1/0,this.camera=null,this.layers=new Is,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Nh(e,t){return e.distance-t.distance}function tc(e,t,n,r){if(e.layers.test(t.layers)&&e.raycast(t,n),r===!0)for(var i=e.children,a=0,o=i.length;a<o;a++)tc(i[a],t,n,!0)}Object.assign(Ih.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,t,n){var r=n||[];return tc(e,this,r,t),r.sort(Nh),r},intersectObjects:function(e,t,n){var r=n||[];if(Array.isArray(e)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),r;for(var i=0,a=e.length;i<a;i++)tc(e[i],this,r,t);return r.sort(Nh),r}});function nc(e,t,n){return this.radius=e!==void 0?e:1,this.phi=t!==void 0?t:0,this.theta=n!==void 0?n:0,this}Object.assign(nc.prototype,{set:function(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this},makeSafe:function(){var e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this},setFromVector3:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)},setFromCartesianCoords:function(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Le.clamp(t/this.radius,-1,1))),this}});function p0(e,t,n){return this.radius=e!==void 0?e:1,this.theta=t!==void 0?t:0,this.y=n!==void 0?n:0,this}Object.assign(p0.prototype,{set:function(e,t,n){return this.radius=e,this.theta=t,this.y=n,this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this},setFromVector3:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)},setFromCartesianCoords:function(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}});var zh=new j;function Fh(e,t){this.min=e!==void 0?e:new j(1/0,1/0),this.max=t!==void 0?t:new j(-1/0,-1/0)}Object.assign(Fh.prototype,{set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(e,t){var n=zh.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(e){return e===void 0&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new j),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return e===void 0&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new j),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e,t){return t===void 0&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new j),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return t===void 0&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new j),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){var t=zh.copy(e).clamp(this.min,this.max);return t.sub(e).length()},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}});var Bh=new M,Zo=new M;function Uh(e,t){this.start=e!==void 0?e:new M,this.end=t!==void 0?t:new M}Object.assign(Uh.prototype,{set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},getCenter:function(e){return e===void 0&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new M),e.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return e===void 0&&(console.warn("THREE.Line3: .delta() target is now required"),e=new M),e.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){return t===void 0&&(console.warn("THREE.Line3: .at() target is now required"),t=new M),this.delta(t).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(e,t){Bh.subVectors(e,this.start),Zo.subVectors(this.end,this.start);var n=Zo.dot(Zo),r=Zo.dot(Bh),i=r/n;return t&&(i=Le.clamp(i,0,1)),i},closestPointToPoint:function(e,t,n){var r=this.closestPointToPointParameter(e,t);return n===void 0&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new M),this.delta(n).multiplyScalar(r).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}});function Jo(e){ne.call(this),this.material=e,this.render=function(){}}Jo.prototype=Object.create(ne.prototype),Jo.prototype.constructor=Jo,Jo.prototype.isImmediateRenderObject=!0;var Gh=new M;function wa(e,t){ne.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;for(var n=new se,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],i=0,a=1,o=32;i<o;i++,a++){var s=i/o*Math.PI*2,l=a/o*Math.PI*2;r.push(Math.cos(s),Math.sin(s),1,Math.cos(l),Math.sin(l),1)}n.setAttribute("position",new re(r,3));var c=new ot({fog:!1,toneMapped:!1});this.cone=new ut(n,c),this.add(this.cone),this.update()}wa.prototype=Object.create(ne.prototype),wa.prototype.constructor=wa,wa.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},wa.prototype.update=function(){this.light.updateMatrixWorld();var e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Gh.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Gh),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)};var Xn=new M,$o=new De,rc=new De;function Hh(e){var t=[];e&&e.isBone&&t.push(e);for(var n=0;n<e.children.length;n++)t.push.apply(t,Hh(e.children[n]));return t}function _i(e){for(var t=Hh(e),n=new se,r=[],i=[],a=new ie(0,0,1),o=new ie(0,1,0),s=0;s<t.length;s++){var l=t[s];l.parent&&l.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),i.push(a.r,a.g,a.b),i.push(o.r,o.g,o.b))}n.setAttribute("position",new re(r,3)),n.setAttribute("color",new re(i,3));var c=new ot({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});ut.call(this,n,c),this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}_i.prototype=Object.create(ut.prototype),_i.prototype.constructor=_i,_i.prototype.isSkeletonHelper=!0,_i.prototype.updateMatrixWorld=function(e){var t=this.bones,n=this.geometry,r=n.getAttribute("position");rc.getInverse(this.root.matrixWorld);for(var i=0,a=0;i<t.length;i++){var o=t[i];o.parent&&o.parent.isBone&&($o.multiplyMatrices(rc,o.matrixWorld),Xn.setFromMatrixPosition($o),r.setXYZ(a,Xn.x,Xn.y,Xn.z),$o.multiplyMatrices(rc,o.parent.matrixWorld),Xn.setFromMatrixPosition($o),r.setXYZ(a+1,Xn.x,Xn.y,Xn.z),a+=2)}n.getAttribute("position").needsUpdate=!0,ne.prototype.updateMatrixWorld.call(this,e)};function ba(e,t,n){this.light=e,this.light.updateMatrixWorld(),this.color=n;var r=new li(t,4,2),i=new Vt({wireframe:!0,fog:!1,toneMapped:!1});$e.call(this,r,i),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}ba.prototype=Object.create($e.prototype),ba.prototype.constructor=ba,ba.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},ba.prototype.update=function(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)};var v0=new M,Vh=new ie,kh=new ie;function Ma(e,t,n){ne.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;var r=new ii(t);r.rotateY(Math.PI*.5),this.material=new Vt({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);var i=r.getAttribute("position"),a=new Float32Array(i.count*3);r.setAttribute("color",new _e(a,3)),this.add(new $e(r,this.material)),this.update()}Ma.prototype=Object.create(ne.prototype),Ma.prototype.constructor=Ma,Ma.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},Ma.prototype.update=function(){var e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{var t=e.geometry.getAttribute("color");Vh.copy(this.light.color),kh.copy(this.light.groundColor);for(var n=0,r=t.count;n<r;n++){var i=n<r/2?Vh:kh;t.setXYZ(n,i.r,i.g,i.b)}t.needsUpdate=!0}e.lookAt(v0.setFromMatrixPosition(this.light.matrixWorld).negate())};function ic(e,t,n,r){e=e||10,t=t||10,n=new ie(n!==void 0?n:4473924),r=new ie(r!==void 0?r:8947848);for(var i=t/2,a=e/t,o=e/2,s=[],l=[],c=0,u=0,h=-o;c<=t;c++,h+=a){s.push(-o,0,h,o,0,h),s.push(h,0,-o,h,0,o);var f=c===i?n:r;f.toArray(l,u),u+=3,f.toArray(l,u),u+=3,f.toArray(l,u),u+=3,f.toArray(l,u),u+=3}var d=new se;d.setAttribute("position",new re(s,3)),d.setAttribute("color",new re(l,3));var p=new ot({vertexColors:!0,toneMapped:!1});ut.call(this,d,p)}ic.prototype=Object.assign(Object.create(ut.prototype),{constructor:ic,copy:function(e){return ut.prototype.copy.call(this,e),this.geometry.copy(e.geometry),this.material.copy(e.material),this},clone:function(){return new this.constructor().copy(this)}});function ac(e,t,n,r,i,a){e=e||10,t=t||16,n=n||8,r=r||64,i=new ie(i!==void 0?i:4473924),a=new ie(a!==void 0?a:8947848);var o=[],s=[],l,c,u,h,f,d,p;for(h=0;h<=t;h++)u=h/t*(Math.PI*2),l=Math.sin(u)*e,c=Math.cos(u)*e,o.push(0,0,0),o.push(l,0,c),p=h&1?i:a,s.push(p.r,p.g,p.b),s.push(p.r,p.g,p.b);for(h=0;h<=n;h++)for(p=h&1?i:a,d=e-e/n*h,f=0;f<r;f++)u=f/r*(Math.PI*2),l=Math.sin(u)*d,c=Math.cos(u)*d,o.push(l,0,c),s.push(p.r,p.g,p.b),u=(f+1)/r*(Math.PI*2),l=Math.sin(u)*d,c=Math.cos(u)*d,o.push(l,0,c),s.push(p.r,p.g,p.b);var v=new se;v.setAttribute("position",new re(o,3)),v.setAttribute("color",new re(s,3));var m=new ot({vertexColors:!0,toneMapped:!1});ut.call(this,v,m)}ac.prototype=Object.create(ut.prototype),ac.prototype.constructor=ac;var Wh=new M,Qo=new M,jh=new M;function Sa(e,t,n){ne.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,t===void 0&&(t=1);var r=new se;r.setAttribute("position",new re([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));var i=new ot({fog:!1,toneMapped:!1});this.lightPlane=new Wt(r,i),this.add(this.lightPlane),r=new se,r.setAttribute("position",new re([0,0,0,0,0,1],3)),this.targetLine=new Wt(r,i),this.add(this.targetLine),this.update()}Sa.prototype=Object.create(ne.prototype),Sa.prototype.constructor=Sa,Sa.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},Sa.prototype.update=function(){Wh.setFromMatrixPosition(this.light.matrixWorld),Qo.setFromMatrixPosition(this.light.target.matrixWorld),jh.subVectors(Qo,Wh),this.lightPlane.lookAt(Qo),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Qo),this.targetLine.scale.z=jh.length()};var Ko=new M,it=new sn;function es(e){var t=new se,n=new ot({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],i=[],a={},o=new ie(16755200),s=new ie(16711680),l=new ie(43775),c=new ie(16777215),u=new ie(3355443);h("n1","n2",o),h("n2","n4",o),h("n4","n3",o),h("n3","n1",o),h("f1","f2",o),h("f2","f4",o),h("f4","f3",o),h("f3","f1",o),h("n1","f1",o),h("n2","f2",o),h("n3","f3",o),h("n4","f4",o),h("p","n1",s),h("p","n2",s),h("p","n3",s),h("p","n4",s),h("u1","u2",l),h("u2","u3",l),h("u3","u1",l),h("c","t",c),h("p","c",u),h("cn1","cn2",u),h("cn3","cn4",u),h("cf1","cf2",u),h("cf3","cf4",u);function h(d,p,v){f(d,v),f(p,v)}function f(d,p){r.push(0,0,0),i.push(p.r,p.g,p.b),a[d]===void 0&&(a[d]=[]),a[d].push(r.length/3-1)}t.setAttribute("position",new re(r,3)),t.setAttribute("color",new re(i,3)),ut.call(this,t,n),this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}es.prototype=Object.create(ut.prototype),es.prototype.constructor=es,es.prototype.update=function(){var e=this.geometry,t=this.pointMap,n=1,r=1;it.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),lt("c",t,e,it,0,0,-1),lt("t",t,e,it,0,0,1),lt("n1",t,e,it,-n,-r,-1),lt("n2",t,e,it,n,-r,-1),lt("n3",t,e,it,-n,r,-1),lt("n4",t,e,it,n,r,-1),lt("f1",t,e,it,-n,-r,1),lt("f2",t,e,it,n,-r,1),lt("f3",t,e,it,-n,r,1),lt("f4",t,e,it,n,r,1),lt("u1",t,e,it,n*.7,r*1.1,-1),lt("u2",t,e,it,-n*.7,r*1.1,-1),lt("u3",t,e,it,0,r*2,-1),lt("cf1",t,e,it,-n,0,1),lt("cf2",t,e,it,n,0,1),lt("cf3",t,e,it,0,-r,1),lt("cf4",t,e,it,0,r,1),lt("cn1",t,e,it,-n,0,-1),lt("cn2",t,e,it,n,0,-1),lt("cn3",t,e,it,0,-r,-1),lt("cn4",t,e,it,0,r,-1),e.getAttribute("position").needsUpdate=!0};function lt(e,t,n,r,i,a,o){Ko.set(i,a,o).unproject(r);var s=t[e];if(s!==void 0)for(var l=n.getAttribute("position"),c=0,u=s.length;c<u;c++)l.setXYZ(s[c],Ko.x,Ko.y,Ko.z)}var ts=new nn;function wr(e,t){this.object=e,t===void 0&&(t=16776960);var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(8*3),i=new se;i.setIndex(new _e(n,1)),i.setAttribute("position",new _e(r,3)),ut.call(this,i,new ot({color:t,toneMapped:!1})),this.matrixAutoUpdate=!1,this.update()}wr.prototype=Object.create(ut.prototype),wr.prototype.constructor=wr,wr.prototype.update=function(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&ts.setFromObject(this.object),!ts.isEmpty()){var t=ts.min,n=ts.max,r=this.geometry.attributes.position,i=r.array;i[0]=n.x,i[1]=n.y,i[2]=n.z,i[3]=t.x,i[4]=n.y,i[5]=n.z,i[6]=t.x,i[7]=t.y,i[8]=n.z,i[9]=n.x,i[10]=t.y,i[11]=n.z,i[12]=n.x,i[13]=n.y,i[14]=t.z,i[15]=t.x,i[16]=n.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=n.x,i[22]=t.y,i[23]=t.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}},wr.prototype.setFromObject=function(e){return this.object=e,this.update(),this},wr.prototype.copy=function(e){return ut.prototype.copy.call(this,e),this.object=e.object,this},wr.prototype.clone=function(){return new this.constructor().copy(this)};function ns(e,t){this.type="Box3Helper",this.box=e,t=t||16776960;var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],i=new se;i.setIndex(new _e(n,1)),i.setAttribute("position",new re(r,3)),ut.call(this,i,new ot({color:t,toneMapped:!1})),this.geometry.computeBoundingSphere()}ns.prototype=Object.create(ut.prototype),ns.prototype.constructor=ns,ns.prototype.updateMatrixWorld=function(e){var t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),ne.prototype.updateMatrixWorld.call(this,e))};function rs(e,t,n){this.type="PlaneHelper",this.plane=e,this.size=t===void 0?1:t;var r=n!==void 0?n:16776960,i=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],a=new se;a.setAttribute("position",new re(i,3)),a.computeBoundingSphere(),Wt.call(this,a,new ot({color:r,toneMapped:!1}));var o=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],s=new se;s.setAttribute("position",new re(o,3)),s.computeBoundingSphere(),this.add(new $e(s,new Vt({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}rs.prototype=Object.create(Wt.prototype),rs.prototype.constructor=rs,rs.prototype.updateMatrixWorld=function(e){var t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?dt:Ai,this.lookAt(this.plane.normal),ne.prototype.updateMatrixWorld.call(this,e)};var qh=new M,is,oc;function Yn(e,t,n,r,i,a){ne.call(this),e===void 0&&(e=new M(0,0,1)),t===void 0&&(t=new M(0,0,0)),n===void 0&&(n=1),r===void 0&&(r=16776960),i===void 0&&(i=.2*n),a===void 0&&(a=.2*i),is===void 0&&(is=new se,is.setAttribute("position",new re([0,0,0,0,1,0],3)),oc=new Wn(0,.5,1,5,1),oc.translate(0,-.5,0)),this.position.copy(t),this.line=new Wt(is,new ot({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new $e(oc,new Vt({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,i,a)}Yn.prototype=Object.create(ne.prototype),Yn.prototype.constructor=Yn,Yn.prototype.setDirection=function(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{qh.set(e.z,0,-e.x).normalize();var t=Math.acos(e.y);this.quaternion.setFromAxisAngle(qh,t)}},Yn.prototype.setLength=function(e,t,n){t===void 0&&(t=.2*e),n===void 0&&(n=.2*t),this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()},Yn.prototype.setColor=function(e){this.line.material.color.set(e),this.cone.material.color.set(e)},Yn.prototype.copy=function(e){return ne.prototype.copy.call(this,e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this},Yn.prototype.clone=function(){return new this.constructor().copy(this)};function sc(e){e=e||1;var t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new se;r.setAttribute("position",new re(t,3)),r.setAttribute("color",new re(n,3));var i=new ot({vertexColors:!0,toneMapped:!1});ut.call(this,r,i)}sc.prototype=Object.create(ut.prototype),sc.prototype.constructor=sc;var wi=4,Zn=8,vn=Math.pow(2,Zn),Xh=[.125,.215,.35,.446,.526,.582],Yh=Zn-wi+1+Xh.length,bi=20,mn={[Ot]:0,[Ps]:1,[Rs]:2,[Qc]:3,[Kc]:4,[eu]:5,[$c]:6},lc=new mr,as=x0(bi),Jn=null,$n=null,{_lodPlanes:Ta,_sizeLods:Zh,_sigmas:os}=m0(),ss=null,Ze=null,cc=null,br=(1+Math.sqrt(5))/2,Mi=1/br,Jh=[new M(1,1,1),new M(-1,1,1),new M(1,1,-1),new M(-1,1,-1),new M(0,br,Mi),new M(0,br,-Mi),new M(Mi,0,br),new M(-Mi,0,br),new M(br,Mi,0),new M(-br,Mi,0)];function $h(e){Ze=e,uc(as)}$h.prototype={constructor:$h,fromScene:function(e,t=0,n=.1,r=100){cc=Ze.getRenderTarget();var i=Qh();return g0(e,n,r,i),t>0&&nf(i,0,0,t),tf(i),Kh(i),i},fromEquirectangular:function(e){return e.magFilter=tt,e.minFilter=tt,e.generateMipmaps=!1,this.fromCubemap(e)},fromCubemap:function(e){cc=Ze.getRenderTarget();var t=Qh(e);return y0(e,t),tf(t),Kh(t),t},compileCubemapShader:function(){$n==null&&($n=of(),uc($n))},compileEquirectangularShader:function(){Jn==null&&(Jn=af(),uc(Jn))},dispose:function(){as.dispose(),$n!=null&&$n.dispose(),Jn!=null&&Jn.dispose();for(var e=0;e<Ta.length;e++)Ta[e].dispose()}};function m0(){for(var e=[],t=[],n=[],r=Zn,i=0;i<Yh;i++){var a=Math.pow(2,r);t.push(a);var o=1/a;i>Zn-wi?o=Xh[i-Zn+wi-1]:i==0&&(o=0),n.push(o);for(var s=1/(a-1),l=-s/2,c=1+s/2,u=[l,l,c,l,c,c,l,l,c,c,l,c],h=6,f=6,d=3,p=2,v=1,m=new Float32Array(d*f*h),g=new Float32Array(p*f*h),x=new Float32Array(v*f*h),b=0;b<h;b++){var S=b%3*2/3-1,w=b>2?0:-1,T=[S,w,0,S+2/3,w,0,S+2/3,w+1,0,S,w,0,S+2/3,w+1,0,S,w+1,0];m.set(T,d*f*b),g.set(u,p*f*b);var L=[b,b,b,b,b,b];x.set(L,v*f*b)}var I=new se;I.setAttribute("position",new _e(m,d)),I.setAttribute("uv",new _e(g,p)),I.setAttribute("faceIndex",new _e(x,v)),e.push(I),r>wi&&r--}return{_lodPlanes:e,_sizeLods:t,_sigmas:n}}function Qh(e){var t={magFilter:tt,minFilter:tt,generateMipmaps:!1,type:e?e.type:Ga,format:e?e.format:Sd,encoding:e?e.encoding:Rs,depthBuffer:!1,stencilBuffer:!1},n=ef(t);return n.depthBuffer=!e,ss=ef(t),n}function Kh(e){ss.dispose(),Ze.setRenderTarget(cc),e.scissorTest=!1,e.setSize(e.width,e.height)}function g0(e,t,n,r){var i=90,a=1,o=new ft(i,a,t,n),s=[1,1,1,1,-1,1],l=[1,1,-1,-1,-1,1],c=Ze.outputEncoding,u=Ze.toneMapping,h=Ze.toneMappingExposure,f=Ze.getClearColor(),d=Ze.getClearAlpha();Ze.toneMapping=ws,Ze.toneMappingExposure=1,Ze.outputEncoding=Ot,e.scale.z*=-1;var p=e.background;if(p&&p.isColor){p.convertSRGBToLinear();var v=Math.max(p.r,p.g,p.b),m=Math.min(Math.max(Math.ceil(Math.log2(v)),-128),127);p=p.multiplyScalar(Math.pow(2,-m));var g=(m+128)/255;Ze.setClearColor(p,g),e.background=null}for(var x=0;x<6;x++){var b=x%3;b==0?(o.up.set(0,s[x],0),o.lookAt(l[x],0,0)):b==1?(o.up.set(0,0,s[x]),o.lookAt(0,l[x],0)):(o.up.set(0,s[x],0),o.lookAt(0,0,l[x])),hc(r,b*vn,x>2?vn:0,vn,vn),Ze.setRenderTarget(r),Ze.render(e,o)}Ze.toneMapping=u,Ze.toneMappingExposure=h,Ze.outputEncoding=c,Ze.setClearColor(f,d),e.scale.z*=-1}function y0(e,t){var n=new xn;e.isCubeTexture?$n==null&&($n=of()):Jn==null&&(Jn=af());var r=e.isCubeTexture?$n:Jn;n.add(new $e(Ta[0],r));var i=r.uniforms;i.envMap.value=e,e.isCubeTexture||i.texelSize.value.set(1/e.image.width,1/e.image.height),i.inputEncoding.value=mn[e.encoding],i.outputEncoding.value=mn[e.encoding],hc(t,0,0,3*vn,2*vn),Ze.setRenderTarget(t),Ze.render(n,lc)}function uc(e){var t=new xn;t.add(new $e(Ta[0],e)),Ze.compile(t,lc)}function ef(e){var t=new vt(3*vn,3*vn,e);return t.texture.mapping=Ci,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function hc(e,t,n,r,i){e.viewport.set(t,n,r,i),e.scissor.set(t,n,r,i)}function tf(e){var t=Ze.autoClear;Ze.autoClear=!1;for(var n=1;n<Yh;n++){var r=Math.sqrt(os[n]*os[n]-os[n-1]*os[n-1]),i=Jh[(n-1)%Jh.length];nf(e,n-1,n,r,i)}Ze.autoClear=t}function nf(e,t,n,r,i){rf(e,ss,t,n,r,"latitudinal",i),rf(ss,e,n,n,r,"longitudinal",i)}function rf(e,t,n,r,i,a,o){a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");var s=3,l=new xn;l.add(new $e(Ta[r],as));var c=as.uniforms,u=Zh[n]-1,h=isFinite(i)?Math.PI/(2*u):2*Math.PI/(2*bi-1),f=i/h,d=isFinite(i)?1+Math.floor(s*f):bi;d>bi&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${d} samples when the maximum is set to ${bi}`);for(var p=[],v=0,m=0;m<bi;++m){var b=m/f,g=Math.exp(-b*b/2);p.push(g),m==0?v+=g:m<d&&(v+=2*g)}for(var m=0;m<p.length;m++)p[m]=p[m]/v;c.envMap.value=e.texture,c.samples.value=d,c.weights.value=p,c.latitudinal.value=a==="latitudinal",o&&(c.poleAxis.value=o),c.dTheta.value=h,c.mipInt.value=Zn-n,c.inputEncoding.value=mn[e.texture.encoding],c.outputEncoding.value=mn[e.texture.encoding];var x=Zh[r],b=3*Math.max(0,vn-2*x),S=(r===0?0:2*vn)+2*x*(r>Zn-wi?r-Zn+wi:0);hc(t,b,S,3*x,2*x),Ze.setRenderTarget(t),Ze.render(l,lc)}function x0(e){var t=new Float32Array(e),n=new M(0,1,0),r=new jn({defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:t},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:mn[Ot]},outputEncoding:{value:mn[Ot]}},vertexShader:fc(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform sampler2D envMap;
uniform int samples;
uniform float weights[n];
uniform bool latitudinal;
uniform float dTheta;
uniform float mipInt;
uniform vec3 poleAxis;

${dc()}

#define ENVMAP_TYPE_CUBE_UV
#include <cube_uv_reflection_fragment>

vec3 getSample(float theta, vec3 axis) {
	float cosTheta = cos(theta);
	// Rodrigues' axis-angle rotation
	vec3 sampleDirection = vOutputDirection * cosTheta
		+ cross(axis, vOutputDirection) * sin(theta)
		+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);
	return bilinearCubeUV(envMap, sampleDirection, mipInt);
}

void main() {
	vec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);
	if (all(equal(axis, vec3(0.0))))
		axis = vec3(vOutputDirection.z, 0.0, - vOutputDirection.x);
	axis = normalize(axis);
	gl_FragColor = vec4(0.0);
	gl_FragColor.rgb += weights[0] * getSample(0.0, axis);
	for (int i = 1; i < n; i++) {
		if (i >= samples)
			break;
		float theta = dTheta * float(i);
		gl_FragColor.rgb += weights[i] * getSample(-1.0 * theta, axis);
		gl_FragColor.rgb += weights[i] * getSample(theta, axis);
	}
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:On,depthTest:!1,depthWrite:!1});return r.type="SphericalGaussianBlur",r}function af(){var e=new j(1,1),t=new jn({uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:mn[Ot]},outputEncoding:{value:mn[Ot]}},vertexShader:fc(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform sampler2D envMap;
uniform vec2 texelSize;

${dc()}

#define RECIPROCAL_PI 0.31830988618
#define RECIPROCAL_PI2 0.15915494

void main() {
	gl_FragColor = vec4(0.0);
	vec3 outputDirection = normalize(vOutputDirection);
	vec2 uv;
	uv.y = asin(clamp(outputDirection.y, -1.0, 1.0)) * RECIPROCAL_PI + 0.5;
	uv.x = atan(outputDirection.z, outputDirection.x) * RECIPROCAL_PI2 + 0.5;
	vec2 f = fract(uv / texelSize - 0.5);
	uv -= f * texelSize;
	vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.x += texelSize.x;
	vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.y += texelSize.y;
	vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.x -= texelSize.x;
	vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	vec3 tm = mix(tl, tr, f.x);
	vec3 bm = mix(bl, br, f.x);
	gl_FragColor.rgb = mix(tm, bm, f.y);
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:On,depthTest:!1,depthWrite:!1});return t.type="EquirectangularToCubeUV",t}function of(){var e=new jn({uniforms:{envMap:{value:null},inputEncoding:{value:mn[Ot]},outputEncoding:{value:mn[Ot]}},vertexShader:fc(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform samplerCube envMap;

${dc()}

void main() {
	gl_FragColor = vec4(0.0);
	gl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:On,depthTest:!1,depthWrite:!1});return e.type="CubemapToCubeUV",e}function fc(){return`
precision mediump float;
precision mediump int;
attribute vec3 position;
attribute vec2 uv;
attribute float faceIndex;
varying vec3 vOutputDirection;
vec3 getDirection(vec2 uv, float face) {
	uv = 2.0 * uv - 1.0;
	vec3 direction = vec3(uv, 1.0);
	if (face == 0.0) {
		direction = direction.zyx;
		direction.z *= -1.0;
	} else if (face == 1.0) {
		direction = direction.xzy;
		direction.z *= -1.0;
	} else if (face == 3.0) {
		direction = direction.zyx;
		direction.x *= -1.0;
	} else if (face == 4.0) {
		direction = direction.xzy;
		direction.y *= -1.0;
	} else if (face == 5.0) {
		direction.xz *= -1.0;
	}
	return direction;
}
void main() {
	vOutputDirection = getDirection(uv, faceIndex);
	gl_Position = vec4( position, 1.0 );
}
	`}function dc(){return`
uniform int inputEncoding;
uniform int outputEncoding;

#include <encodings_pars_fragment>

vec4 inputTexelToLinear(vec4 value){
	if(inputEncoding == 0){
		return value;
	}else if(inputEncoding == 1){
		return sRGBToLinear(value);
	}else if(inputEncoding == 2){
		return RGBEToLinear(value);
	}else if(inputEncoding == 3){
		return RGBMToLinear(value, 7.0);
	}else if(inputEncoding == 4){
		return RGBMToLinear(value, 16.0);
	}else if(inputEncoding == 5){
		return RGBDToLinear(value, 256.0);
	}else{
		return GammaToLinear(value, 2.2);
	}
}

vec4 linearToOutputTexel(vec4 value){
	if(outputEncoding == 0){
		return value;
	}else if(outputEncoding == 1){
		return LinearTosRGB(value);
	}else if(outputEncoding == 2){
		return LinearToRGBE(value);
	}else if(outputEncoding == 3){
		return LinearToRGBM(value, 7.0);
	}else if(outputEncoding == 4){
		return LinearToRGBM(value, 16.0);
	}else if(outputEncoding == 5){
		return LinearToRGBD(value, 256.0);
	}else{
		return LinearToGamma(value, 2.2);
	}
}

vec4 envMapTexelToLinear(vec4 color) {
	return inputTexelToLinear(color);
}
	`}ye.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(ye.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Object.assign(qn.prototype,{createPointsGeometry:function(e){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var t=new Me,n=0,r=e.length;n<r;n++){var i=e[n];t.vertices.push(new M(i.x,i.y,i.z||0))}return t}}),Object.assign(dn.prototype,{fromPoints:function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)}}),Object.create(Bt.prototype),Object.create(Bt.prototype);function sf(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),Bt.call(this,e),this.type="catmullrom"}sf.prototype=Object.create(Bt.prototype),Object.assign(sf.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),ic.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},_i.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(Ve.prototype,{extractUrlBase:function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),fh.extractUrlBase(e)}}),Ve.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Object.assign(Yl.prototype,{setTexturePath:function(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}),Object.assign(Fh.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(nn.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}}),ki.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},Uh.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Object.assign(Le,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),Le.floorPowerOfTwo(e)},nextPowerOfTwo:function(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),Le.ceilPowerOfTwo(e)}}),Object.assign(Et.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(De.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new M().setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(e,t,n,r,i,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,r,n,i,a)}}),rn.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},xt.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},Object.assign(Gr.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}}),Object.assign(mt.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},midpoint:function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},normal:function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},plane:function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)}}),Object.assign(mt,{barycoordFromPoint:function(e,t,n,r,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),mt.getBarycoord(e,t,n,r,i)},normal:function(e,t,n,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),mt.getNormal(e,t,n,r)}}),Object.assign(vr.prototype,{extractAllPoints:function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new si(this,e)},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new ci(this,e)}}),Object.assign(j.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(M.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},fromAttribute:function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Ye.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Me.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(e){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.assign(ne.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(ne.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.assign($e.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}),Object.defineProperties($e.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),up},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(go.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(pl.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),dl.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(ye.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}}),ft.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),t!==void 0&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(et.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(_e.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Oi},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Oi)}}}),Object.assign(_e.prototype,{setDynamic:function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(e===!0?Oi:qa),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(se.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addAttribute:function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(t&&t.isBufferAttribute)&&!(t&&t.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new _e(arguments[1],arguments[2]))):e==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t)},addDrawCall:function(e,t,n){n!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},applyMatrix:function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(se.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(Ih.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(e){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=e}}}),Object.defineProperties(Vn.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===Oi},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(e)}}}),Object.assign(Vn.prototype,{setDynamic:function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(e===!0?Oi:qa),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(En.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.defineProperties(ec.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(be.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new ie}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===Rc}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(pr.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(rt.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Object.assign(Uu.prototype,{clearTarget:function(e,t,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,r)},animate:function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(Uu.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=e===!0?Ps:Ot}}}),Object.defineProperties(Fu.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(vt.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Object.defineProperties(_a.prototype,{load:{value:function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var t=this,n=new Zl;return n.load(e,function(r){t.setBuffer(r)}),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),Lh.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},Vi.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},er.crossOrigin=void 0,er.loadTexture=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var i=new Ll;i.setCrossOrigin(this.crossOrigin);var a=i.load(e,n,void 0,r);return t&&(a.mapping=t),a},er.loadTextureCube=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var i=new Al;i.setCrossOrigin(this.crossOrigin);var a=i.load(e,n,void 0,r);return t&&(a.mapping=t),a},er.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},er.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Gf}}));var Ea=function(e,t){t===void 0&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=t,this.enabled=!0,this.target=new M,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!1,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:Rn.ROTATE,MIDDLE:Rn.DOLLY,RIGHT:Rn.PAN},this.touches={ONE:Dn.ROTATE,TWO:Dn.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return c.phi},this.getAzimuthalAngle=function(){return c.theta},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(r),n.update(),s=o.NONE},this.update=function(){var P=new M,K=new xt().setFromUnitVectors(e.up,new M(0,1,0)),he=K.clone().inverse(),ae=new M,oe=new xt;return function(){var ce=n.object.position;return P.copy(ce).sub(n.target),P.applyQuaternion(K),c.setFromVector3(P),n.autoRotate&&s===o.NONE&&C(L()),n.enableDamping?(c.theta+=u.theta*n.dampingFactor,c.phi+=u.phi*n.dampingFactor):(c.theta+=u.theta,c.phi+=u.phi),c.theta=Math.max(n.minAzimuthAngle,Math.min(n.maxAzimuthAngle,c.theta)),c.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,c.phi)),c.makeSafe(),c.radius*=h,c.radius=Math.max(n.minDistance,Math.min(n.maxDistance,c.radius)),n.enableDamping===!0?n.target.addScaledVector(f,n.dampingFactor):n.target.add(f),P.setFromSpherical(c),P.applyQuaternion(he),ce.copy(n.target).add(P),n.object.lookAt(n.target),n.enableDamping===!0?(u.theta*=1-n.dampingFactor,u.phi*=1-n.dampingFactor,f.multiplyScalar(1-n.dampingFactor)):(u.set(0,0,0),f.set(0,0,0)),h=1,d||ae.distanceToSquared(n.object.position)>l||8*(1-oe.dot(n.object.quaternion))>l?(n.dispatchEvent(r),ae.copy(n.object.position),oe.copy(n.object.quaternion),d=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",ue,!1),n.domElement.removeEventListener("mousedown",je,!1),n.domElement.removeEventListener("wheel",E,!1),n.domElement.removeEventListener("touchstart",Q,!1),n.domElement.removeEventListener("touchend",Ce,!1),n.domElement.removeEventListener("touchmove",J,!1),document.removeEventListener("mousemove",bt,!1),document.removeEventListener("mouseup",Qe,!1),n.domElement.removeEventListener("keydown",A,!1)};var n=this,r={type:"change"},i={type:"start"},a={type:"end"},o={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},s=o.NONE,l=1e-6,c=new nc,u=new nc,h=1,f=new M,d=!1,p=new j,v=new j,m=new j,g=new j,x=new j,b=new j,S=new j,w=new j,T=new j;function L(){return 2*Math.PI/60/60*n.autoRotateSpeed}function I(){return Math.pow(.95,n.zoomSpeed)}function C(P){u.theta-=P}function z(P){u.phi-=P}var N=function(){var P=new M;return function(he,ae){P.setFromMatrixColumn(ae,0),P.multiplyScalar(-he),f.add(P)}}(),B=function(){var P=new M;return function(he,ae){n.screenSpacePanning===!0?P.setFromMatrixColumn(ae,1):(P.setFromMatrixColumn(ae,0),P.crossVectors(n.object.up,P)),P.multiplyScalar(he),f.add(P)}}(),U=function(){var P=new M;return function(he,ae){var oe=n.domElement;if(n.object.isPerspectiveCamera){var ge=n.object.position;P.copy(ge).sub(n.target);var ce=P.length();ce*=Math.tan(n.object.fov/2*Math.PI/180),N(2*he*ce/oe.clientHeight,n.object.matrix),B(2*ae*ce/oe.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(N(he*(n.object.right-n.object.left)/n.object.zoom/oe.clientWidth,n.object.matrix),B(ae*(n.object.top-n.object.bottom)/n.object.zoom/oe.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function F(P){n.object.isPerspectiveCamera?h/=P:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*P)),n.object.updateProjectionMatrix(),d=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function R(P){n.object.isPerspectiveCamera?h*=P:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/P)),n.object.updateProjectionMatrix(),d=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function G(P){p.set(P.clientX,P.clientY)}function k(P){S.set(P.clientX,P.clientY)}function q(P){g.set(P.clientX,P.clientY)}function H(P){v.set(P.clientX,P.clientY),m.subVectors(v,p).multiplyScalar(n.rotateSpeed);var K=n.domElement;C(2*Math.PI*m.x/K.clientHeight),z(2*Math.PI*m.y/K.clientHeight),p.copy(v),n.update()}function V(P){w.set(P.clientX,P.clientY),T.subVectors(w,S),T.y>0?F(I()):T.y<0&&R(I()),S.copy(w),n.update()}function W(P){x.set(P.clientX,P.clientY),b.subVectors(x,g).multiplyScalar(n.panSpeed),U(b.x,b.y),g.copy(x),n.update()}function le(P){P.deltaY<0?R(I()):P.deltaY>0&&F(I()),n.update()}function Oe(P){var K=!1;switch(P.keyCode){case n.keys.UP:U(0,n.keyPanSpeed),K=!0;break;case n.keys.BOTTOM:U(0,-n.keyPanSpeed),K=!0;break;case n.keys.LEFT:U(n.keyPanSpeed,0),K=!0;break;case n.keys.RIGHT:U(-n.keyPanSpeed,0),K=!0;break}K&&(P.preventDefault(),n.update())}function Re(P){if(P.touches.length==1)p.set(P.touches[0].pageX,P.touches[0].pageY);else{var K=.5*(P.touches[0].pageX+P.touches[1].pageX),he=.5*(P.touches[0].pageY+P.touches[1].pageY);p.set(K,he)}}function Se(P){if(P.touches.length==1)g.set(P.touches[0].pageX,P.touches[0].pageY);else{var K=.5*(P.touches[0].pageX+P.touches[1].pageX),he=.5*(P.touches[0].pageY+P.touches[1].pageY);g.set(K,he)}}function Y(P){var K=P.touches[0].pageX-P.touches[1].pageX,he=P.touches[0].pageY-P.touches[1].pageY,ae=Math.sqrt(K*K+he*he);S.set(0,ae)}function Be(P){n.enableZoom&&Y(P),n.enablePan&&Se(P)}function Te(P){n.enableZoom&&Y(P),n.enableRotate&&Re(P)}function ze(P){if(P.touches.length==1)v.set(P.touches[0].pageX,P.touches[0].pageY);else{var K=.5*(P.touches[0].pageX+P.touches[1].pageX),he=.5*(P.touches[0].pageY+P.touches[1].pageY);v.set(K,he)}m.subVectors(v,p).multiplyScalar(n.rotateSpeed);var ae=n.domElement;C(2*Math.PI*m.x/ae.clientHeight),z(2*Math.PI*m.y/ae.clientHeight),p.copy(v)}function me(P){if(P.touches.length==1)x.set(P.touches[0].pageX,P.touches[0].pageY);else{var K=.5*(P.touches[0].pageX+P.touches[1].pageX),he=.5*(P.touches[0].pageY+P.touches[1].pageY);x.set(K,he)}b.subVectors(x,g).multiplyScalar(n.panSpeed),U(b.x,b.y),g.copy(x)}function Z(P){var K=P.touches[0].pageX-P.touches[1].pageX,he=P.touches[0].pageY-P.touches[1].pageY,ae=Math.sqrt(K*K+he*he);w.set(0,ae),T.set(0,Math.pow(w.y/S.y,n.zoomSpeed)),F(T.y),S.copy(w)}function Ae(P){n.enableZoom&&Z(P),n.enablePan&&me(P)}function Ue(P){n.enableZoom&&Z(P),n.enableRotate&&ze(P)}function je(P){if(n.enabled!==!1){P.preventDefault(),n.domElement.focus?n.domElement.focus():window.focus();var K;switch(P.button){case 0:K=n.mouseButtons.LEFT;break;case 1:K=n.mouseButtons.MIDDLE;break;case 2:K=n.mouseButtons.RIGHT;break;default:K=-1}switch(K){case Rn.DOLLY:if(n.enableZoom===!1)return;k(P),s=o.DOLLY;break;case Rn.ROTATE:if(P.ctrlKey||P.metaKey||P.shiftKey){if(n.enablePan===!1)return;q(P),s=o.PAN}else{if(n.enableRotate===!1)return;G(P),s=o.ROTATE}break;case Rn.PAN:if(P.ctrlKey||P.metaKey||P.shiftKey){if(n.enableRotate===!1)return;G(P),s=o.ROTATE}else{if(n.enablePan===!1)return;q(P),s=o.PAN}break;default:s=o.NONE}s!==o.NONE&&(document.addEventListener("mousemove",bt,!1),document.addEventListener("mouseup",Qe,!1),n.dispatchEvent(i))}}function bt(P){if(n.enabled!==!1)switch(P.preventDefault(),s){case o.ROTATE:if(n.enableRotate===!1)return;H(P);break;case o.DOLLY:if(n.enableZoom===!1)return;V(P);break;case o.PAN:if(n.enablePan===!1)return;W(P);break}}function Qe(P){n.enabled!==!1&&(document.removeEventListener("mousemove",bt,!1),document.removeEventListener("mouseup",Qe,!1),n.dispatchEvent(a),s=o.NONE)}function E(P){n.enabled===!1||n.enableZoom===!1||s!==o.NONE&&s!==o.ROTATE||(P.preventDefault(),P.stopPropagation(),n.dispatchEvent(i),le(P),n.dispatchEvent(a))}function A(P){n.enabled===!1||n.enableKeys===!1||n.enablePan===!1||Oe(P)}function Q(P){if(n.enabled!==!1){switch(P.preventDefault(),P.touches.length){case 1:switch(n.touches.ONE){case Dn.ROTATE:if(n.enableRotate===!1)return;Re(P),s=o.TOUCH_ROTATE;break;case Dn.PAN:if(n.enablePan===!1)return;Se(P),s=o.TOUCH_PAN;break;default:s=o.NONE}break;case 2:switch(n.touches.TWO){case Dn.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Be(P),s=o.TOUCH_DOLLY_PAN;break;case Dn.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Te(P),s=o.TOUCH_DOLLY_ROTATE;break;default:s=o.NONE}break;default:s=o.NONE}s!==o.NONE&&n.dispatchEvent(i)}}function J(P){if(n.enabled!==!1)switch(P.preventDefault(),P.stopPropagation(),s){case o.TOUCH_ROTATE:if(n.enableRotate===!1)return;ze(P),n.update();break;case o.TOUCH_PAN:if(n.enablePan===!1)return;me(P),n.update();break;case o.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Ae(P),n.update();break;case o.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Ue(P),n.update();break;default:s=o.NONE}}function Ce(P){n.enabled!==!1&&(n.dispatchEvent(a),s=o.NONE)}function ue(P){n.enabled!==!1&&P.preventDefault()}n.domElement.addEventListener("contextmenu",ue,!1),n.domElement.addEventListener("mousedown",je,!1),n.domElement.addEventListener("wheel",E,!1),n.domElement.addEventListener("touchstart",Q,!1),n.domElement.addEventListener("touchend",Ce,!1),n.domElement.addEventListener("touchmove",J,!1),n.domElement.addEventListener("keydown",A,!1),n.domElement.tabIndex===-1&&(n.domElement.tabIndex=0),this.update()};Ea.prototype=Object.create(Yt.prototype),Ea.prototype.constructor=Ea;var pc=function(e,t){Ea.call(this,e,t),this.mouseButtons.LEFT=Rn.PAN,this.mouseButtons.RIGHT=Rn.ROTATE,this.touches.ONE=Dn.PAN,this.touches.TWO=Dn.DOLLY_ROTATE};pc.prototype=Object.create(Yt.prototype),pc.prototype.constructor=pc;function _0(e){const{domElement:t,onClick:n=()=>{},onEnter:r=()=>{},onMove:i=()=>{},onLeave:a=()=>{},onDragStart:o=()=>{},onDragMove:s=()=>{},onDragStop:l=()=>{}}=e,c=new Ht,u=new Ht,h=new Ht,f=new Ht,d=new Ht,p={position:c,nPosition:u,hover:!1,down:!1,removeListeners:L};return T(),p;function v(I){h.distanceTo(c)<20&&(w(I),n({position:c,nPosition:u}))}function m(I){p.hover=I.pointerType==="mouse",w(I),r({position:c,nPosition:u})}function g(I){p.down=!0,w(I),h.copy(c),f.copy(c),o({position:c,nPosition:u})}function x(I){w(I),d.copy(c).sub(f),p.down?s({position:c,nPosition:u,startPosition:h,lastPosition:f,delta:d}):p.hover||(p.hover=!0),i({position:c,nPosition:u,startPosition:h,lastPosition:f,delta:d}),f.copy(c)}function b(I){p.down=!1,l()}function S(I){p.down&&(p.down=!1,l()),p.hover=!1,a()}function w(I){const C=t.getBoundingClientRect();c.x=I.clientX-C.left,c.y=I.clientY-C.top,u.x=c.x/C.width*2-1,u.y=-(c.y/C.height)*2+1}function T(){t.addEventListener("click",v),t.addEventListener("pointerenter",m),t.addEventListener("pointerdown",g),t.addEventListener("pointermove",x),t.addEventListener("pointerup",b),t.addEventListener("pointerleave",S)}function L(){t.removeEventListener("click",v),t.removeEventListener("pointerenter",m),t.removeEventListener("pointerdown",g),t.removeEventListener("pointermove",x),t.removeEventListener("pointerup",b),t.removeEventListener("pointerleave",S)}}function Si(e){const t={el:null,canvas:null,eventsEl:null,width:null,height:null,resize:!0,alpha:!1,antialias:!1,orbitControls:!1,init(){},initCamera(){},initScene(){},afterResize(){},beforeRender(){},...e},n={renderer:null,camera:null,scene:null,pointer:null,width:0,height:0,wWidth:0,wHeight:0,clock:{startTime:0,time:0,elapsed:0},options:t};let r,i;return a(),n;function a(){var u,h,f,d,p;let v;if(t.el)v=document.createElement("canvas"),t.el.appendChild(v);else if(t.canvas)v=t.canvas;else throw new Error("Missing parameter : el or canvas is required");(u=t.init)==null||u.call(t,n),n.renderer=new Tf({canvas:v,alpha:t.alpha,antialias:t.antialias}),(h=t.initRenderer)==null||h.call(t,n),n.camera=new bc,n.camera.position.z=50,(f=t.initCamera)==null||f.call(t,n),t.orbitControls&&(i=new Ea(n.camera,(d=t.eventsEl)!=null?d:n.renderer.domElement),i.enableDamping=!0,i.dampingFactor=.1,typeof t.orbitControls=="object"&&Object.keys(t.orbitControls).forEach(m=>{i[m]=t.orbitControls[m]})),l(),t.resize&&!t.width&&!t.height&&window.addEventListener("resize",l),n.scene=new Ef,(p=t.initScene)==null||p.call(t,n),o(),r=t.render?t.render:()=>{n.renderer.render(n.scene,n.camera)},requestAnimationFrame(m=>{n.clock.startTime=n.clock.time=m,requestAnimationFrame(s)})}function o(){var u,h;const f={};t.onPointerEnter&&(f.onEnter=t.onPointerEnter),t.onPointerMove&&(f.onMove=t.onPointerMove),t.onPointerMove&&(f.onLeave=t.onPointerLeave),Object.keys(f).length>0&&(n.pointer=_0({domElement:(h=t.eventsEl)!=null?h:(u=t.el)!=null?u:t.canvas,...f}))}function s(u){const{clock:h}=n;h.elapsed=u-h.time,h.time=u,t.beforeRender(n),i&&i.update(),r(n),requestAnimationFrame(s)}function l(){var u;if(t.width&&t.height)n.width=t.width,n.height=t.height;else if(t.resize==="window")n.width=window.innerWidth,n.height=window.innerHeight;else{const h=n.renderer.domElement.parentElement;n.width=h.clientWidth,n.height=h.clientHeight}if(n.renderer.setSize(n.width,n.height),n.camera.aspect=n.width/n.height,n.camera.updateProjectionMatrix(),n.camera instanceof bc){const h=c();n.wWidth=h[0],n.wHeight=h[1]}else n.wWidth=n.camera.top-n.camera.bottom,n.wHeight=n.camera.right-n.camera.left;(u=t.afterResize)==null||u.call(t,n)}function c(){const u=n.camera.fov*Math.PI/180,h=2*Math.tan(u/2)*Math.abs(n.camera.position.z);return[h*n.camera.aspect,h]}}function vc(e){const t={};return["el","canvas","eventsEl","width","height","resize","orbitControls"].forEach(n=>{e[n]!==void 0&&(t[n]=e[n])}),t}function mc(e,t){const n=[];if(Array.isArray(t)&&t.length>0){let r;t.forEach(i=>{switch(i.type){case"ambient":r=new Cf(...i.params);break;case"directional":r=new Lf(...i.params);break;case"point":r=new Af(...i.params);break;default:console.error(`Unknown light type ${i.type}`)}r&&(typeof i.props=="object"&&Object.keys(i.props).forEach(a=>{a==="position"?r.position.set(...i.props[a]):r[a]=i.props[a]}),e.add(r),n.push(r))})}return n}const w0={shaderPoints:8,curvePoints:80,curveLerp:.75,radius1:3,radius2:5,velocityTreshold:10,sleepRadiusX:150,sleepRadiusY:150,sleepTimeCoefX:.0025,sleepTimeCoefY:.0025};function b0(e){const t={...w0,...e},n=new Array(t.curvePoints).fill(0).map(()=>new Ht),r=new Pf(n),i=new gn,a=new gn,o={value:new Ht},s={value:new Ht},l={value:new Array(t.shaderPoints).fill(0).map(()=>new Ht)},c={value:new Ar(16711935)};let u,h,f=!1;const d={};return["el","canvas","width","height","resize"].forEach(p=>{e[p]!==void 0&&(d[p]=e[p])}),Si({...d,antialias:!1,initCamera(p){p.camera=new Rf},initScene({scene:p}){const v=new Da(2,2);u=new Mc({uniforms:{uRatio:o,uSize:s,uPoints:l,uColor:c},defines:{SHADER_POINTS:t.shaderPoints},vertexShader:`
          varying vec2 vUv;
          void main() {
            vUv = uv;
            gl_Position = vec4(position, 1.0);
          }
        `,fragmentShader:`
          // https://www.shadertoy.com/view/wdy3DD
          // https://www.shadertoy.com/view/MlKcDD
          // Signed distance to a quadratic bezier
          float sdBezier(vec2 pos, vec2 A, vec2 B, vec2 C) {
            vec2 a = B - A;
            vec2 b = A - 2.0*B + C;
            vec2 c = a * 2.0;
            vec2 d = A - pos;
            float kk = 1.0 / dot(b,b);
            float kx = kk * dot(a,b);
            float ky = kk * (2.0*dot(a,a)+dot(d,b)) / 3.0;
            float kz = kk * dot(d,a);
            float res = 0.0;
            float p = ky - kx*kx;
            float p3 = p*p*p;
            float q = kx*(2.0*kx*kx - 3.0*ky) + kz;
            float h = q*q + 4.0*p3;
            if(h >= 0.0){
              h = sqrt(h);
              vec2 x = (vec2(h, -h) - q) / 2.0;
              vec2 uv = sign(x)*pow(abs(x), vec2(1.0/3.0));
              float t = uv.x + uv.y - kx;
              t = clamp( t, 0.0, 1.0 );
              // 1 root
              vec2 qos = d + (c + b*t)*t;
              res = length(qos);
            } else {
              float z = sqrt(-p);
              float v = acos( q/(p*z*2.0) ) / 3.0;
              float m = cos(v);
              float n = sin(v)*1.732050808;
              vec3 t = vec3(m + m, -n - m, n - m) * z - kx;
              t = clamp( t, 0.0, 1.0 );
              // 3 roots
              vec2 qos = d + (c + b*t.x)*t.x;
              float dis = dot(qos,qos);
              res = dis;
              qos = d + (c + b*t.y)*t.y;
              dis = dot(qos,qos);
              res = min(res,dis);
              qos = d + (c + b*t.z)*t.z;
              dis = dot(qos,qos);
              res = min(res,dis);
              res = sqrt( res );
            }
            return res;
          }

          uniform vec2 uRatio;
          uniform vec2 uSize;
          uniform vec2 uPoints[SHADER_POINTS];
          uniform vec3 uColor;
          varying vec2 vUv;
          void main() {
            float intensity = 1.0;
            float radius = 0.015;

            vec2 pos = (vUv - 0.5) * uRatio;

            vec2 c = (uPoints[0] + uPoints[1]) / 2.0;
            vec2 c_prev;
            float dist = 10000.0;
            for(int i = 0; i < SHADER_POINTS - 1; i++){
              c_prev = c;
              c = (uPoints[i] + uPoints[i + 1]) / 2.0;
              dist = min(dist, sdBezier(pos, c_prev, uPoints[i], c));
            }
            dist = max(0.0, dist);

            float glow = pow(uSize.y / dist, intensity);
            vec3 col = vec3(0.0);
            col += 10.0 * vec3(smoothstep(uSize.x, 0.0, dist));
            col += glow * uColor;

            // Tone mapping
            col = 1.0 - exp(-col);
            col = pow(col, vec3(0.4545));
  
            gl_FragColor = vec4(col, 1.0);
          }
        `}),h=new Sc(v,u),p.add(h)},afterResize({width:p,height:v}){s.value.set(t.radius1,t.radius2),p>=v?(o.value.set(1,v/p),s.value.multiplyScalar(1/p)):(o.value.set(p/v,1),s.value.multiplyScalar(1/v))},beforeRender({clock:p,width:v,height:m,wWidth:g}){for(let x=1;x<t.curvePoints;x++)n[x].lerp(n[x-1],t.curveLerp);for(let x=0;x<t.shaderPoints;x++)r.getPoint(x/(t.shaderPoints-1),l.value[x]);if(f)c.value.r=i.z,c.value.g=0,c.value.b=1-i.z,i.multiplyScalar(.95);else{const x=p.time*t.sleepTimeCoefX,b=p.time*t.sleepTimeCoefY,S=Math.cos(x),w=Math.sin(b),T=t.sleepRadiusX*g/v,L=t.sleepRadiusY*g/v,I=T*S,C=L*w;r.points[0].set(I,C),c.value.r=.5+.5*Math.cos(p.time*.0015),c.value.g=0,c.value.b=1-c.value.r}},onPointerMove({nPosition:p,delta:v}){f=!0;const m=.5*p.x*o.value.x,g=.5*p.y*o.value.y;r.points[0].set(m,g),a.x=Math.min(i.x+Math.abs(v.x)/t.velocityTreshold,1),a.y=Math.min(i.y+Math.abs(v.y)/t.velocityTreshold,1),a.z=Math.sqrt(a.x*a.x+a.y*a.y),i.lerp(a,.05)},onPointerLeave(){f=!1}}),{config:t}}var ls=function(e,t,n){this.variables=[],this.currentTextureIndex=0;var r=new xn,i=new sn;i.position.z=1;var a={passThruTexture:{value:null}},o=c(h(),a),s=new $e(new Sn(2,2),o);r.add(s),this.addVariable=function(f,d,p){var v=this.createShaderMaterial(d),m={name:f,initialValueTexture:p,material:v,dependencies:null,renderTargets:[],wrapS:null,wrapT:null,minFilter:tt,magFilter:tt};return this.variables.push(m),m},this.setVariableDependencies=function(f,d){f.dependencies=d},this.init=function(){if(!n.capabilities.isWebGL2&&!n.extensions.get("OES_texture_float"))return"No OES_texture_float support for float textures.";if(n.capabilities.maxVertexTextures===0)return"No support for vertex shader textures.";for(var f=0;f<this.variables.length;f++){var d=this.variables[f];d.renderTargets[0]=this.createRenderTarget(e,t,d.wrapS,d.wrapT,d.minFilter,d.magFilter),d.renderTargets[1]=this.createRenderTarget(e,t,d.wrapS,d.wrapT,d.minFilter,d.magFilter),this.renderTexture(d.initialValueTexture,d.renderTargets[0]),this.renderTexture(d.initialValueTexture,d.renderTargets[1]);var p=d.material,v=p.uniforms;if(d.dependencies!==null)for(var m=0;m<d.dependencies.length;m++){var g=d.dependencies[m];if(g.name!==d.name){for(var x=!1,b=0;b<this.variables.length;b++)if(g.name===this.variables[b].name){x=!0;break}if(!x)return"Variable dependency not found. Variable="+d.name+", dependency="+g.name}v[g.name]={value:null},p.fragmentShader=`
uniform sampler2D `+g.name+`;
`+p.fragmentShader}}return this.currentTextureIndex=0,null},this.compute=function(){for(var f=this.currentTextureIndex,d=this.currentTextureIndex===0?1:0,p=0,v=this.variables.length;p<v;p++){var m=this.variables[p];if(m.dependencies!==null)for(var g=m.material.uniforms,x=0,b=m.dependencies.length;x<b;x++){var S=m.dependencies[x];g[S.name].value=S.renderTargets[f].texture}this.doRenderTarget(m.material,m.renderTargets[d])}this.currentTextureIndex=d},this.getCurrentRenderTarget=function(f){return f.renderTargets[this.currentTextureIndex]},this.getAlternateRenderTarget=function(f){return f.renderTargets[this.currentTextureIndex===0?1:0]};function l(f){f.defines.resolution="vec2( "+e.toFixed(1)+", "+t.toFixed(1)+" )"}this.addResolutionDefine=l;function c(f,d){d=d||{};var p=new rt({uniforms:d,vertexShader:u(),fragmentShader:f});return l(p),p}this.createShaderMaterial=c,this.createRenderTarget=function(f,d,p,v,m,g){f=f||e,d=d||t,p=p||yt,v=v||yt,m=m||tt,g=g||tt;var x=new vt(f,d,{wrapS:p,wrapT:v,minFilter:m,magFilter:g,format:Tt,type:/(iPad|iPhone|iPod)/g.test(navigator.userAgent)?Pi:tn,stencilBuffer:!1,depthBuffer:!1});return x},this.createTexture=function(){var f=new Float32Array(e*t*4);return new sr(f,e,t,Tt,tn)},this.renderTexture=function(f,d){a.passThruTexture.value=f,this.doRenderTarget(o,d),a.passThruTexture.value=null},this.doRenderTarget=function(f,d){var p=n.getRenderTarget();s.material=f,n.setRenderTarget(d),n.render(r,i),s.material=o,n.setRenderTarget(p)};function u(){return`void main()	{

	gl_Position = vec4( position, 1.0 );

}
`}function h(){return`uniform sampler2D passThruTexture;

void main() {

	vec2 uv = gl_FragCoord.xy / resolution.xy;

	gl_FragColor = texture2D( passThruTexture, uv );

}
`}};function Aa(e){let t=[];r(e);const n=new Ar;return{setColors:r,getColorAt:i};function r(a){t=[],a.forEach(o=>{t.push(new Ar(o))})}function i(a){const o=Math.max(0,Math.min(1,a))*(e.length-1),s=Math.floor(o),l=t[s];if(s>=e.length-1)return l.clone();const c=o-s,u=t[s+1];return n.r=l.r+c*(u.r-l.r),n.g=l.g+c*(u.g-l.g),n.b=l.b+c*(u.b-l.b),n.clone()}}var Mr=`vec4 permute(vec4 x){vec4 xm=mod(x,289.0);return mod(((xm*34.0)+10.0)*xm,289.0);}float psrdnoise(vec3 x,vec3 period,float alpha,out vec3 gradient){
#ifndef PERLINGRID
const mat3 M=mat3(0.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,0.0);const mat3 Mi=mat3(-0.5,0.5,0.5,0.5,-0.5,0.5,0.5,0.5,-0.5);
#endif
vec3 uvw;
#ifndef PERLINGRID
uvw=M*x;
#else
uvw=x+dot(x,vec3(1.0/3.0));
#endif
vec3 i0=floor(uvw);vec3 f0=fract(uvw);vec3 g_=step(f0.xyx,f0.yzz);vec3 l_=1.0-g_;vec3 g=vec3(l_.z,g_.xy);vec3 l=vec3(l_.xy,g_.z);vec3 o1=min(g,l);vec3 o2=max(g,l);vec3 i1=i0+o1;vec3 i2=i0+o2;vec3 i3=i0+vec3(1.0);vec3 v0,v1,v2,v3;
#ifndef PERLINGRID
v0=Mi*i0;v1=Mi*i1;v2=Mi*i2;v3=Mi*i3;
#else
v0=i0-dot(i0,vec3(1.0/6.0));v1=i1-dot(i1,vec3(1.0/6.0));v2=i2-dot(i2,vec3(1.0/6.0));v3=i3-dot(i3,vec3(1.0/6.0));
#endif
vec3 x0=x-v0;vec3 x1=x-v1;vec3 x2=x-v2;vec3 x3=x-v3;if(any(greaterThan(period,vec3(0.0)))){vec4 vx=vec4(v0.x,v1.x,v2.x,v3.x);vec4 vy=vec4(v0.y,v1.y,v2.y,v3.y);vec4 vz=vec4(v0.z,v1.z,v2.z,v3.z);if(period.x>0.0)vx=mod(vx,period.x);if(period.y>0.0)vy=mod(vy,period.y);if(period.z>0.0)vz=mod(vz,period.z);
#ifndef PERLINGRID
i0=M*vec3(vx.x,vy.x,vz.x);i1=M*vec3(vx.y,vy.y,vz.y);i2=M*vec3(vx.z,vy.z,vz.z);i3=M*vec3(vx.w,vy.w,vz.w);
#else
v0=vec3(vx.x,vy.x,vz.x);v1=vec3(vx.y,vy.y,vz.y);v2=vec3(vx.z,vy.z,vz.z);v3=vec3(vx.w,vy.w,vz.w);i0=v0+dot(v0,vec3(1.0/3.0));i1=v1+dot(v1,vec3(1.0/3.0));i2=v2+dot(v2,vec3(1.0/3.0));i3=v3+dot(v3,vec3(1.0/3.0));
#endif
i0=floor(i0+0.5);i1=floor(i1+0.5);i2=floor(i2+0.5);i3=floor(i3+0.5);}vec4 hash=permute(permute(permute(vec4(i0.z,i1.z,i2.z,i3.z))+vec4(i0.y,i1.y,i2.y,i3.y))+vec4(i0.x,i1.x,i2.x,i3.x));vec4 theta=hash*3.883222077;vec4 sz=hash*-0.006920415+0.996539792;vec4 psi=hash*0.108705628;vec4 Ct=cos(theta);vec4 St=sin(theta);vec4 sz_prime=sqrt(1.0-sz*sz);vec4 gx,gy,gz;
#ifdef FASTROTATION
vec4 qx=St;vec4 qy=-Ct;vec4 qz=vec4(0.0);vec4 px=sz*qy;vec4 py=-sz*qx;vec4 pz=sz_prime;psi+=alpha;vec4 Sa=sin(psi);vec4 Ca=cos(psi);gx=Ca*px+Sa*qx;gy=Ca*py+Sa*qy;gz=Ca*pz+Sa*qz;
#else
if(alpha!=0.0){vec4 Sp=sin(psi);vec4 Cp=cos(psi);vec4 px=Ct*sz_prime;vec4 py=St*sz_prime;vec4 pz=sz;vec4 Ctp=St*Sp-Ct*Cp;vec4 qx=mix(Ctp*St,Sp,sz);vec4 qy=mix(-Ctp*Ct,Cp,sz);vec4 qz=-(py*Cp+px*Sp);vec4 Sa=vec4(sin(alpha));vec4 Ca=vec4(cos(alpha));gx=Ca*px+Sa*qx;gy=Ca*py+Sa*qy;gz=Ca*pz+Sa*qz;}else{gx=Ct*sz_prime;gy=St*sz_prime;gz=sz;}
#endif
vec3 g0=vec3(gx.x,gy.x,gz.x);vec3 g1=vec3(gx.y,gy.y,gz.y);vec3 g2=vec3(gx.z,gy.z,gz.z);vec3 g3=vec3(gx.w,gy.w,gz.w);vec4 w=0.5-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3));w=max(w,0.0);vec4 w2=w*w;vec4 w3=w2*w;vec4 gdotx=vec4(dot(g0,x0),dot(g1,x1),dot(g2,x2),dot(g3,x3));float n=dot(w3,gdotx);vec4 dw=-6.0*w2*gdotx;vec3 dn0=w3.x*g0+dw.x*x0;vec3 dn1=w3.y*g1+dw.y*x1;vec3 dn2=w3.z*g2+dw.z*x2;vec3 dn3=w3.w*g3+dw.w*x3;gradient=39.5*(dn0+dn1+dn2+dn3);return 39.5*n;}`;const{randFloat:lf,randFloatSpread:cf}=Le,M0={gpgpuSize:256,centerColor:355441,edgeColor:12852,colors:[16284204,16284204,16284204],color:16284204,coordScale:1.5,noiseIntensity:.001,noiseTimeCoef:1e-4,pointSize:5,pointDecay:.005,sleepRadiusX:250,sleepRadiusY:250,sleepTimeCoefX:.001,sleepTimeCoefY:.002,hover:0,position:[{x:0,y:0,time:1e3}]};function S0(e){const t={...M0,...e},n=t.gpgpuSize,r=n*n;let i,a,o,s,l;const c={value:0},u={value:t.coordScale},h={value:t.noiseIntensity},f={value:t.pointSize},d={value:t.pointDecay},p={value:new ie(t.color)},v={value:new j},m={value:new j},g={uTime:c,uCoordScale:u,uNoiseIntensity:h,uPointSize:f,uPointDecay:d,uColor:p,uMouse:v,uMouseDirection:m};let x,b,S,w=t.hover;const T=new j;var L=0;const I=t.position;let C={x:0,y:0};Si({...T0(e),alpha:!0,antialias:!1,initRenderer({renderer:F}){F.setClearColor(0,0),N(F)},initScene({scene:F}){B(),F.background=null,F.add(S)},beforeRender({width:F,wWidth:R,wHeight:G,clock:k,pointer:q}){var H,V;w?(T.x=q.nPosition.x*.5*R,T.y=q.nPosition.y*.5*G):(T.x=(H=C.x)!=null?H:0,T.y=(V=C.y)!=null?V:0),v.value.lerp(T,.05),c.value=k.time*t.noiseTimeCoef,i.compute(),b.uniforms.texturePosition.value=i.getCurrentRenderTarget(l).texture,b.uniforms.textureVelocity.value=i.getCurrentRenderTarget(s).texture},onPointerMove({delta:F}){m.value.copy(F)},onPointerLeave(){}});function z(){if(L<I.length){const F=I[L];C.x=F.x,C.y=F.y,setTimeout(()=>{console.log(L);const R=new MouseEvent("mousemove",{clientX:F.x,clientY:F.y});document.dispatchEvent(R),L++,z()},F.time)}}return z(),{config:t,uniforms:g};function N(F){i=new ls(n,n,F),a=i.createTexture(),o=i.createTexture(),U(a,o),s=i.addVariable("textureVelocity",`
      ${Mr}
      uniform float uTime;
      uniform float uCoordScale;
      uniform float uNoiseIntensity;
      void main() {
        vec2 uv = gl_FragCoord.xy / resolution.xy;
        vec4 pos = texture2D(texturePosition, uv);
        vec4 vel = texture2D(textureVelocity, uv);

        if (pos.w < 0.0) {
          vel.x = 0.0;
          vel.y = 0.0;
          vel.z = 0.0;
        } else {
          vec3 grad;
          vec3 p = vec3(0.0);
          float n = psrdnoise(pos.xyz * uCoordScale, p, uTime, grad);
          vel.xyz += grad * uNoiseIntensity * pos.w;
        }
        gl_FragColor = vel;
      }
    `,o),l=i.addVariable("texturePosition",`
      uniform float uPointDecay;
      uniform vec2 uMouse;
      uniform vec2 uMouseDirection;
      void main() {
        vec2 uv = gl_FragCoord.xy / resolution.xy;
        vec4 pos = texture2D(texturePosition, uv);
        vec4 vel = texture2D(textureVelocity, uv);
        if (pos.w < 0.0) { pos.w = vel.w; }
        pos.w -= uPointDecay;
        if (pos.w <= 0.0) {
          pos.xy = uMouse.xy;
          pos.z = 0.0;
        } else {
          pos.xyz += vel.xyz;
        }
        gl_FragColor = pos;
      }
    `,a),i.setVariableDependencies(s,[l,s]),i.setVariableDependencies(l,[l,s]),Object.keys(g).forEach(G=>{s.material.uniforms[G]=g[G],l.material.uniforms[G]=g[G]});const R=i.init();R!==null&&console.error(R)}function B(){x=new se;const F=new Float32Array(r*3),R=new Float32Array(r*2),G=new Float32Array(r*3);for(let H=0;H<r*3;H+=3)F[H]=0,F[H+1]=0,F[H+2]=0;let k=0;for(let H=0;H<n;H++)for(let V=0;V<n;V++)R[k++]=V/(n-1),R[k++]=H/(n-1);const q=Aa(t.colors);for(let H=0;H<r*3;H+=3){const V=q.getColorAt(Math.random());G[H]=V.r,G[H+1]=V.g,G[H+2]=V.b}x.setAttribute("position",new _e(F,3)),x.setAttribute("uv",new _e(R,2)),x.setAttribute("color",new _e(G,3)),b=new rt({blending:Ia,depthTest:!1,transparent:!0,vertexColors:!0,uniforms:{texturePosition:{value:null},textureVelocity:{value:null},uPointSize:f,uColor:p},vertexShader:`
        uniform sampler2D texturePosition;
        uniform sampler2D textureVelocity;
        uniform float uPointSize;
        varying vec4 vPos;
        varying vec4 vVel;
        varying vec3 vCol;
        void main() {
          vCol = color;
          vPos = texture2D(texturePosition, uv);
          vVel = texture2D(textureVelocity, uv);
          vec4 mvPosition = modelViewMatrix * vec4(vPos.xyz, 1.0);
          // gl_PointSize = smoothstep(0.0, 2.0, vPos.w) * uPointSize;
          gl_PointSize = vPos.w * (vVel.w + 0.5) * uPointSize;
          gl_Position = projectionMatrix * mvPosition;
        }
      `,fragmentShader:`
        uniform vec3 uColor;
        varying vec4 vPos;
        varying vec4 vVel;
        varying vec3 vCol;
        void main() {
          float dist = length(gl_PointCoord - 0.5);
          if (dist > 0.5) discard;
          // float a = smoothstep(0.0, 1.0, vPos.w);
          gl_FragColor = vec4(mix(vCol, uColor, vPos.w), vPos.w);
        }
      `}),S=new So(x,b),S.matrixAutoUpdate=!1,S.updateMatrix()}function U(F,R){const G=F.image.data,k=R.image.data;for(let q=0,H=G.length;q<H;q+=4)G[q+0]=cf(1),G[q+1]=cf(1),G[q+2]=-1e5,G[q+3]=lf(.1,1),k[q+0]=0,k[q+1]=0,k[q+2]=0,k[q+3]=lf(.1,1)}}function T0(e){const t={};return["el","canvas","width","height","resize"].forEach(n=>{e[n]!==void 0&&(t[n]=e[n])}),t}const E0={width:256,height:256};function A0(e){const t={...E0,...e},n=document.createElement("canvas");n.width=t.width,n.height=t.height;const r=n.getContext("2d"),i=new Df(r.canvas);return{canvas:n,ctx:r,texture:i}}var L0="float psrdnoise(vec2 x,vec2 period,float alpha,out vec2 gradient){vec2 uv=vec2(x.x+x.y*0.5,x.y);vec2 i0=floor(uv);vec2 f0=fract(uv);float cmp=step(f0.y,f0.x);vec2 o1=vec2(cmp,1.0-cmp);vec2 i1=i0+o1;vec2 i2=i0+vec2(1.0,1.0);vec2 v0=vec2(i0.x-i0.y*0.5,i0.y);vec2 v1=vec2(v0.x+o1.x-o1.y*0.5,v0.y+o1.y);vec2 v2=vec2(v0.x+0.5,v0.y+1.0);vec2 x0=x-v0;vec2 x1=x-v1;vec2 x2=x-v2;vec3 iu,iv;vec3 xw,yw;if(any(greaterThan(period,vec2(0.0)))){xw=vec3(v0.x,v1.x,v2.x);yw=vec3(v0.y,v1.y,v2.y);if(period.x>0.0)xw=mod(vec3(v0.x,v1.x,v2.x),period.x);if(period.y>0.0)yw=mod(vec3(v0.y,v1.y,v2.y),period.y);iu=floor(xw+0.5*yw+0.5);iv=floor(yw+0.5);}else{iu=vec3(i0.x,i1.x,i2.x);iv=vec3(i0.y,i1.y,i2.y);}vec3 hash=mod(iu,289.0);hash=mod((hash*51.0+2.0)*hash+iv,289.0);hash=mod((hash*34.0+10.0)*hash,289.0);vec3 psi=hash*0.07482+alpha;vec3 gx=cos(psi);vec3 gy=sin(psi);vec2 g0=vec2(gx.x,gy.x);vec2 g1=vec2(gx.y,gy.y);vec2 g2=vec2(gx.z,gy.z);vec3 w=0.8-vec3(dot(x0,x0),dot(x1,x1),dot(x2,x2));w=max(w,0.0);vec3 w2=w*w;vec3 w4=w2*w2;vec3 gdotx=vec3(dot(g0,x0),dot(g1,x1),dot(g2,x2));float n=dot(w4,gdotx);vec3 w3=w2*w;vec3 dw=-8.0*w3*gdotx;vec2 dn0=w4.x*g0+dw.x*x0;vec2 dn1=w4.y*g1+dw.y*x1;vec2 dn2=w4.z*g2+dw.z*x2;gradient=10.9*(dn0+dn1+dn2);return 10.9*n;}";const C0={colors:[16777215,0],minStroke:5,maxStroke:5,timeCoef:5e-4,coordScale:2,displacementScale:.002,mouseScale:.25,mouseLerp:.025};function P0(e){const t={...C0,...e},n=A0({width:1,height:4096});c();const r={uMap:{value:n.texture},uTime:{value:0},uCoordScale:{value:t.coordScale},uDisplacementScale:{value:t.displacementScale},uMouse:{value:new Ht}},i=new Da,a=new Mc({uniforms:r,vertexShader:`
      varying vec2 vUv;
      void main() {
        vUv = uv;
        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
      }
    `,fragmentShader:`
      uniform sampler2D uMap;
      uniform float uTime;
      uniform float uCoordScale;
      uniform float uDisplacementScale;
      uniform vec2 uMouse;
      varying vec2 vUv;
      ${L0}
      void main() {
        vec2 p = vec2(0.0);
        vec2 grad;
        float n = psrdnoise(vUv * uCoordScale + uMouse, p, uTime, grad);
        // grad *= uCoordScale;
        vec2 uv = vUv + uDisplacementScale * grad;
        gl_FragColor = texture2D(uMap, uv.yx);
      }
    `}),o=new Sc(i,a),s=new Ht,l={};return["el","canvas","width","height","resize"].forEach(u=>{e[u]!==void 0&&(l[u]=e[u])}),Si({...l,antialias:!0,initScene({camera:u,scene:h,wWidth:f,wHeight:d}){o.scale.set(f*2,d*2,1),h.add(o),u.position.set(0,-30,7),u.lookAt(0,-19,0)},beforeRender({clock:u}){r.uTime.value=u.time*t.timeCoef,r.uMouse.value.lerp(s,t.mouseLerp)},onPointerMove({nPosition:u}){s.set(-u.x,u.y).multiplyScalar(t.mouseScale)},onPointerLeave(){s.set(0,0)}}),{config:t,uniforms:r,drawTexture:c};function c(){const u=n.ctx;u.lineWidth=0;const{width:h,height:f}=n.canvas,d=Aa(t.colors);let p=0,v;for(;p<f;)v=t.minStroke+Math.random()*(t.maxStroke-t.minStroke),u.fillStyle=d.getColorAt(Math.random()).getStyle(),u.beginPath(),u.rect(0,p-1,h,v+1),u.fill(),u.closePath(),p+=v;n.texture.needsUpdate=!0}}var gc="mat3 lookAt(vec3 origin,vec3 target,vec3 up){vec3 z=target-origin;if(z.x*z.x+z.y*z.y+z.z*z.z==0.0){z.z=1.0;}z=normalize(z);vec3 x=cross(up,z);if(x.x*x.x+x.y*x.y+x.z*x.z==0.0){if(abs(up.z)==1.0){z.x+=0.0001;}else{z.z+=0.0001;}x=cross(up,z);}x=normalize(x);vec3 y=cross(z,x);return mat3(x,y,z);}",yc="mat4 compose(vec3 pos,mat3 rmat,vec3 scale){return mat4(rmat[0][0]*scale.x,rmat[0][1]*scale.x,rmat[0][2]*scale.x,0.0,rmat[1][0]*scale.y,rmat[1][1]*scale.y,rmat[1][2]*scale.y,0.0,rmat[2][0]*scale.z,rmat[2][1]*scale.z,rmat[2][2]*scale.z,0.0,pos.x,pos.y,pos.z,1.0);}";const{randFloat:R0,randFloatSpread:Qn}=xs,D0={gpgpuSize:64,background:16777215,material:"basic",materialParams:{},texture:null,textureCount:1,colors:[16777215,16777215],lights:[{type:"ambient",params:[16777215,.5]},{type:"directional",params:[16777215,1],props:{position:[0,10,0]}}],wingsScale:[1,1,1],wingsWidthSegments:8,wingsHeightSegments:8,wingsSpeed:.75,wingsDisplacementScale:1.25,noiseCoordScale:.01,noiseTimeCoef:5e-4,noiseIntensity:.0025,attractionRadius1:100,attractionRadius2:150,maxVelocity:.1};function O0(e){const t={...D0,...e};if(!["basic","phong","standard"].includes(t.material))throw new Error(`Invalid material ${t.material}`);if(!Number.isInteger(t.wingsWidthSegments)||t.wingsWidthSegments%2!==0)throw new Error(`Invalid wingsWidthSegments ${t.wingsWidthSegments}`);const n=t.gpgpuSize,r=n*n;let i,a,o,s,l;const c={value:null},u={value:null},h={value:null},f={value:0},d={value:t.noiseCoordScale},p={value:t.noiseIntensity},v={value:t.maxVelocity},m={value:t.attractionRadius1},g={value:t.attractionRadius2},x={value:new gn(...t.wingsScale)},b={value:t.wingsSpeed},S={value:t.wingsDisplacementScale},w={uTexturePosition:c,uOldTexturePosition:u,uTextureVelocity:h},T={uTime:f,uNoiseCoordScale:d,uNoiseIntensity:p,uMaxVelocity:v,uAttractionRadius1:m,uAttractionRadius2:g,uWingsScale:x,uWingsSpeed:b,uWingsDisplacementScale:S},L={...w,...T};let I,C,z;return{three:Si({...vc(e),antialias:!0,orbitControls:!0,initRenderer({renderer:R}){N(R)},initCamera({camera:R}){R.position.set(0,50,70)},initScene({scene:R}){B(R)},beforeRender({clock:R}){f.value=R.time*t.noiseTimeCoef,i.compute(),c.value=l.renderTargets[i.currentTextureIndex].texture,u.value=l.renderTargets[i.currentTextureIndex===0?1:0].texture,h.value=s.renderTargets[i.currentTextureIndex].texture}}),config:t,uniforms:L,setColors:U};function N(R){i=new ls(n,n,R),R.capabilities.isWebGL2||i.setDataType(vs),a=i.createTexture(),o=i.createTexture(),F(a,o),s=i.addVariable("textureVelocity",`
      ${Mr}
      uniform float uTime;
      uniform float uNoiseCoordScale;
      uniform float uNoiseIntensity;
      uniform float uMaxVelocity;
      uniform float uAttractionRadius1;
      uniform float uAttractionRadius2;
      uniform float uWingsSpeed;
      void main() {
        vec2 uv = gl_FragCoord.xy / resolution.xy;
        vec4 pos = texture2D(texturePosition, uv);
        vec4 vel = texture2D(textureVelocity, uv);

        vec3 grad;
        float n = psrdnoise(pos.xyz * uNoiseCoordScale, vec3(0), uTime, grad);
        grad = grad * uNoiseIntensity;
        vel.xyz = vel.xyz + (pos.w * 0.75) * grad;

        vec3 dv = -pos.xyz;
        float coef = smoothstep(uAttractionRadius1, uAttractionRadius2, length(dv));
        vel.xyz = vel.xyz + pos.w * coef * normalize(dv);
        vel.xyz = clamp(vel.xyz, -uMaxVelocity, uMaxVelocity);

        vel.w = mod(vel.w + length(vel.xyz) * (0.5 + pos.w) * uWingsSpeed, 6.2831853071);
        gl_FragColor = vel;
      }
    `,o),l=i.addVariable("texturePosition",`
      ${Mr}
      uniform float uTime;
      void main() {
        vec2 uv = gl_FragCoord.xy / resolution.xy;
        vec4 pos = texture2D(texturePosition, uv);
        vec4 vel = texture2D(textureVelocity, uv);
        pos.xyz += vel.xyz;
        gl_FragColor = pos;
      }
    `,a),i.setVariableDependencies(s,[l,s]),i.setVariableDependencies(l,[l,s]),Object.keys(T).forEach(k=>{s.material.uniforms[k]=L[k],l.material.uniforms[k]=L[k]});const G=i.init();if(G!==null)throw new Error(G)}function B(R){t.background!==void 0&&(R.background=new Ar(t.background)),mc(R,t.lights),I=new Da(2,2,t.wingsWidthSegments,t.wingsHeightSegments).rotateX(Math.PI/2);const G=new Float32Array(r*2),k=new Float32Array(r);let q=0,H=0;for(let W=0;W<n;W++)for(let le=0;le<n;le++)G[q++]=le/(n-1),G[q++]=W/(n-1),k[H++]=Math.floor(Math.random()*t.textureCount);I.setAttribute("gpuUv",new Ti(G,2)),I.setAttribute("mapIndex",new Ti(k,1));const V={side:ms,...t.materialParams};switch(t.texture&&(V.map=new Tc().load(t.texture)),V.onBeforeCompile=W=>{W.defines={COMPUTE_NORMALS:t.material!=="basic",WINGS_WIDTH_SEGMENTS:t.wingsWidthSegments,WINGS_HEIGHT_SEGMENTS:t.wingsHeightSegments,WINGS_DX:(2/t.wingsWidthSegments).toFixed(10),WINGS_DZ:(2/t.wingsHeightSegments).toFixed(10),TEXTURE_COUNT:t.textureCount.toFixed(10)},Object.keys(L).forEach(le=>{W.uniforms[le]=L[le]}),W.vertexShader=`
        uniform sampler2D uTexturePosition;
        uniform sampler2D uOldTexturePosition;
        uniform sampler2D uTextureVelocity;
        uniform vec3 uWingsScale;
        uniform float uWingsDisplacementScale;
        attribute vec2 gpuUv;
        attribute float mapIndex;
        varying vec4 vPos;
        varying vec4 vVel;
        varying float vMapIndex;
        ${gc}
        ${yc}
      `+W.vertexShader,W.vertexShader=W.vertexShader.replace("#include <defaultnormal_vertex>",""),W.vertexShader=W.vertexShader.replace("#include <normal_vertex>",""),W.vertexShader=W.vertexShader.replace("#include <begin_vertex>",`
        vPos = texture2D(uTexturePosition, gpuUv);
        vec4 oldPos = texture2D(uOldTexturePosition, gpuUv);
        vVel = texture2D(uTextureVelocity, gpuUv);
        vMapIndex = float(mapIndex);

        mat3 rmat = lookAt(oldPos.xyz, vPos.xyz, vec3(0, 1, 0));
        mat4 im = compose(vPos.xyz, rmat, (0.5 + vPos.w) * uWingsScale);

        vec3 transformed = vec3(position);

        #ifdef COMPUTE_NORMALS
          vec3 transformedNormal = objectNormal; 
        #endif

        float dx = abs(transformed.x);
        if (dx > 0.0) {
          float sdx = smoothstep(0.0, 1.0 + WINGS_DX, dx);
          #if WINGS_HEIGHT_SEGMENTS > 1
            float dz = transformed.z + 1.0;
            float sdz = smoothstep(0.0, 2.0 + WINGS_DZ, dz);
            transformed.y = sin(vVel.w - sdx + sdz) * sdx * uWingsDisplacementScale;
          #else
            transformed.y = sin(vVel.w - sdx) * sdx * uWingsDisplacementScale;
          #endif

          #ifdef COMPUTE_NORMALS
            #if WINGS_HEIGHT_SEGMENTS > 1
              float s = sign(transformed.x);
              float sdx1 = smoothstep(0.0, 1.0 + WINGS_DX, dx + WINGS_DX);
              float sdz1 = smoothstep(0.0, 2.0 + WINGS_DZ, dz + WINGS_DZ);
              float dvy1 = sin(vVel.w - sdx + sdz1) * sdx * uWingsDisplacementScale - transformed.y;
              float dvy2 = sin(vVel.w - sdx1 + sdz) * sdx1 * uWingsDisplacementScale - transformed.y;
              vec3 v1 = vec3(0.0, dvy1, s * WINGS_DZ);
              vec3 v2 = vec3(s * WINGS_DX, dvy2, 0.0);
              transformedNormal = -normalize(cross(v1, v2));
            #else
              float s = sign(transformed.x);
              float sdx1 = smoothstep(0.0, 1.0 + WINGS_DX, dx + WINGS_DX);
              float dvy1 = sin(vVel.w - sdx1) * sdx * uWingsDisplacementScale - transformed.y;
              vec3 v1 = vec3(0.0, 0.0, s);
              vec3 v2 = vec3(s * WINGS_DX, dvy1, 0.0);
              transformedNormal = -normalize(cross(v1, v2));
            #endif  
          #endif
        }

        #ifdef COMPUTE_NORMALS
          #ifdef USE_INSTANCING
            mat3 m = mat3( im );
            transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
            transformedNormal = m * transformedNormal;
          #endif
          transformedNormal = normalMatrix * transformedNormal;
          #ifdef FLIP_SIDED
            transformedNormal = - transformedNormal;
          #endif
          #ifdef USE_TANGENT
            vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
            #ifdef FLIP_SIDED
              transformedTangent = - transformedTangent;
            #endif
          #endif
          #ifndef FLAT_SHADED
            vNormal = normalize( transformedNormal );
            #ifdef USE_TANGENT
              vTangent = normalize( transformedTangent );
              vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
            #endif
          #endif
        #endif
      `),W.vertexShader=W.vertexShader.replace("#include <project_vertex>",`
        vec4 mvPosition = vec4( transformed, 1.0 );
        #ifdef USE_INSTANCING
          mvPosition = im * mvPosition;
        #endif
        mvPosition = modelViewMatrix * mvPosition;
        gl_Position = projectionMatrix * mvPosition;
      `),W.fragmentShader=`
        varying float vMapIndex;
      `+W.fragmentShader,W.fragmentShader=W.fragmentShader.replace("#include <map_fragment>",`
        #ifdef USE_MAP
          vec2 uv = vUv;
          uv.x = (vMapIndex + vUv.x) / TEXTURE_COUNT;
          vec4 sampledDiffuseColor = texture2D(map, uv);
          diffuseColor *= sampledDiffuseColor;
        #endif
      `)},t.material){case"standard":C=new gs(V);break;case"phong":C=new Ac(V);break;default:C=new Ec(V)}z=new ys(I,C,r),U(t.colors),R.add(z)}function U(R){if(Array.isArray(R)&&R.length>1){const G=Aa(R);for(let k=0;k<r;k++)z.setColorAt(k,G.getColorAt(k/r));z.instanceColor.needsUpdate=!0}}function F(R,G){const k=new gn,q=R.image.data,H=G.image.data;for(let V=0,W=q.length;V<W;V+=4)k.set(Qn(1),Qn(1),Qn(1)).normalize().multiplyScalar(Qn(t.attractionRadius1*2)).toArray(q,V),q[V+3]=R0(.1,1),k.set(Qn(1),Qn(1),Qn(1)).normalize().multiplyScalar(Qn(.5)).toArray(H,V),H[V+3]=0}}var cs={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","	vUv = uv;","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join(`
`),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","	vec4 texel = texture2D( tDiffuse, vUv );","	gl_FragColor = opacity * texel;","}"].join(`
`)};function Pt(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}Object.assign(Pt.prototype,{setSize:function(){},render:function(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}),Pt.FullScreenQuad=function(){var e=new mr(-1,1,1,-1,0,1),t=new Sn(2,2),n=function(r){this._mesh=new $e(t,r)};return Object.defineProperty(n.prototype,"material",{get:function(){return this._mesh.material},set:function(r){this._mesh.material=r}}),Object.assign(n.prototype,{dispose:function(){this._mesh.geometry.dispose()},render:function(r){r.render(this._mesh,e)}}),n}();var us=function(e,t){Pt.call(this),this.textureID=t!==void 0?t:"tDiffuse",e instanceof rt?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=lo.clone(e.uniforms),this.material=new rt({defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new Pt.FullScreenQuad(this.material)};us.prototype=Object.assign(Object.create(Pt.prototype),{constructor:us,render:function(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}});var hs=function(e,t){Pt.call(this),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1};hs.prototype=Object.assign(Object.create(Pt.prototype),{constructor:hs,render:function(e,t,n){var r=e.getContext(),i=e.state;i.buffers.color.setMask(!1),i.buffers.depth.setMask(!1),i.buffers.color.setLocked(!0),i.buffers.depth.setLocked(!0);var a,o;this.inverse?(a=0,o=1):(a=1,o=0),i.buffers.stencil.setTest(!0),i.buffers.stencil.setOp(r.REPLACE,r.REPLACE,r.REPLACE),i.buffers.stencil.setFunc(r.ALWAYS,a,4294967295),i.buffers.stencil.setClear(o),i.buffers.stencil.setLocked(!0),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),i.buffers.color.setLocked(!1),i.buffers.depth.setLocked(!1),i.buffers.stencil.setLocked(!1),i.buffers.stencil.setFunc(r.EQUAL,1,4294967295),i.buffers.stencil.setOp(r.KEEP,r.KEEP,r.KEEP),i.buffers.stencil.setLocked(!0)}});var xc=function(){Pt.call(this),this.needsSwap=!1};xc.prototype=Object.create(Pt.prototype),Object.assign(xc.prototype,{render:function(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}});var uf=function(e,t){if(this.renderer=e,t===void 0){var n={minFilter:nt,magFilter:nt,format:Tt,stencilBuffer:!1},r=e.getSize(new j);this._pixelRatio=e.getPixelRatio(),this._width=r.width,this._height=r.height,t=new vt(this._width*this._pixelRatio,this._height*this._pixelRatio,n),t.texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],cs===void 0&&console.error("THREE.EffectComposer relies on CopyShader"),us===void 0&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new us(cs),this.clock=new $l};Object.assign(uf.prototype,{swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e},addPass:function(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)},insertPass:function(e,t){this.passes.splice(t,0,e)},isLastEnabledPass:function(e){for(var t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0},render:function(e){e===void 0&&(e=this.clock.getDelta());var t=this.renderer.getRenderTarget(),n=!1,r,i,a=this.passes.length;for(i=0;i<a;i++)if(r=this.passes[i],r.enabled!==!1){if(r.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i),r.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),r.needsSwap){if(n){var o=this.renderer.getContext(),s=this.renderer.state.buffers.stencil;s.setFunc(o.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),s.setFunc(o.EQUAL,1,4294967295)}this.swapBuffers()}hs!==void 0&&(r instanceof hs?n=!0:r instanceof xc&&(n=!1))}this.renderer.setRenderTarget(t)},reset:function(e){if(e===void 0){var t=this.renderer.getSize(new j);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(e,t){this._width=e,this._height=t;var n=this._width*this._pixelRatio,r=this._height*this._pixelRatio;this.renderTarget1.setSize(n,r),this.renderTarget2.setSize(n,r);for(var i=0;i<this.passes.length;i++)this.passes[i].setSize(n,r)},setPixelRatio:function(e){this._pixelRatio=e,this.setSize(this._width,this._height)}});var hf=function(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1};Object.assign(hf.prototype,{setSize:function(){},render:function(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}),hf.FullScreenQuad=function(){var e=new mr(-1,1,1,-1,0,1),t=new Sn(2,2),n=function(r){this._mesh=new $e(t,r)};return Object.defineProperty(n.prototype,"material",{get:function(){return this._mesh.material},set:function(r){this._mesh.material=r}}),Object.assign(n.prototype,{dispose:function(){this._mesh.geometry.dispose()},render:function(r){r.render(this._mesh,e)}}),n}();var _c=function(e,t,n,r,i){Pt.call(this),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=r,this.clearAlpha=i!==void 0?i:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1};_c.prototype=Object.assign(Object.create(Pt.prototype),{constructor:_c,render:function(e,t,n){var r=e.autoClear;e.autoClear=!1;var i,a,o;this.overrideMaterial!==void 0&&(o=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(i=e.getClearColor().getHex(),a=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(i,a),this.overrideMaterial!==void 0&&(this.scene.overrideMaterial=o),e.autoClear=r}});var ff={shaderID:"luminosityHighPass",uniforms:{tDiffuse:{value:null},luminosityThreshold:{value:1},smoothWidth:{value:1},defaultColor:{value:new ie(0)},defaultOpacity:{value:0}},vertexShader:["varying vec2 vUv;","void main() {","	vUv = uv;","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join(`
`),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec3 defaultColor;","uniform float defaultOpacity;","uniform float luminosityThreshold;","uniform float smoothWidth;","varying vec2 vUv;","void main() {","	vec4 texel = texture2D( tDiffuse, vUv );","	vec3 luma = vec3( 0.299, 0.587, 0.114 );","	float v = dot( texel.xyz, luma );","	vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );","	float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );","	gl_FragColor = mix( outputColor, texel, alpha );","}"].join(`
`)},Sr=function(e,t,n,r){Pt.call(this),this.strength=t!==void 0?t:1,this.radius=n,this.threshold=r,this.resolution=e!==void 0?new j(e.x,e.y):new j(256,256),this.clearColor=new ie(0,0,0);var i={minFilter:nt,magFilter:nt,format:Tt};this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;var u=Math.round(this.resolution.x/2),h=Math.round(this.resolution.y/2);this.renderTargetBright=new vt(u,h,i),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(var a=0;a<this.nMips;a++){var o=new vt(u,h,i);o.texture.name="UnrealBloomPass.h"+a,o.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(o);var s=new vt(u,h,i);s.texture.name="UnrealBloomPass.v"+a,s.texture.generateMipmaps=!1,this.renderTargetsVertical.push(s),u=Math.round(u/2),h=Math.round(h/2)}ff===void 0&&console.error("UnrealBloomPass relies on LuminosityHighPassShader");var l=ff;this.highPassUniforms=lo.clone(l.uniforms),this.highPassUniforms.luminosityThreshold.value=r,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new rt({uniforms:this.highPassUniforms,vertexShader:l.vertexShader,fragmentShader:l.fragmentShader,defines:{}}),this.separableBlurMaterials=[];for(var c=[3,5,7,9,11],u=Math.round(this.resolution.x/2),h=Math.round(this.resolution.y/2),a=0;a<this.nMips;a++)this.separableBlurMaterials.push(this.getSeperableBlurMaterial(c[a])),this.separableBlurMaterials[a].uniforms.texSize.value=new j(u,h),u=Math.round(u/2),h=Math.round(h/2);this.compositeMaterial=this.getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=t,this.compositeMaterial.uniforms.bloomRadius.value=.1,this.compositeMaterial.needsUpdate=!0;var f=[1,.8,.6,.4,.2];this.compositeMaterial.uniforms.bloomFactors.value=f,this.bloomTintColors=[new M(1,1,1),new M(1,1,1),new M(1,1,1),new M(1,1,1),new M(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,cs===void 0&&console.error("UnrealBloomPass relies on CopyShader");var d=cs;this.copyUniforms=lo.clone(d.uniforms),this.copyUniforms.opacity.value=1,this.materialCopy=new rt({uniforms:this.copyUniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader,blending:Ia,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this.oldClearColor=new ie,this.oldClearAlpha=1,this.basic=new Vt,this.fsQuad=new Pt.FullScreenQuad(null)};Sr.prototype=Object.assign(Object.create(Pt.prototype),{constructor:Sr,dispose:function(){for(var e=0;e<this.renderTargetsHorizontal.length;e++)this.renderTargetsHorizontal[e].dispose();for(var e=0;e<this.renderTargetsVertical.length;e++)this.renderTargetsVertical[e].dispose();this.renderTargetBright.dispose()},setSize:function(e,t){var n=Math.round(e/2),r=Math.round(t/2);this.renderTargetBright.setSize(n,r);for(var i=0;i<this.nMips;i++)this.renderTargetsHorizontal[i].setSize(n,r),this.renderTargetsVertical[i].setSize(n,r),this.separableBlurMaterials[i].uniforms.texSize.value=new j(n,r),n=Math.round(n/2),r=Math.round(r/2)},render:function(e,t,n,r,i){this.oldClearColor.copy(e.getClearColor()),this.oldClearAlpha=e.getClearAlpha();var a=e.autoClear;e.autoClear=!1,e.setClearColor(this.clearColor,0),i&&e.state.buffers.stencil.setTest(!1),this.renderToScreen&&(this.fsQuad.material=this.basic,this.basic.map=n.texture,e.setRenderTarget(null),e.clear(),this.fsQuad.render(e)),this.highPassUniforms.tDiffuse.value=n.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.fsQuad.material=this.materialHighPassFilter,e.setRenderTarget(this.renderTargetBright),e.clear(),this.fsQuad.render(e);for(var o=this.renderTargetBright,s=0;s<this.nMips;s++)this.fsQuad.material=this.separableBlurMaterials[s],this.separableBlurMaterials[s].uniforms.colorTexture.value=o.texture,this.separableBlurMaterials[s].uniforms.direction.value=Sr.BlurDirectionX,e.setRenderTarget(this.renderTargetsHorizontal[s]),e.clear(),this.fsQuad.render(e),this.separableBlurMaterials[s].uniforms.colorTexture.value=this.renderTargetsHorizontal[s].texture,this.separableBlurMaterials[s].uniforms.direction.value=Sr.BlurDirectionY,e.setRenderTarget(this.renderTargetsVertical[s]),e.clear(),this.fsQuad.render(e),o=this.renderTargetsVertical[s];this.fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,e.setRenderTarget(this.renderTargetsHorizontal[0]),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,i&&e.state.buffers.stencil.setTest(!0),this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(n),this.fsQuad.render(e)),e.setClearColor(this.oldClearColor,this.oldClearAlpha),e.autoClear=a},getSeperableBlurMaterial:function(e){return new rt({defines:{KERNEL_RADIUS:e,SIGMA:e},uniforms:{colorTexture:{value:null},texSize:{value:new j(.5,.5)},direction:{value:new j(.5,.5)}},vertexShader:`varying vec2 vUv;
				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`#include <common>				varying vec2 vUv;
				uniform sampler2D colorTexture;
				uniform vec2 texSize;				uniform vec2 direction;								float gaussianPdf(in float x, in float sigma) {					return 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;				}				void main() {
					vec2 invSize = 1.0 / texSize;					float fSigma = float(SIGMA);					float weightSum = gaussianPdf(0.0, fSigma);					vec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;					for( int i = 1; i < KERNEL_RADIUS; i ++ ) {						float x = float(i);						float w = gaussianPdf(x, fSigma);						vec2 uvOffset = direction * invSize * x;						vec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;						vec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;						diffuseSum += (sample1 + sample2) * w;						weightSum += 2.0 * w;					}					gl_FragColor = vec4(diffuseSum/weightSum, 1.0);
				}`})},getCompositeMaterial:function(e){return new rt({defines:{NUM_MIPS:e},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},dirtTexture:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:`varying vec2 vUv;
				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:"varying vec2 vUv;				uniform sampler2D blurTexture1;				uniform sampler2D blurTexture2;				uniform sampler2D blurTexture3;				uniform sampler2D blurTexture4;				uniform sampler2D blurTexture5;				uniform sampler2D dirtTexture;				uniform float bloomStrength;				uniform float bloomRadius;				uniform float bloomFactors[NUM_MIPS];				uniform vec3 bloomTintColors[NUM_MIPS];								float lerpBloomFactor(const in float factor) { 					float mirrorFactor = 1.2 - factor;					return mix(factor, mirrorFactor, bloomRadius);				}								void main() {					gl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + 													 lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + 													 lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + 													 lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + 													 lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );				}"})}}),Sr.BlurDirectionX=new j(1,0),Sr.BlurDirectionY=new j(0,1);const{randFloat:I0,randFloatSpread:fs}=xs,N0={gpgpuSize:256,bloomStrength:1.5,bloomRadius:.5,bloomThreshold:.25,colors:[Math.random()*16777215,Math.random()*16777215,Math.random()*16777215],geometry:"custom",geometryScale:[1,1,1],lights:[{type:"ambient",params:[16777215,.5]},{type:"point",params:[16777215,1],props:{position:[0,0,0]}},{type:"point",params:[16748640,.75],props:{position:[0,-100,-100]}},{type:"point",params:[6328575,.75],props:{position:[0,100,100]}}],materialParams:{},noiseCoordScale:.01,noiseIntensity:.0025,noiseTimeCoef:4e-4,attractionRadius1:150,attractionRadius2:250,maxVelocity:.25};function z0(e){const t={...N0,...e},n=t.gpgpuSize,r=n*n;let i,a,o,s,l;const c={value:null},u={value:null},h={value:null},f={value:new gn(...t.geometryScale)},d={value:0},p={value:t.noiseCoordScale},v={value:t.noiseIntensity},m={value:t.maxVelocity},g={value:t.attractionRadius1},x={value:t.attractionRadius2},b={value:new gn},S={uTexturePosition:c,uOldTexturePosition:u,uTextureVelocity:h},w={uScale:f,uTime:d,uNoiseCoordScale:p,uNoiseIntensity:v,uMaxVelocity:m,uAttractionRadius1:g,uAttractionRadius2:x,uMouse:b},T={...S,...w};let L,I,C,z,N,B,U;return{three:Si({...vc(e),antialias:!1,orbitControls:!0,initRenderer({renderer:q}){F(q)},initCamera(q){z=q.camera,z.position.z=70},initScene({renderer:q,width:H,height:V,camera:W,scene:le}){R(le),I=new _c(le,W),C=new Sr(new Ht(H,V),t.bloomStrength,t.bloomRadius,t.bloomThreshold),L=new uf(q),L.addPass(I),L.addPass(C)},afterResize({width:q,height:H}){L&&L.setSize(q,H)},beforeRender({clock:q}){d.value=q.time*t.noiseTimeCoef,i.compute(),c.value=l.renderTargets[i.currentTextureIndex].texture,u.value=l.renderTargets[i.currentTextureIndex===0?1:0].texture,h.value=s.renderTargets[i.currentTextureIndex].texture},render(){L.render()}}),config:t,uniforms:T,setColors:G};function F(q){i=new ls(n,n,q),q.capabilities.isWebGL2||i.setDataType(vs),a=i.createTexture(),o=i.createTexture(),k(a,o),s=i.addVariable("textureVelocity",`
      ${Mr}
      uniform float uTime;
      uniform vec3 uMouse;
      uniform float uNoiseCoordScale;
      uniform float uNoiseIntensity;
      uniform float uMaxVelocity;
      uniform float uAttractionRadius1;
      uniform float uAttractionRadius2;

      void main() {
        vec2 uv = gl_FragCoord.xy / resolution.xy;
        vec4 pos = texture2D(texturePosition, uv);
        vec4 vel = texture2D(textureVelocity, uv);

        vec3 grad;
        float n = psrdnoise(pos.xyz * uNoiseCoordScale, vec3(0), uTime, grad);
        vel.xyz += (pos.w * 0.75) * grad * uNoiseIntensity;

        vec3 dv = -pos.xyz;
        float coef = smoothstep(uAttractionRadius1, uAttractionRadius2, length(dv));
        vel.xyz = vel.xyz + pos.w * coef * normalize(dv);
        vel.xyz = clamp(vel.xyz, -uMaxVelocity, uMaxVelocity);

        gl_FragColor = vel;
      }
    `,o),l=i.addVariable("texturePosition",`
      ${Mr}
      uniform float uTime;
      uniform vec3 uMouse;
      void main() {
        vec2 uv = gl_FragCoord.xy / resolution.xy;
        vec4 pos = texture2D(texturePosition, uv);
        vec4 vel = texture2D(textureVelocity, uv);
        pos.xyz += vel.xyz;
        gl_FragColor = pos;
      }
    `,a),i.setVariableDependencies(s,[l,s]),i.setVariableDependencies(l,[l,s]),Object.keys(w).forEach(V=>{s.material.uniforms[V]=T[V],l.material.uniforms[V]=T[V]});const H=i.init();if(H!==null)throw new Error(H)}function R(q){switch(t.background!==void 0&&(q.background=new Ar(t.background)),mc(q,t.lights),t.geometry){case"box":N=new Ff;break;case"capsule":N=new zf(.2,1,4,8).rotateX(Math.PI/2);break;case"cone":N=new Nf(.4,2,6).rotateX(Math.PI/2);break;case"octahedron":N=new If(1,0).rotateX(Math.PI/2);break;case"sphere":N=new Of(.5,8,8);break;default:N=F0(1)}const H=new Float32Array(r*2);let V=0;for(let W=0;W<n;W++)for(let le=0;le<n;le++)H[V++]=le/(n-1),H[V++]=W/(n-1);N.setAttribute("gpuUv",new Ti(H,2)),B=new gs({metalness:.75,roughness:.25,side:ms,...t.materialParams,onBeforeCompile:W=>{Object.keys(T).forEach(le=>{W.uniforms[le]=T[le]}),W.vertexShader=`
          uniform sampler2D uTexturePosition;
          uniform sampler2D uOldTexturePosition;
          uniform sampler2D uTextureVelocity;
          uniform vec3 uScale;
          attribute vec2 gpuUv;
          varying vec4 vPos;
          varying vec4 vVel;
          ${gc}
          ${yc}
        `+W.vertexShader,W.vertexShader=W.vertexShader.replace("#include <defaultnormal_vertex>",`
          vPos = texture2D(uTexturePosition, gpuUv);
          vec4 oldPos = texture2D(uOldTexturePosition, gpuUv);
          vVel = texture2D(uTextureVelocity, gpuUv);

          mat3 rmat = lookAt(oldPos.xyz, vPos.xyz, vec3(0, 1, 0));
          mat4 im = compose(vPos.xyz, rmat, (0.5 + vPos.w) * uScale);

          vec3 transformedNormal = objectNormal;
          mat3 m = mat3(im);
          transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
          transformedNormal = m * transformedNormal;
          transformedNormal = normalMatrix * transformedNormal;
        `),W.vertexShader=W.vertexShader.replace("#include <project_vertex>",`
          vec4 mvPosition = modelViewMatrix * im * vec4(transformed, 1.0);
          gl_Position = projectionMatrix * mvPosition;
        `)}}),U=new ys(N,B,r),G(t.colors),q.add(U)}function G(q){if(Array.isArray(q)&&q.length>1){const H=Aa(q);for(let V=0;V<r;V++)U.setColorAt(V,H.getColorAt(V/r));U.instanceColor.needsUpdate=!0}}function k(q,H){const V=new gn,W=q.image.data,le=H.image.data;for(let Oe=0,Re=W.length;Oe<Re;Oe+=4)V.set(fs(1),fs(1),fs(1)).normalize().multiplyScalar(fs(t.attractionRadius1*2)).toArray(W,Oe),W[Oe+3]=I0(.1,1),V.set(0,0,0).toArray(le,Oe),le[Oe+3]=0}}function F0(e){const t=[{p:[e*.5,0,-e],n:[0,1,0]},{p:[-e*.5,0,-e],n:[0,1,0]},{p:[0,0,e],n:[0,1,0]},{p:[0,-e*.5,-e],n:[1,0,0]},{p:[0,e*.5,-e],n:[1,0,0]},{p:[0,0,e],n:[1,0,0]}],n=[0,1,2,3,4,5],r=[],i=[];for(const o of t)r.push(...o.p),i.push(...o.n);const a=new Bf;return a.setAttribute("position",new Lc(r,3)),a.setAttribute("normal",new Lc(i,3)),a.setIndex(n),a}const{randFloat:B0,randFloatSpread:Kn}=xs,U0={gpgpuSize:64,background:16777215,material:"basic",materialParams:{},texture:null,textureCount:1,colors:[16777215,16777215],lights:[{type:"ambient",params:[16777215,.25]},{type:"directional",params:[16777215,1],props:{position:[0,0,50]}}],fogDensity:.01,fishScale:[1,1,1],fishWidthSegments:8,fishSpeed:1.5,fishDisplacementScale:.2,noiseCoordScale:.01,noiseTimeCoef:5e-4,noiseIntensity:.0025,attractionRadius1:50,attractionRadius2:100,maxVelocity:.1};function G0(e){const t={...U0,...e};if(!["basic","phong","standard"].includes(t.material))throw new Error(`Invalid material ${t.material}`);if(!Number.isInteger(t.fishWidthSegments)||t.fishWidthSegments%2!==0)throw new Error(`Invalid fishWidthSegments ${t.fishWidthSegments}`);const n=t.gpgpuSize,r=n*n;let i,a,o,s,l;const c={value:null},u={value:null},h={value:null},f={value:0},d={value:t.noiseCoordScale},p={value:t.noiseIntensity},v={value:t.maxVelocity},m={value:t.attractionRadius1},g={value:t.attractionRadius2},x={value:new gn(...t.fishScale)},b={value:t.fishSpeed},S={value:t.fishDisplacementScale},w={uTexturePosition:c,uOldTexturePosition:u,uTextureVelocity:h},T={uTime:f,uNoiseCoordScale:d,uNoiseIntensity:p,uMaxVelocity:v,uAttractionRadius1:m,uAttractionRadius2:g,uFishScale:x,uFishSpeed:b,uFishDisplacementScale:S},L={...w,...T};let I,C,z;return{three:Si({...vc(e),antialias:!0,orbitControls:!0,initRenderer({renderer:R}){N(R)},initCamera({camera:R}){R.position.set(0,0,70)},initScene({scene:R}){B(R)},beforeRender({clock:R}){f.value=R.time*t.noiseTimeCoef,i.compute(),c.value=l.renderTargets[i.currentTextureIndex].texture,u.value=l.renderTargets[i.currentTextureIndex===0?1:0].texture,h.value=s.renderTargets[i.currentTextureIndex].texture}}),config:t,uniforms:L,setColors:U};function N(R){i=new ls(n,n,R),R.capabilities.isWebGL2||i.setDataType(vs),a=i.createTexture(),o=i.createTexture(),F(a,o),s=i.addVariable("textureVelocity",`
      ${Mr}
      uniform float uTime;
      uniform float uNoiseCoordScale;
      uniform float uNoiseIntensity;
      uniform float uMaxVelocity;
      uniform float uAttractionRadius1;
      uniform float uAttractionRadius2;
      uniform float uFishSpeed;
      void main() {
        vec2 uv = gl_FragCoord.xy / resolution.xy;
        vec4 pos = texture2D(texturePosition, uv);
        vec4 vel = texture2D(textureVelocity, uv);

        vec3 grad;
        float n = psrdnoise(pos.xyz * uNoiseCoordScale, vec3(0), uTime, grad);
        grad = grad * uNoiseIntensity;
        vel.xyz = vel.xyz + (pos.w * 0.75) * grad;

        vec3 dv = -pos.xyz;
        float coef = smoothstep(uAttractionRadius1, uAttractionRadius2, length(dv));
        vel.xyz = vel.xyz + pos.w * coef * normalize(dv);
        vel.xyz = clamp(vel.xyz, -uMaxVelocity, uMaxVelocity);

        vel.w = mod(vel.w + length(vel.xyz) * (0.5 + pos.w) * uFishSpeed, 6.2831853071);
        gl_FragColor = vel;
      }
    `,o),l=i.addVariable("texturePosition",`
      ${Mr}
      uniform float uTime;
      void main() {
        vec2 uv = gl_FragCoord.xy / resolution.xy;
        vec4 pos = texture2D(texturePosition, uv);
        vec4 vel = texture2D(textureVelocity, uv);
        pos.xyz += vel.xyz;
        gl_FragColor = pos;
      }
    `,a),i.setVariableDependencies(s,[l,s]),i.setVariableDependencies(l,[l,s]),Object.keys(T).forEach(k=>{s.material.uniforms[k]=L[k],l.material.uniforms[k]=L[k]});const G=i.init();if(G!==null)throw new Error(G)}function B(R){t.background!==void 0&&(R.background=new Ar(t.background),t.fogDensity&&(R.fog=new Uf(t.background,t.fogDensity))),mc(R,t.lights),I=new Da(2,1,t.fishWidthSegments,1).rotateY(Math.PI/2);const G=new Float32Array(r*2),k=new Float32Array(r);let q=0,H=0;for(let W=0;W<n;W++)for(let le=0;le<n;le++)G[q++]=le/(n-1),G[q++]=W/(n-1),k[H++]=Math.floor(Math.random()*t.textureCount);I.setAttribute("gpuUv",new Ti(G,2)),I.setAttribute("mapIndex",new Ti(k,1));const V={side:ms,...t.materialParams};switch(t.texture&&(V.map=new Tc().load(t.texture)),V.onBeforeCompile=W=>{W.defines={COMPUTE_NORMALS:t.material!=="basic",FISH_DZ:(2/t.fishWidthSegments).toFixed(10),TEXTURE_COUNT:t.textureCount.toFixed(10)},Object.keys(L).forEach(le=>{W.uniforms[le]=L[le]}),W.vertexShader=`
        uniform sampler2D uTexturePosition;
        uniform sampler2D uOldTexturePosition;
        uniform sampler2D uTextureVelocity;
        uniform vec3 uFishScale;
        uniform float uFishDisplacementScale;
        attribute vec2 gpuUv;
        attribute float mapIndex;
        varying vec4 vPos;
        varying vec4 vVel;
        varying float vMapIndex;
        ${gc}
        ${yc}
      `+W.vertexShader,W.vertexShader=W.vertexShader.replace("#include <defaultnormal_vertex>",""),W.vertexShader=W.vertexShader.replace("#include <normal_vertex>",""),W.vertexShader=W.vertexShader.replace("#include <begin_vertex>",`
        vPos = texture2D(uTexturePosition, gpuUv);
        vec4 oldPos = texture2D(uOldTexturePosition, gpuUv);
        vVel = texture2D(uTextureVelocity, gpuUv);
        vMapIndex = float(mapIndex);

        mat3 rmat = lookAt(oldPos.xyz, vPos.xyz, vec3(0, 1, 0));
        mat4 im = compose(vPos.xyz, rmat, (0.5 + vPos.w) * uFishScale);

        vec3 transformed = vec3(position);

        #ifdef COMPUTE_NORMALS
          vec3 transformedNormal = objectNormal; 
        #endif

        float dz = transformed.z + 1.0;
        float sdz = smoothstep(2.0, 0.0, dz);
        transformed.x += sin(vVel.w + dz * PI * 1.5) * sdz * uFishDisplacementScale;

        #ifdef COMPUTE_NORMALS
          float dz1 = dz - 0.2;
          float sdz1 = smoothstep(2.0, 0.0, dz1);
          float dx1 = sin(vVel.w + dz1 * PI * 1.5) * sdz1 * uFishDisplacementScale - transformed.x;
          vec3 v1 = vec3(dx1, 0.0, -FISH_DZ);
          vec3 v2 = vec3(0.0, 1.0, 0.0);
          transformedNormal = normalize(cross(v1, v2));
        #endif

        #ifdef COMPUTE_NORMALS
          #ifdef USE_INSTANCING
            mat3 m = mat3( im );
            transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
            transformedNormal = m * transformedNormal;
          #endif
          transformedNormal = normalMatrix * transformedNormal;
          #ifdef FLIP_SIDED
            transformedNormal = - transformedNormal;
          #endif
          #ifdef USE_TANGENT
            vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
            #ifdef FLIP_SIDED
              transformedTangent = - transformedTangent;
            #endif
          #endif
          #ifndef FLAT_SHADED
            vNormal = normalize( transformedNormal );
            #ifdef USE_TANGENT
              vTangent = normalize( transformedTangent );
              vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
            #endif
          #endif
        #endif
      `),W.vertexShader=W.vertexShader.replace("#include <project_vertex>",`
        vec4 mvPosition = vec4( transformed, 1.0 );
        #ifdef USE_INSTANCING
          mvPosition = im * mvPosition;
        #endif
        mvPosition = modelViewMatrix * mvPosition;
        gl_Position = projectionMatrix * mvPosition;
      `),W.fragmentShader=`
        varying float vMapIndex;
      `+W.fragmentShader,W.fragmentShader=W.fragmentShader.replace("#include <map_fragment>",`
        #ifdef USE_MAP
          vec2 uv = vUv;
          uv.x = (vMapIndex + vUv.x) / TEXTURE_COUNT;
          vec4 sampledDiffuseColor = texture2D(map, uv);
          diffuseColor *= sampledDiffuseColor;
        #endif
      `)},t.material){case"standard":C=new gs(V);break;case"phong":C=new Ac(V);break;default:C=new Ec(V)}z=new ys(I,C,r),U(t.colors),R.add(z)}function U(R){if(Array.isArray(R)&&R.length>1){const G=Aa(R);for(let k=0;k<r;k++)z.setColorAt(k,G.getColorAt(k/r));z.instanceColor.needsUpdate=!0}}function F(R,G){const k=new gn,q=R.image.data,H=G.image.data;for(let V=0,W=q.length;V<W;V+=4)k.set(Kn(1),Kn(1),Kn(1)).normalize().multiplyScalar(Kn(t.attractionRadius1*2)).toArray(q,V),q[V+3]=B0(.1,1),k.set(Kn(1),Kn(1),Kn(1)).normalize().multiplyScalar(Kn(.5)).toArray(H,V),H[V+3]=0}}export{O0 as butterfliesBackground,G0 as fishesBackground,b0 as neonCursor,P0 as noisyLinesBackground,S0 as particlesCursor,z0 as swarmBackground};
//# sourceMappingURL=threejs.module.cdn.min.js.map
